{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet baseHoverDelegate = {\n  showHover: () => undefined,\n  hideHover: () => undefined,\n  showAndFocusLastHover: () => undefined,\n  setupManagedHover: () => null,\n  showManagedHover: () => undefined\n};\n/**\n * Sets the hover delegate for use **only in the `base/` layer**.\n */\nexport function setBaseLayerHoverDelegate(hoverDelegate) {\n  baseHoverDelegate = hoverDelegate;\n}\n/**\n * Gets the hover delegate for use **only in the `base/` layer**.\n *\n * Since the hover service depends on various platform services, this delegate essentially bypasses\n * the standard dependency injection mechanism by injecting a global hover service at start up. The\n * only reason this should be used is if `IHoverService` is not available.\n */\nexport function getBaseLayerHoverDelegate() {\n  return baseHoverDelegate;\n}","map":{"version":3,"names":["baseHoverDelegate","showHover","undefined","hideHover","showAndFocusLastHover","setupManagedHover","showManagedHover","setBaseLayerHoverDelegate","hoverDelegate","getBaseLayerHoverDelegate"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/base/browser/ui/hover/hoverDelegate2.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet baseHoverDelegate = {\n    showHover: () => undefined,\n    hideHover: () => undefined,\n    showAndFocusLastHover: () => undefined,\n    setupManagedHover: () => null,\n    showManagedHover: () => undefined\n};\n/**\n * Sets the hover delegate for use **only in the `base/` layer**.\n */\nexport function setBaseLayerHoverDelegate(hoverDelegate) {\n    baseHoverDelegate = hoverDelegate;\n}\n/**\n * Gets the hover delegate for use **only in the `base/` layer**.\n *\n * Since the hover service depends on various platform services, this delegate essentially bypasses\n * the standard dependency injection mechanism by injecting a global hover service at start up. The\n * only reason this should be used is if `IHoverService` is not available.\n */\nexport function getBaseLayerHoverDelegate() {\n    return baseHoverDelegate;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,iBAAiB,GAAG;EACpBC,SAAS,EAAEA,CAAA,KAAMC,SAAS;EAC1BC,SAAS,EAAEA,CAAA,KAAMD,SAAS;EAC1BE,qBAAqB,EAAEA,CAAA,KAAMF,SAAS;EACtCG,iBAAiB,EAAEA,CAAA,KAAM,IAAI;EAC7BC,gBAAgB,EAAEA,CAAA,KAAMJ;AAC5B,CAAC;AACD;AACA;AACA;AACA,OAAO,SAASK,yBAAyBA,CAACC,aAAa,EAAE;EACrDR,iBAAiB,GAAGQ,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAAA,EAAG;EACxC,OAAOT,iBAAiB;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}