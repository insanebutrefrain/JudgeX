{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { computed, ref } from \"vue\";\nimport { getLeafKeys } from \"../utils.js\";\nimport { union } from \"../../_utils/array.js\";\nconst useRowSelection = ({\n  selectedKeys,\n  defaultSelectedKeys,\n  rowSelection,\n  currentAllRowKeys,\n  currentAllEnabledRowKeys,\n  emit\n}) => {\n  var _a, _b, _c;\n  const isRadio = computed(() => {\n    var _a2;\n    return ((_a2 = rowSelection.value) == null ? void 0 : _a2.type) === \"radio\";\n  });\n  const _selectedRowKeys = ref((_c = (_b = defaultSelectedKeys.value) != null ? _b : (_a = rowSelection.value) == null ? void 0 : _a.defaultSelectedRowKeys) != null ? _c : []);\n  const selectedRowKeys = computed(() => {\n    var _a2, _b2, _c2;\n    return (_c2 = (_b2 = selectedKeys.value) != null ? _b2 : (_a2 = rowSelection.value) == null ? void 0 : _a2.selectedRowKeys) != null ? _c2 : _selectedRowKeys.value;\n  });\n  const currentSelectedRowKeys = computed(() => selectedRowKeys.value.filter(key => currentAllRowKeys.value.includes(key)));\n  const handleSelectAll = checked => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectAll\", checked);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const handleSelect = (checked, record) => {\n    const selectedAllRowKeys = isRadio.value ? [record.key] : union(selectedRowKeys.value, [record.key], !checked);\n    _selectedRowKeys.value = selectedAllRowKeys;\n    emit(\"select\", selectedAllRowKeys, record.key, record.raw);\n    emit(\"selectionChange\", selectedAllRowKeys);\n    emit(\"update:selectedKeys\", selectedAllRowKeys);\n  };\n  const handleSelectAllLeafs = (record, checked) => {\n    const newKeys = union(selectedRowKeys.value, getLeafKeys(record), !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"select\", newKeys, record.key, record.raw);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const select = (rowKey, checked = true) => {\n    const _rowKeys = [].concat(rowKey);\n    const newSelectedRowKeys = isRadio.value ? _rowKeys : union(selectedRowKeys.value, _rowKeys, !checked);\n    _selectedRowKeys.value = newSelectedRowKeys;\n    emit(\"selectionChange\", newSelectedRowKeys);\n    emit(\"update:selectedKeys\", newSelectedRowKeys);\n  };\n  const selectAll = (checked = true) => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const clearSelected = () => {\n    _selectedRowKeys.value = [];\n    emit(\"selectionChange\", []);\n    emit(\"update:selectedKeys\", []);\n  };\n  return {\n    isRadio,\n    selectedRowKeys,\n    currentSelectedRowKeys,\n    handleSelectAll,\n    handleSelect,\n    handleSelectAllLeafs,\n    select,\n    selectAll,\n    clearSelected\n  };\n};\nexport { useRowSelection };","map":{"version":3,"names":["computed","ref","getLeafKeys","union","useRowSelection","selectedKeys","defaultSelectedKeys","rowSelection","currentAllRowKeys","currentAllEnabledRowKeys","emit","_a","_b","_c","isRadio","_a2","value","type","_selectedRowKeys","defaultSelectedRowKeys","selectedRowKeys","_b2","_c2","currentSelectedRowKeys","filter","key","includes","handleSelectAll","checked","newKeys","handleSelect","record","selectedAllRowKeys","raw","handleSelectAllLeafs","select","rowKey","_rowKeys","concat","newSelectedRowKeys","selectAll","clearSelected"],"sources":["P:/VSCode/Web/judgex_front/node_modules/@arco-design/web-vue/es/table/hooks/use-row-selection.js"],"sourcesContent":["import { computed, ref } from \"vue\";\nimport { getLeafKeys } from \"../utils.js\";\nimport { union } from \"../../_utils/array.js\";\nconst useRowSelection = ({\n  selectedKeys,\n  defaultSelectedKeys,\n  rowSelection,\n  currentAllRowKeys,\n  currentAllEnabledRowKeys,\n  emit\n}) => {\n  var _a, _b, _c;\n  const isRadio = computed(() => {\n    var _a2;\n    return ((_a2 = rowSelection.value) == null ? void 0 : _a2.type) === \"radio\";\n  });\n  const _selectedRowKeys = ref(\n    (_c = (_b = defaultSelectedKeys.value) != null ? _b : (_a = rowSelection.value) == null ? void 0 : _a.defaultSelectedRowKeys) != null ? _c : []\n  );\n  const selectedRowKeys = computed(\n    () => {\n      var _a2, _b2, _c2;\n      return (_c2 = (_b2 = selectedKeys.value) != null ? _b2 : (_a2 = rowSelection.value) == null ? void 0 : _a2.selectedRowKeys) != null ? _c2 : _selectedRowKeys.value;\n    }\n  );\n  const currentSelectedRowKeys = computed(\n    () => selectedRowKeys.value.filter((key) => currentAllRowKeys.value.includes(key))\n  );\n  const handleSelectAll = (checked) => {\n    const newKeys = union(\n      selectedRowKeys.value,\n      currentAllEnabledRowKeys.value,\n      !checked\n    );\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectAll\", checked);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const handleSelect = (checked, record) => {\n    const selectedAllRowKeys = isRadio.value ? [record.key] : union(selectedRowKeys.value, [record.key], !checked);\n    _selectedRowKeys.value = selectedAllRowKeys;\n    emit(\"select\", selectedAllRowKeys, record.key, record.raw);\n    emit(\"selectionChange\", selectedAllRowKeys);\n    emit(\"update:selectedKeys\", selectedAllRowKeys);\n  };\n  const handleSelectAllLeafs = (record, checked) => {\n    const newKeys = union(selectedRowKeys.value, getLeafKeys(record), !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"select\", newKeys, record.key, record.raw);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const select = (rowKey, checked = true) => {\n    const _rowKeys = [].concat(rowKey);\n    const newSelectedRowKeys = isRadio.value ? _rowKeys : union(selectedRowKeys.value, _rowKeys, !checked);\n    _selectedRowKeys.value = newSelectedRowKeys;\n    emit(\"selectionChange\", newSelectedRowKeys);\n    emit(\"update:selectedKeys\", newSelectedRowKeys);\n  };\n  const selectAll = (checked = true) => {\n    const newKeys = union(\n      selectedRowKeys.value,\n      currentAllEnabledRowKeys.value,\n      !checked\n    );\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const clearSelected = () => {\n    _selectedRowKeys.value = [];\n    emit(\"selectionChange\", []);\n    emit(\"update:selectedKeys\", []);\n  };\n  return {\n    isRadio,\n    selectedRowKeys,\n    currentSelectedRowKeys,\n    handleSelectAll,\n    handleSelect,\n    handleSelectAllLeafs,\n    select,\n    selectAll,\n    clearSelected\n  };\n};\nexport { useRowSelection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}