{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, mergeProps, isVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n  if (code) {\n    componentTags.push(\"code\");\n  }\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n  return componentTags;\n}\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return {\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false,\n    css: false,\n    ...omit(config, [\"showTooltip\"]),\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  };\n}\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": text => true,\n    \"update:editText\": text => true,\n    \"editEnd\": () => true,\n    \"update:editing\": editing => true,\n    \"copy\": text => true,\n    \"ellipsis\": isEllipsis => true,\n    \"expand\": expanded => true\n  },\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n    function onEditEnd() {\n      if (!editing.value) return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n    const isCopied = ref(false);\n    let copyTimer = null;\n    function onCopyClick() {\n      var _a;\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n    function renderOperations(forceRenderExpand = false) {\n      if (ellipsisConfig.value.css) {\n        return createVNode(Operations, {\n          \"editable\": editable.value,\n          \"copyable\": copyable.value,\n          \"expandable\": ellipsisConfig.value.expandable,\n          \"isCopied\": isCopied.value,\n          \"isEllipsis\": showCSSTooltip.value,\n          \"expanded\": expanded.value,\n          \"forceRenderExpand\": forceRenderExpand || expanded.value,\n          \"editTooltipProps\": props.editTooltipProps,\n          \"copyTooltipProps\": props.copyTooltipProps,\n          \"onEdit\": onEditStart,\n          \"onCopy\": onCopyClick,\n          \"onExpand\": onExpandClick\n        }, {\n          \"copy-tooltip\": slots[\"copy-tooltip\"],\n          \"copy-icon\": slots[\"copy-icon\"],\n          \"expand-node\": slots[\"expand-node\"]\n        });\n      }\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n    function calEllipsis() {\n      if (!wrapperRef.value) return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        if (!ellipsisConfig.value.css) {\n          emit(\"ellipsis\", ellipsis2);\n        }\n      }\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis) return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, newVal => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    const contentRef = ref();\n    const showCSSTooltip = ref(false);\n    const calTooltip = () => {\n      if (wrapperRef.value && contentRef.value) {\n        const _show = contentRef.value.offsetHeight > wrapperRef.value.offsetHeight;\n        if (_show !== showCSSTooltip.value) {\n          showCSSTooltip.value = _show;\n          emit(\"ellipsis\", _show);\n        }\n      }\n    };\n    const ellipsisStyle = computed(() => {\n      if (expanded.value) {\n        return {};\n      }\n      return {\n        \"overflow\": \"hidden\",\n        \"text-overflow\": \"ellipsis\",\n        \"display\": \"-webkit-box\",\n        \"-webkit-line-clamp\": ellipsisConfig.value.rows,\n        \"-webkit-box-orient\": \"vertical\"\n      };\n    });\n    return () => {\n      var _a, _b;\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": text => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      if (ellipsisConfig.value.css) {\n        const Content2 = Wrap(props, children);\n        const Outer = createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef,\n          \"style\": ellipsisStyle.value\n        }, titleAttrs, attrs), {\n          default: () => [createVNode(\"span\", {\n            \"ref\": contentRef\n          }, [Content2])]\n        });\n        if (showCSSTooltip.value) {\n          return createVNode(TooltipComponent, mergeProps(tooltipProps, {\n            \"onResize\": () => calTooltip()\n          }), {\n            default: () => [Outer],\n            content: () => fullText.value\n          });\n        }\n        return createVNode(ResizeObserver, {\n          \"onResize\": () => {\n            calTooltip();\n          }\n        }, _isSlot(Outer) ? Outer : {\n          default: () => [Outer]\n        });\n      }\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n});\nexport { Base as default };","map":{"version":3,"names":["defineComponent","toRefs","computed","ref","reactive","onUnmounted","watch","onMounted","onUpdated","createVNode","mergeProps","isVNode","getPrefixCls","isObject","EditContent","Operations","ResizeObserver","omit","useMergeState","measure","clipboard","getInnerText","caf","raf","Tooltip","Popover","_isSlot","s","Object","prototype","toString","call","getComponentTags","props","bold","mark","underline","delete","propDelete","code","componentTags","push","Wrap","children","markStyle","color","backgroundColor","reduce","content","Tag","attrs","style","default","normalizeEllipsisConfig","config","showTooltip","TooltipComponent","type","tooltipProps","rows","suffix","ellipsisStr","expandable","css","Base","name","inheritAttrs","component","String","required","Boolean","disabled","editable","editing","defaultEditing","editText","copyable","copyText","copyDelay","Number","ellipsis","editTooltipProps","copyTooltipProps","emits","editStart","text","editEnd","isEllipsis","expanded","setup","slots","emit","propEditing","prefixCls","classNames","wrapperRef","fullText","setEditing","value","mergeEditing","onEditStart","onEditChange","onEditEnd","isCopied","copyTimer","onCopyClick","_a","setTimeout","clearTimeout","ellipsisText","ellipsisConfig","rafId","onExpandClick","newVal","renderOperations","forceRenderExpand","showCSSTooltip","calEllipsis","ellipsis2","resizeOnNextFrame","needCalEllipsis","updateFullText","_fullText","contentRef","calTooltip","_show","offsetHeight","ellipsisStyle","_b","_editText","showEllipsis","titleAttrs","title","Component","Content2","Outer","onResize","Content"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/@arco-design/web-vue/es/typography/base.js"],"sourcesContent":["import { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, mergeProps, isVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n  if (code) {\n    componentTags.push(\"code\");\n  }\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n  return componentTags;\n}\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return {\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false,\n    css: false,\n    ...omit(config, [\"showTooltip\"]),\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  };\n}\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": (text) => true,\n    \"update:editText\": (text) => true,\n    \"editEnd\": () => true,\n    \"update:editing\": (editing) => true,\n    \"copy\": (text) => true,\n    \"ellipsis\": (isEllipsis) => true,\n    \"expand\": (expanded) => true\n  },\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n    function onEditEnd() {\n      if (!editing.value)\n        return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n    const isCopied = ref(false);\n    let copyTimer = null;\n    function onCopyClick() {\n      var _a;\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n    function renderOperations(forceRenderExpand = false) {\n      if (ellipsisConfig.value.css) {\n        return createVNode(Operations, {\n          \"editable\": editable.value,\n          \"copyable\": copyable.value,\n          \"expandable\": ellipsisConfig.value.expandable,\n          \"isCopied\": isCopied.value,\n          \"isEllipsis\": showCSSTooltip.value,\n          \"expanded\": expanded.value,\n          \"forceRenderExpand\": forceRenderExpand || expanded.value,\n          \"editTooltipProps\": props.editTooltipProps,\n          \"copyTooltipProps\": props.copyTooltipProps,\n          \"onEdit\": onEditStart,\n          \"onCopy\": onCopyClick,\n          \"onExpand\": onExpandClick\n        }, {\n          \"copy-tooltip\": slots[\"copy-tooltip\"],\n          \"copy-icon\": slots[\"copy-icon\"],\n          \"expand-node\": slots[\"expand-node\"]\n        });\n      }\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n    function calEllipsis() {\n      if (!wrapperRef.value)\n        return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        if (!ellipsisConfig.value.css) {\n          emit(\"ellipsis\", ellipsis2);\n        }\n      }\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis)\n        return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, (newVal) => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    const contentRef = ref();\n    const showCSSTooltip = ref(false);\n    const calTooltip = () => {\n      if (wrapperRef.value && contentRef.value) {\n        const _show = contentRef.value.offsetHeight > wrapperRef.value.offsetHeight;\n        if (_show !== showCSSTooltip.value) {\n          showCSSTooltip.value = _show;\n          emit(\"ellipsis\", _show);\n        }\n      }\n    };\n    const ellipsisStyle = computed(() => {\n      if (expanded.value) {\n        return {};\n      }\n      return {\n        \"overflow\": \"hidden\",\n        \"text-overflow\": \"ellipsis\",\n        \"display\": \"-webkit-box\",\n        \"-webkit-line-clamp\": ellipsisConfig.value.rows,\n        \"-webkit-box-orient\": \"vertical\"\n      };\n    });\n    return () => {\n      var _a, _b;\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": (text) => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      if (ellipsisConfig.value.css) {\n        const Content2 = Wrap(props, children);\n        const Outer = createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef,\n          \"style\": ellipsisStyle.value\n        }, titleAttrs, attrs), {\n          default: () => [createVNode(\"span\", {\n            \"ref\": contentRef\n          }, [Content2])]\n        });\n        if (showCSSTooltip.value) {\n          return createVNode(TooltipComponent, mergeProps(tooltipProps, {\n            \"onResize\": () => calTooltip()\n          }), {\n            default: () => [Outer],\n            content: () => fullText.value\n          });\n        }\n        return createVNode(ResizeObserver, {\n          \"onResize\": () => {\n            calTooltip();\n          }\n        }, _isSlot(Outer) ? Outer : {\n          default: () => [Outer]\n        });\n      }\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n});\nexport { Base as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}