{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n  get onDidContentSizeChange() {\n    return this._editors.onDidContentSizeChange;\n  }\n  constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n    super();\n    this._domElement = _domElement;\n    this._parentContextKeyService = _parentContextKeyService;\n    this._parentInstantiationService = _parentInstantiationService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._editorProgressService = _editorProgressService;\n    this.elements = h('div.monaco-diff-editor.side-by-side', {\n      style: {\n        position: 'relative',\n        height: '100%'\n      }\n    }, [h('div.editor.original@original', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.editor.modified@modified', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.accessibleDiffViewer@accessibleDiffViewer', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    })]);\n    this._diffModelSrc = this._register(disposableObservableValue(this, undefined));\n    this._diffModel = derived(this, reader => this._diffModelSrc.read(reader)?.object);\n    this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n    this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n    this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n    this._boundarySashes = observableValue(this, undefined);\n    this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n    this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader) ? true : this._accessibleDiffViewerShouldBeVisible.read(reader));\n    this._movedBlocksLinesPart = observableValue(this, undefined);\n    this._layoutInfo = derived(this, reader => {\n      const fullWidth = this._rootSizeObserver.width.read(reader);\n      const fullHeight = this._rootSizeObserver.height.read(reader);\n      if (this._rootSizeObserver.automaticLayout) {\n        this.elements.root.style.height = '100%';\n      } else {\n        this.elements.root.style.height = fullHeight + 'px';\n      }\n      const sash = this._sash.read(reader);\n      const gutter = this._gutter.read(reader);\n      const gutterWidth = gutter?.width.read(reader) ?? 0;\n      const overviewRulerPartWidth = this._overviewRulerPart.read(reader)?.width ?? 0;\n      let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n      const sideBySide = !!sash;\n      if (sideBySide) {\n        const sashLeft = sash.sashLeft.read(reader);\n        const movedBlocksLinesWidth = this._movedBlocksLinesPart.read(reader)?.width.read(reader) ?? 0;\n        originalLeft = 0;\n        originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n        gutterLeft = sashLeft - gutterWidth;\n        modifiedLeft = sashLeft;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      } else {\n        gutterLeft = 0;\n        const shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n        originalLeft = gutterWidth;\n        if (shouldHideOriginalLineNumbers) {\n          originalWidth = 0;\n        } else {\n          originalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n        }\n        modifiedLeft = gutterWidth + originalWidth;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      }\n      this.elements.original.style.left = originalLeft + 'px';\n      this.elements.original.style.width = originalWidth + 'px';\n      this._editors.original.layout({\n        width: originalWidth,\n        height: fullHeight\n      }, true);\n      gutter?.layout(gutterLeft);\n      this.elements.modified.style.left = modifiedLeft + 'px';\n      this.elements.modified.style.width = modifiedWidth + 'px';\n      this._editors.modified.layout({\n        width: modifiedWidth,\n        height: fullHeight\n      }, true);\n      return {\n        modifiedEditor: this._editors.modified.getLayoutInfo(),\n        originalEditor: this._editors.original.getLayoutInfo()\n      };\n    });\n    this._diffValue = this._diffModel.map((m, r) => m?.diff.read(r));\n    this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n    codeEditorService.willCreateDiffEditor();\n    this._contextKeyService.createKey('isInDiffEditor', true);\n    this._domElement.appendChild(this.elements.root);\n    this._register(toDisposable(() => this.elements.root.remove()));\n    this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n    this._rootSizeObserver.setAutomaticLayout(options.automaticLayout ?? false);\n    this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n    this._register(autorun(reader => {\n      this._options.setWidth(this._rootSizeObserver.width.read(reader));\n    }));\n    this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n    this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => !!this._diffModel.read(reader)?.movedTextToCompare.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => (this._diffModel.read(reader)?.diff.read(reader)?.mappings.length ?? 0) > 0));\n    this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.original.uri.toString() ?? ''));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.modified.uri.toString() ?? ''));\n    this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader) ? undefined : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n    const dimensions = {\n      height: this._rootSizeObserver.height,\n      width: this._rootSizeObserver.width.map((w, reader) => w - (this._overviewRulerPart.read(reader)?.width ?? 0))\n    };\n    this._sashLayout = new SashLayout(this._options, dimensions);\n    this._sash = derivedDisposable(this, reader => {\n      const showSash = this._options.renderSideBySide.read(reader);\n      this.elements.root.classList.toggle('side-by-side', showSash);\n      return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n    }).recomputeInitiallyAndOnChange(this._store);\n    const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n    derivedDisposable(this, reader => /** @description DiffEditorDecorations */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n    const origViewZoneIdsToIgnore = new Set();\n    const modViewZoneIdsToIgnore = new Set();\n    let isUpdatingViewZones = false;\n    const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n    const originalViewZones = derived(this, reader => {\n      const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n      const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n      return orig.concat(orig2);\n    });\n    const modifiedViewZones = derived(this, reader => {\n      const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n      const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n      return mod.concat(mod2);\n    });\n    this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n      isUpdatingViewZones = isUpdatingOrigViewZones;\n    }, origViewZoneIdsToIgnore));\n    let scrollState;\n    this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n      isUpdatingViewZones = isUpdatingModViewZones;\n      if (isUpdatingViewZones) {\n        scrollState = StableEditorScrollState.capture(this._editors.modified);\n      } else {\n        scrollState?.restore(this._editors.modified);\n        scrollState = undefined;\n      }\n    }, modViewZoneIdsToIgnore));\n    this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => m?.diff.read(r)?.mappings.map(m => m.lineRangeMapping)), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n    const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n    this._register(applyStyle(this.elements.modified, {\n      visibility\n    }));\n    this._register(applyStyle(this.elements.original, {\n      visibility\n    }));\n    this._createDiffEditorContributions();\n    codeEditorService.addDiffEditor(this);\n    this._gutter = derivedDisposable(this, reader => {\n      return this._options.shouldRenderGutterMenu.read(reader) ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes) : undefined;\n    });\n    this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n    derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n      // This is to break the layout info <-> moved blocks lines part dependency cycle.\n      this._movedBlocksLinesPart.set(value, undefined);\n    });\n    this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n    this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n    const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n      /** @isInitializingDiff isDiffUpToDate */\n      if (!m) {\n        return undefined;\n      }\n      return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n    });\n    this._register(autorunWithStore((reader, store) => {\n      /** @description DiffEditorWidgetHelper.ShowProgress */\n      if (isInitializingDiff.read(reader) === true) {\n        const r = this._editorProgressService.show(true, 1000);\n        store.add(toDisposable(() => r.done()));\n      }\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      const model = this._diffModel.read(reader);\n      if (!model) {\n        return;\n      }\n      for (const m of [model.model.original, model.model.modified]) {\n        store.add(m.onWillDispose(e => {\n          onUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n          this.setModel(null);\n        }));\n      }\n    }));\n    this._register(autorun(reader => {\n      this._options.setModel(this._diffModel.read(reader));\n    }));\n  }\n  _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n    const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    return editor;\n  }\n  _createDiffEditorContributions() {\n    const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n    for (const desc of contributions) {\n      try {\n        this._register(this._instantiationService.createInstance(desc.ctor, this));\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n  }\n  get _targetEditor() {\n    return this._editors.modified;\n  }\n  getEditorType() {\n    return EditorType.IDiffEditor;\n  }\n  layout(dimension) {\n    this._rootSizeObserver.observe(dimension);\n  }\n  hasTextFocus() {\n    return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus();\n  }\n  saveViewState() {\n    const originalViewState = this._editors.original.saveViewState();\n    const modifiedViewState = this._editors.modified.saveViewState();\n    return {\n      original: originalViewState,\n      modified: modifiedViewState,\n      modelState: this._diffModel.get()?.serializeState()\n    };\n  }\n  restoreViewState(s) {\n    if (s && s.original && s.modified) {\n      const diffEditorState = s;\n      this._editors.original.restoreViewState(diffEditorState.original);\n      this._editors.modified.restoreViewState(diffEditorState.modified);\n      if (diffEditorState.modelState) {\n        this._diffModel.get()?.restoreSerializedState(diffEditorState.modelState);\n      }\n    }\n  }\n  handleInitialized() {\n    this._editors.original.handleInitialized();\n    this._editors.modified.handleInitialized();\n  }\n  createViewModel(model) {\n    return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n  }\n  getModel() {\n    return this._diffModel.get()?.model ?? null;\n  }\n  setModel(model) {\n    const vm = !model ? null : 'model' in model ? RefCounted.create(model).createNewRef(this) : RefCounted.create(this.createViewModel(model), this);\n    this.setDiffModel(vm);\n  }\n  setDiffModel(viewModel, tx) {\n    const currentModel = this._diffModel.get();\n    if (!viewModel && currentModel) {\n      // Transitioning from a model to no-model\n      this._accessibleDiffViewer.get().close();\n    }\n    if (this._diffModel.get() !== viewModel?.object) {\n      subtransaction(tx, tx => {\n        const vm = viewModel?.object;\n        /** @description DiffEditorWidget.setModel */\n        observableFromEvent.batchEventsGlobally(tx, () => {\n          this._editors.original.setModel(vm ? vm.model.original : null);\n          this._editors.modified.setModel(vm ? vm.model.modified : null);\n        });\n        const prevValueRef = this._diffModelSrc.get()?.createNewRef(this);\n        this._diffModelSrc.set(viewModel?.createNewRef(this), tx);\n        setTimeout(() => {\n          // async, so that this runs after the transaction finished.\n          // TODO: use the transaction to schedule disposal\n          prevValueRef?.dispose();\n        }, 0);\n      });\n    }\n  }\n  /**\n   * @param changedOptions Only has values for top-level options that have actually changed.\n   */\n  updateOptions(changedOptions) {\n    this._options.updateOptions(changedOptions);\n  }\n  getContainerDomNode() {\n    return this._domElement;\n  }\n  getOriginalEditor() {\n    return this._editors.original;\n  }\n  getModifiedEditor() {\n    return this._editors.modified;\n  }\n  /**\n   * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n   */\n  getLineChanges() {\n    const diffState = this._diffModel.get()?.diff.get();\n    if (!diffState) {\n      return null;\n    }\n    return toLineChanges(diffState);\n  }\n  revert(diff) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    this._editors.modified.executeEdits('diffEditor', [{\n      range: diff.modified.toExclusiveRange(),\n      text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n    }]);\n  }\n  revertRangeMappings(diffs) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    const changes = diffs.map(c => ({\n      range: c.modifiedRange,\n      text: model.model.original.getValueInRange(c.originalRange)\n    }));\n    this._editors.modified.executeEdits('diffEditor', changes);\n  }\n  _goTo(diff) {\n    this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n    this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n  }\n  goToDiff(target) {\n    const diffs = this._diffModel.get()?.diff.get()?.mappings;\n    if (!diffs || diffs.length === 0) {\n      return;\n    }\n    const curLineNumber = this._editors.modified.getPosition().lineNumber;\n    let diff;\n    if (target === 'next') {\n      diff = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber) ?? diffs[0];\n    } else {\n      diff = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber) ?? diffs[diffs.length - 1];\n    }\n    this._goTo(diff);\n    if (diff.lineRangeMapping.modified.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff.lineRangeMapping.original.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n        source: 'diffEditor.goToDiff'\n      });\n    }\n  }\n  revealFirstDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    // wait for the diff computation to finish\n    this.waitForDiff().then(() => {\n      const diffs = diffModel.diff.get()?.mappings;\n      if (!diffs || diffs.length === 0) {\n        return;\n      }\n      this._goTo(diffs[0]);\n    });\n  }\n  accessibleDiffViewerNext() {\n    this._accessibleDiffViewer.get().next();\n  }\n  accessibleDiffViewerPrev() {\n    this._accessibleDiffViewer.get().prev();\n  }\n  async waitForDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    await diffModel.waitForDiff();\n  }\n  mapToOtherSide() {\n    const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n    const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n    const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n    let destinationSelection;\n    const sourceSelection = source.getSelection();\n    if (sourceSelection) {\n      const mappings = this._diffModel.get()?.diff.get()?.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n      if (mappings) {\n        const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n        const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n        destinationSelection = Range.plusRange(newRange1, newRange2);\n      }\n    }\n    return {\n      destination,\n      destinationSelection\n    };\n  }\n  switchSide() {\n    const {\n      destination,\n      destinationSelection\n    } = this.mapToOtherSide();\n    destination.focus();\n    if (destinationSelection) {\n      destination.setSelection(destinationSelection);\n    }\n  }\n  exitCompareMove() {\n    const model = this._diffModel.get();\n    if (!model) {\n      return;\n    }\n    model.movedTextToCompare.set(undefined, undefined);\n  }\n  collapseAllUnchangedRegions() {\n    const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.collapseAll(tx);\n      }\n    });\n  }\n  showAllUnchangedRegions() {\n    const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.showAll(tx);\n      }\n    });\n  }\n  _handleCursorPositionChange(e, isModifiedEditor) {\n    if (e?.reason === 3 /* CursorChangeReason.Explicit */) {\n      const diff = this._diffModel.get()?.diff.get()?.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n      if (diff?.lineRangeMapping.modified.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff?.lineRangeMapping.original.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      }\n    }\n  }\n};\nDiffEditorWidget = __decorate([__param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ICodeEditorService), __param(6, IAccessibilitySignalService), __param(7, IEditorProgressService)], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n  return state.mappings.map(x => {\n    const m = x.lineRangeMapping;\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let innerChanges = m.innerChanges;\n    if (m.original.isEmpty) {\n      // Insertion\n      originalStartLineNumber = m.original.startLineNumber - 1;\n      originalEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      originalStartLineNumber = m.original.startLineNumber;\n      originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n    }\n    if (m.modified.isEmpty) {\n      // Deletion\n      modifiedStartLineNumber = m.modified.startLineNumber - 1;\n      modifiedEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      modifiedStartLineNumber = m.modified.startLineNumber;\n      modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n    }\n    return {\n      originalStartLineNumber,\n      originalEndLineNumber,\n      modifiedStartLineNumber,\n      modifiedEndLineNumber,\n      charChanges: innerChanges?.map(m => ({\n        originalStartLineNumber: m.originalRange.startLineNumber,\n        originalStartColumn: m.originalRange.startColumn,\n        originalEndLineNumber: m.originalRange.endLineNumber,\n        originalEndColumn: m.originalRange.endColumn,\n        modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n        modifiedStartColumn: m.modifiedRange.startColumn,\n        modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n        modifiedEndColumn: m.modifiedRange.endColumn\n      }))\n    };\n  });\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","getWindow","h","findLast","BugIndicatingError","onUnexpectedError","Event","toDisposable","autorun","autorunWithStore","derived","disposableObservableValue","observableFromEvent","observableValue","recomputeInitiallyAndOnChange","subtransaction","transaction","derivedDisposable","EditorExtensionsRegistry","ICodeEditorService","StableEditorScrollState","CodeEditorWidget","AccessibleDiffViewer","AccessibleDiffViewerModelFromEditors","DiffEditorDecorations","DiffEditorSash","SashLayout","DiffEditorViewZones","DiffEditorGutter","HideUnchangedRegionsFeature","MovedBlocksLinesFeature","OverviewRulerFeature","RevertButtonsFeature","ObservableElementSizeObserver","RefCounted","applyStyle","applyViewZones","translatePosition","readHotReloadableExport","bindContextKey","Position","Range","EditorType","EditorContextKeys","AccessibilitySignal","IAccessibilitySignalService","IContextKeyService","IInstantiationService","ServiceCollection","IEditorProgressService","DiffEditorEditors","DelegatingEditor","DiffEditorOptions","DiffEditorViewModel","DiffEditorWidget","onDidContentSizeChange","_editors","constructor","_domElement","options","codeEditorWidgetOptions","_parentContextKeyService","_parentInstantiationService","codeEditorService","_accessibilitySignalService","_editorProgressService","elements","style","position","height","_diffModelSrc","_register","undefined","_diffModel","reader","read","object","onDidChangeModel","fromObservableLight","_contextKeyService","createScoped","_instantiationService","createChild","_boundarySashes","_accessibleDiffViewerShouldBeVisible","_accessibleDiffViewerVisible","_options","onlyShowAccessibleDiffViewer","_movedBlocksLinesPart","_layoutInfo","fullWidth","_rootSizeObserver","width","fullHeight","automaticLayout","root","sash","_sash","gutter","_gutter","gutterWidth","overviewRulerPartWidth","_overviewRulerPart","originalLeft","originalWidth","modifiedLeft","modifiedWidth","gutterLeft","sideBySide","sashLeft","movedBlocksLinesWidth","shouldHideOriginalLineNumbers","inlineViewHideOriginalLineNumbers","Math","max","originalObs","layoutInfoDecorationsLeft","original","left","layout","modified","modifiedEditor","getLayoutInfo","originalEditor","_diffValue","map","m","diff","onDidUpdateDiff","willCreateDiffEditor","createKey","appendChild","remove","dimension","setAutomaticLayout","createInstance","setWidth","isEmbeddedDiffEditor","isInEmbeddedEditor","comparingMovedCode","movedTextToCompare","diffEditorRenderSideBySideInlineBreakpointReached","couldShowInlineViewBecauseOfSize","diffEditorInlineMode","renderSideBySide","hasChanges","mappings","o","o2","_createInnerEditor","diffEditorOriginalWritable","originalEditable","diffEditorModifiedWritable","readOnly","diffEditorOriginalUri","model","uri","toString","diffEditorModifiedUri","renderOverviewRuler","_store","dimensions","w","_sashLayout","showSash","classList","toggle","enableSplitViewResizing","resetSash","unchangedRangesFeature","origViewZoneIdsToIgnore","Set","modViewZoneIdsToIgnore","isUpdatingViewZones","viewZoneManager","get","isUpdatingHiddenAreas","originalViewZones","orig","viewZones","orig2","origViewZones","concat","modifiedViewZones","mod","mod2","modViewZones","isUpdatingOrigViewZones","scrollState","isUpdatingModViewZones","capture","restore","_accessibleDiffViewer","accessibleDiffViewer","visible","tx","set","v","lineRangeMapping","visibility","_createDiffEditorContributions","addDiffEditor","shouldRenderGutterMenu","value","runAndSubscribe","onDidChangeCursorPosition","e","_handleCursorPositionChange","isInitializingDiff","isDiffUpToDate","store","show","add","done","onWillDispose","setModel","instantiationService","container","editorWidgetOptions","editor","contributions","getDiffEditorContributions","ctor","err","_targetEditor","getEditorType","IDiffEditor","observe","hasTextFocus","saveViewState","originalViewState","modifiedViewState","modelState","serializeState","restoreViewState","s","diffEditorState","restoreSerializedState","handleInitialized","createViewModel","getModel","vm","create","createNewRef","setDiffModel","viewModel","currentModel","close","batchEventsGlobally","prevValueRef","setTimeout","dispose","updateOptions","changedOptions","getContainerDomNode","getOriginalEditor","getModifiedEditor","getLineChanges","diffState","toLineChanges","revert","executeEdits","range","toExclusiveRange","text","getValueInRange","revertRangeMappings","diffs","changes","modifiedRange","originalRange","_goTo","setPosition","startLineNumber","revealRangeInCenter","goToDiff","curLineNumber","getPosition","lineNumber","find","isEmpty","playSignal","diffLineDeleted","source","diffLineInserted","diffLineModified","revealFirstDiff","diffModel","waitForDiff","then","accessibleDiffViewerNext","next","accessibleDiffViewerPrev","prev","mapToOtherSide","isModifiedFocus","hasWidgetFocus","destination","destinationSelection","sourceSelection","getSelection","flip","newRange1","getStartPosition","newRange2","getEndPosition","plusRange","switchSide","focus","setSelection","exitCompareMove","collapseAllUnchangedRegions","unchangedRegions","region","collapseAll","showAllUnchangedRegions","showAll","isModifiedEditor","reason","contains","state","x","originalStartLineNumber","originalEndLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","innerChanges","endLineNumberExclusive","charChanges","originalStartColumn","startColumn","endLineNumber","originalEndColumn","endColumn","modifiedStartColumn","modifiedEndColumn"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorWidget.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n    get onDidContentSizeChange() { return this._editors.onDidContentSizeChange; }\n    constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n        super();\n        this._domElement = _domElement;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._editorProgressService = _editorProgressService;\n        this.elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n            h('div.editor.original@original', { style: { position: 'absolute', height: '100%', } }),\n            h('div.editor.modified@modified', { style: { position: 'absolute', height: '100%', } }),\n            h('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n        ]);\n        this._diffModelSrc = this._register(disposableObservableValue(this, undefined));\n        this._diffModel = derived(this, reader => this._diffModelSrc.read(reader)?.object);\n        this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n        this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._boundarySashes = observableValue(this, undefined);\n        this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n        this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader)\n            ? true\n            : this._accessibleDiffViewerShouldBeVisible.read(reader));\n        this._movedBlocksLinesPart = observableValue(this, undefined);\n        this._layoutInfo = derived(this, reader => {\n            const fullWidth = this._rootSizeObserver.width.read(reader);\n            const fullHeight = this._rootSizeObserver.height.read(reader);\n            if (this._rootSizeObserver.automaticLayout) {\n                this.elements.root.style.height = '100%';\n            }\n            else {\n                this.elements.root.style.height = fullHeight + 'px';\n            }\n            const sash = this._sash.read(reader);\n            const gutter = this._gutter.read(reader);\n            const gutterWidth = gutter?.width.read(reader) ?? 0;\n            const overviewRulerPartWidth = this._overviewRulerPart.read(reader)?.width ?? 0;\n            let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n            const sideBySide = !!sash;\n            if (sideBySide) {\n                const sashLeft = sash.sashLeft.read(reader);\n                const movedBlocksLinesWidth = this._movedBlocksLinesPart.read(reader)?.width.read(reader) ?? 0;\n                originalLeft = 0;\n                originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n                gutterLeft = sashLeft - gutterWidth;\n                modifiedLeft = sashLeft;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            else {\n                gutterLeft = 0;\n                const shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n                originalLeft = gutterWidth;\n                if (shouldHideOriginalLineNumbers) {\n                    originalWidth = 0;\n                }\n                else {\n                    originalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n                }\n                modifiedLeft = gutterWidth + originalWidth;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            this.elements.original.style.left = originalLeft + 'px';\n            this.elements.original.style.width = originalWidth + 'px';\n            this._editors.original.layout({ width: originalWidth, height: fullHeight }, true);\n            gutter?.layout(gutterLeft);\n            this.elements.modified.style.left = modifiedLeft + 'px';\n            this.elements.modified.style.width = modifiedWidth + 'px';\n            this._editors.modified.layout({ width: modifiedWidth, height: fullHeight }, true);\n            return {\n                modifiedEditor: this._editors.modified.getLayoutInfo(),\n                originalEditor: this._editors.original.getLayoutInfo(),\n            };\n        });\n        this._diffValue = this._diffModel.map((m, r) => m?.diff.read(r));\n        this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n        codeEditorService.willCreateDiffEditor();\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._domElement.appendChild(this.elements.root);\n        this._register(toDisposable(() => this.elements.root.remove()));\n        this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n        this._rootSizeObserver.setAutomaticLayout(options.automaticLayout ?? false);\n        this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n        this._register(autorun(reader => {\n            this._options.setWidth(this._rootSizeObserver.width.read(reader));\n        }));\n        this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n        this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => !!this._diffModel.read(reader)?.movedTextToCompare.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => (this._diffModel.read(reader)?.diff.read(reader)?.mappings.length ?? 0) > 0));\n        this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.original.uri.toString() ?? ''));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.modified.uri.toString() ?? ''));\n        this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader)\n            ? undefined\n            : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n        const dimensions = {\n            height: this._rootSizeObserver.height,\n            width: this._rootSizeObserver.width.map((w, reader) => w - (this._overviewRulerPart.read(reader)?.width ?? 0)),\n        };\n        this._sashLayout = new SashLayout(this._options, dimensions);\n        this._sash = derivedDisposable(this, reader => {\n            const showSash = this._options.renderSideBySide.read(reader);\n            this.elements.root.classList.toggle('side-by-side', showSash);\n            return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n        }).recomputeInitiallyAndOnChange(this._store);\n        const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */ this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n        derivedDisposable(this, reader => /** @description DiffEditorDecorations */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n        const origViewZoneIdsToIgnore = new Set();\n        const modViewZoneIdsToIgnore = new Set();\n        let isUpdatingViewZones = false;\n        const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n        const originalViewZones = derived(this, (reader) => {\n            const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n            const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n            return orig.concat(orig2);\n        });\n        const modifiedViewZones = derived(this, (reader) => {\n            const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n            const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n            return mod.concat(mod2);\n        });\n        this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n            isUpdatingViewZones = isUpdatingOrigViewZones;\n        }, origViewZoneIdsToIgnore));\n        let scrollState;\n        this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n            isUpdatingViewZones = isUpdatingModViewZones;\n            if (isUpdatingViewZones) {\n                scrollState = StableEditorScrollState.capture(this._editors.modified);\n            }\n            else {\n                scrollState?.restore(this._editors.modified);\n                scrollState = undefined;\n            }\n        }, modViewZoneIdsToIgnore));\n        this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => m?.diff.read(r)?.mappings.map(m => m.lineRangeMapping)), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n        const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n        this._register(applyStyle(this.elements.modified, { visibility }));\n        this._register(applyStyle(this.elements.original, { visibility }));\n        this._createDiffEditorContributions();\n        codeEditorService.addDiffEditor(this);\n        this._gutter = derivedDisposable(this, reader => {\n            return this._options.shouldRenderGutterMenu.read(reader)\n                ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes)\n                : undefined;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n        derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */ new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n            // This is to break the layout info <-> moved blocks lines part dependency cycle.\n            this._movedBlocksLinesPart.set(value, undefined);\n        });\n        this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n        this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n        const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n            /** @isInitializingDiff isDiffUpToDate */\n            if (!m) {\n                return undefined;\n            }\n            return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description DiffEditorWidgetHelper.ShowProgress */\n            if (isInitializingDiff.read(reader) === true) {\n                const r = this._editorProgressService.show(true, 1000);\n                store.add(toDisposable(() => r.done()));\n            }\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            const model = this._diffModel.read(reader);\n            if (!model) {\n                return;\n            }\n            for (const m of [model.model.original, model.model.modified]) {\n                store.add(m.onWillDispose(e => {\n                    onUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n                    this.setModel(null);\n                }));\n            }\n        }));\n        this._register(autorun(reader => {\n            this._options.setModel(this._diffModel.read(reader));\n        }));\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n        return editor;\n    }\n    _createDiffEditorContributions() {\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(this._instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n    }\n    get _targetEditor() { return this._editors.modified; }\n    getEditorType() { return EditorType.IDiffEditor; }\n    layout(dimension) {\n        this._rootSizeObserver.observe(dimension);\n    }\n    hasTextFocus() { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n    saveViewState() {\n        const originalViewState = this._editors.original.saveViewState();\n        const modifiedViewState = this._editors.modified.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState,\n            modelState: this._diffModel.get()?.serializeState(),\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._editors.original.restoreViewState(diffEditorState.original);\n            this._editors.modified.restoreViewState(diffEditorState.modified);\n            if (diffEditorState.modelState) {\n                this._diffModel.get()?.restoreSerializedState(diffEditorState.modelState);\n            }\n        }\n    }\n    handleInitialized() {\n        this._editors.original.handleInitialized();\n        this._editors.modified.handleInitialized();\n    }\n    createViewModel(model) {\n        return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n    }\n    getModel() { return this._diffModel.get()?.model ?? null; }\n    setModel(model) {\n        const vm = !model ? null\n            : ('model' in model) ? RefCounted.create(model).createNewRef(this)\n                : RefCounted.create(this.createViewModel(model), this);\n        this.setDiffModel(vm);\n    }\n    setDiffModel(viewModel, tx) {\n        const currentModel = this._diffModel.get();\n        if (!viewModel && currentModel) {\n            // Transitioning from a model to no-model\n            this._accessibleDiffViewer.get().close();\n        }\n        if (this._diffModel.get() !== viewModel?.object) {\n            subtransaction(tx, tx => {\n                const vm = viewModel?.object;\n                /** @description DiffEditorWidget.setModel */\n                observableFromEvent.batchEventsGlobally(tx, () => {\n                    this._editors.original.setModel(vm ? vm.model.original : null);\n                    this._editors.modified.setModel(vm ? vm.model.modified : null);\n                });\n                const prevValueRef = this._diffModelSrc.get()?.createNewRef(this);\n                this._diffModelSrc.set(viewModel?.createNewRef(this), tx);\n                setTimeout(() => {\n                    // async, so that this runs after the transaction finished.\n                    // TODO: use the transaction to schedule disposal\n                    prevValueRef?.dispose();\n                }, 0);\n            });\n        }\n    }\n    /**\n     * @param changedOptions Only has values for top-level options that have actually changed.\n     */\n    updateOptions(changedOptions) {\n        this._options.updateOptions(changedOptions);\n    }\n    getContainerDomNode() { return this._domElement; }\n    getOriginalEditor() { return this._editors.original; }\n    getModifiedEditor() { return this._editors.modified; }\n    /**\n     * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n     */\n    getLineChanges() {\n        const diffState = this._diffModel.get()?.diff.get();\n        if (!diffState) {\n            return null;\n        }\n        return toLineChanges(diffState);\n    }\n    revert(diff) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        this._editors.modified.executeEdits('diffEditor', [\n            {\n                range: diff.modified.toExclusiveRange(),\n                text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n            }\n        ]);\n    }\n    revertRangeMappings(diffs) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        const changes = diffs.map(c => ({\n            range: c.modifiedRange,\n            text: model.model.original.getValueInRange(c.originalRange)\n        }));\n        this._editors.modified.executeEdits('diffEditor', changes);\n    }\n    _goTo(diff) {\n        this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n        this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n    }\n    goToDiff(target) {\n        const diffs = this._diffModel.get()?.diff.get()?.mappings;\n        if (!diffs || diffs.length === 0) {\n            return;\n        }\n        const curLineNumber = this._editors.modified.getPosition().lineNumber;\n        let diff;\n        if (target === 'next') {\n            diff = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber) ?? diffs[0];\n        }\n        else {\n            diff = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber) ?? diffs[diffs.length - 1];\n        }\n        this._goTo(diff);\n        if (diff.lineRangeMapping.modified.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff.lineRangeMapping.original.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.goToDiff' });\n        }\n    }\n    revealFirstDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        // wait for the diff computation to finish\n        this.waitForDiff().then(() => {\n            const diffs = diffModel.diff.get()?.mappings;\n            if (!diffs || diffs.length === 0) {\n                return;\n            }\n            this._goTo(diffs[0]);\n        });\n    }\n    accessibleDiffViewerNext() { this._accessibleDiffViewer.get().next(); }\n    accessibleDiffViewerPrev() { this._accessibleDiffViewer.get().prev(); }\n    async waitForDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        await diffModel.waitForDiff();\n    }\n    mapToOtherSide() {\n        const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n        const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n        const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n        let destinationSelection;\n        const sourceSelection = source.getSelection();\n        if (sourceSelection) {\n            const mappings = this._diffModel.get()?.diff.get()?.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n            if (mappings) {\n                const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n                const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n                destinationSelection = Range.plusRange(newRange1, newRange2);\n            }\n        }\n        return { destination, destinationSelection };\n    }\n    switchSide() {\n        const { destination, destinationSelection } = this.mapToOtherSide();\n        destination.focus();\n        if (destinationSelection) {\n            destination.setSelection(destinationSelection);\n        }\n    }\n    exitCompareMove() {\n        const model = this._diffModel.get();\n        if (!model) {\n            return;\n        }\n        model.movedTextToCompare.set(undefined, undefined);\n    }\n    collapseAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.collapseAll(tx);\n            }\n        });\n    }\n    showAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.showAll(tx);\n            }\n        });\n    }\n    _handleCursorPositionChange(e, isModifiedEditor) {\n        if (e?.reason === 3 /* CursorChangeReason.Explicit */) {\n            const diff = this._diffModel.get()?.diff.get()?.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n            if (diff?.lineRangeMapping.modified.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff?.lineRangeMapping.original.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.cursorPositionChanged' });\n            }\n        }\n    }\n};\nDiffEditorWidget = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, IAccessibilitySignalService),\n    __param(7, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n    return state.mappings.map(x => {\n        const m = x.lineRangeMapping;\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let innerChanges = m.innerChanges;\n        if (m.original.isEmpty) {\n            // Insertion\n            originalStartLineNumber = m.original.startLineNumber - 1;\n            originalEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            originalStartLineNumber = m.original.startLineNumber;\n            originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n        }\n        if (m.modified.isEmpty) {\n            // Deletion\n            modifiedStartLineNumber = m.modified.startLineNumber - 1;\n            modifiedEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            modifiedStartLineNumber = m.modified.startLineNumber;\n            modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n        }\n        return {\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges: innerChanges?.map(m => ({\n                originalStartLineNumber: m.originalRange.startLineNumber,\n                originalStartColumn: m.originalRange.startColumn,\n                originalEndLineNumber: m.originalRange.endLineNumber,\n                originalEndColumn: m.originalRange.endColumn,\n                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                modifiedStartColumn: m.modifiedRange.startColumn,\n                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                modifiedEndColumn: m.modifiedRange.endColumn,\n            }))\n        };\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}