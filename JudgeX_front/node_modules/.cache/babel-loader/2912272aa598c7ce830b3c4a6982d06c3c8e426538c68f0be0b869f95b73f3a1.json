{"ast":null,"code":"var _InlineEditSideBySideWidget, _InlineEditSideBySideContentWidget;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineEditSideBySideWidget_1, InlineEditSideBySideContentWidget_1;\nimport { $ } from '../../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ObservablePromise, autorun, autorunWithStore, derived, observableSignalFromEvent } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './inlineEditSideBySideWidget.css';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../../../browser/widget/diffEditor/registrations.contribution.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../common/languages/modesRegistry.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nfunction* range(start, end, step = 1) {\n  if (end === undefined) {\n    [end, start] = [start, 0];\n  }\n  for (let n = start; n < end; n += step) {\n    yield n;\n  }\n}\nfunction removeIndentation(lines) {\n  const indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n  const length = indentation.length;\n  return {\n    text: lines.map(l => l.replace(new RegExp('^' + indentation), '')),\n    shift: length\n  };\n}\nlet InlineEditSideBySideWidget = (_InlineEditSideBySideWidget = class InlineEditSideBySideWidget extends Disposable {\n  static _createUniqueUri() {\n    return URI.from({\n      scheme: 'inline-edit-widget',\n      path: new Date().toString() + String(InlineEditSideBySideWidget_1._modelId++)\n    });\n  }\n  constructor(_editor, _model, _instantiationService, _diffProviderFactoryService, _modelService) {\n    super();\n    this._editor = _editor;\n    this._model = _model;\n    this._instantiationService = _instantiationService;\n    this._diffProviderFactoryService = _diffProviderFactoryService;\n    this._modelService = _modelService;\n    this._position = derived(this, reader => {\n      const ghostText = this._model.read(reader);\n      if (!ghostText || ghostText.text.length === 0) {\n        return null;\n      }\n      if (ghostText.range.startLineNumber === ghostText.range.endLineNumber && !(ghostText.range.startColumn === ghostText.range.endColumn && ghostText.range.startColumn === 1)) {\n        //for inner-line suggestions we still want to use minimal ghost text\n        return null;\n      }\n      const editorModel = this._editor.getModel();\n      if (!editorModel) {\n        return null;\n      }\n      const lines = Array.from(range(ghostText.range.startLineNumber, ghostText.range.endLineNumber + 1));\n      const lengths = lines.map(lineNumber => editorModel.getLineLastNonWhitespaceColumn(lineNumber));\n      const maxColumn = Math.max(...lengths);\n      const lineOfMaxColumn = lines[lengths.indexOf(maxColumn)];\n      const position = new Position(lineOfMaxColumn, maxColumn);\n      const pos = {\n        top: ghostText.range.startLineNumber,\n        left: position\n      };\n      return pos;\n    });\n    this._text = derived(this, reader => {\n      const ghostText = this._model.read(reader);\n      if (!ghostText) {\n        return {\n          text: '',\n          shift: 0\n        };\n      }\n      const t = removeIndentation(ghostText.text.split('\\n'));\n      return {\n        text: t.text.join('\\n'),\n        shift: t.shift\n      };\n    });\n    this._originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget_1._createUniqueUri())).keepObserved(this._store);\n    this._modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget_1._createUniqueUri())).keepObserved(this._store);\n    this._diff = derived(this, reader => {\n      return this._diffPromise.read(reader)?.promiseResult.read(reader)?.data;\n    });\n    this._diffPromise = derived(this, reader => {\n      const ghostText = this._model.read(reader);\n      if (!ghostText) {\n        return;\n      }\n      const editorModel = this._editor.getModel();\n      if (!editorModel) {\n        return;\n      }\n      const originalText = removeIndentation(editorModel.getValueInRange(ghostText.range).split('\\n')).text.join('\\n');\n      const modifiedText = removeIndentation(ghostText.text.split('\\n')).text.join('\\n');\n      this._originalModel.get().setValue(originalText);\n      this._modifiedModel.get().setValue(modifiedText);\n      const d = this._diffProviderFactoryService.createDiffProvider({\n        diffAlgorithm: 'advanced'\n      });\n      return ObservablePromise.fromFn(async () => {\n        const result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n          computeMoves: false,\n          ignoreTrimWhitespace: false,\n          maxComputationTimeMs: 1000\n        }, CancellationToken.None);\n        if (result.identical) {\n          return undefined;\n        }\n        return result.changes;\n      });\n    });\n    this._register(autorunWithStore((reader, store) => {\n      /** @description setup content widget */\n      const model = this._model.read(reader);\n      if (!model) {\n        return;\n      }\n      if (this._position.get() === null) {\n        return;\n      }\n      const contentWidget = store.add(this._instantiationService.createInstance(InlineEditSideBySideContentWidget, this._editor, this._position, this._text.map(t => t.text), this._text.map(t => t.shift), this._diff));\n      _editor.addOverlayWidget(contentWidget);\n      store.add(toDisposable(() => _editor.removeOverlayWidget(contentWidget)));\n    }));\n  }\n}, InlineEditSideBySideWidget_1 = _InlineEditSideBySideWidget, _InlineEditSideBySideWidget._modelId = 0, _InlineEditSideBySideWidget);\nInlineEditSideBySideWidget = InlineEditSideBySideWidget_1 = __decorate([__param(2, IInstantiationService), __param(3, IDiffProviderFactoryService), __param(4, IModelService)], InlineEditSideBySideWidget);\nexport { InlineEditSideBySideWidget };\nlet InlineEditSideBySideContentWidget = (_InlineEditSideBySideContentWidget = class InlineEditSideBySideContentWidget extends Disposable {\n  constructor(_editor, _position, _text, _shift, _diff, _instantiationService) {\n    super();\n    this._editor = _editor;\n    this._position = _position;\n    this._text = _text;\n    this._shift = _shift;\n    this._diff = _diff;\n    this._instantiationService = _instantiationService;\n    this.id = `InlineEditSideBySideContentWidget${InlineEditSideBySideContentWidget_1.id++}`;\n    this.allowEditorOverflow = false;\n    this._nodes = $('div.inlineEditSideBySide', undefined);\n    this._scrollChanged = observableSignalFromEvent('editor.onDidScrollChange', this._editor.onDidScrollChange);\n    this._previewEditor = this._register(this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._nodes, {\n      glyphMargin: false,\n      lineNumbers: 'off',\n      minimap: {\n        enabled: false\n      },\n      guides: {\n        indentation: false,\n        bracketPairs: false,\n        bracketPairsHorizontal: false,\n        highlightActiveIndentation: false\n      },\n      folding: false,\n      selectOnLineNumbers: false,\n      selectionHighlight: false,\n      columnSelection: false,\n      overviewRulerBorder: false,\n      overviewRulerLanes: 0,\n      lineDecorationsWidth: 0,\n      lineNumbersMinChars: 0,\n      scrollbar: {\n        vertical: 'hidden',\n        horizontal: 'hidden',\n        alwaysConsumeMouseWheel: false,\n        handleMouseWheel: false\n      },\n      readOnly: true,\n      wordWrap: 'off',\n      wordWrapOverride1: 'off',\n      wordWrapOverride2: 'off',\n      wrappingIndent: 'none',\n      wrappingStrategy: undefined\n    }, {\n      contributions: [],\n      isSimpleWidget: true\n    }, this._editor));\n    this._previewEditorObs = observableCodeEditor(this._previewEditor);\n    this._editorObs = observableCodeEditor(this._editor);\n    this._previewTextModel = this._register(this._instantiationService.createInstance(TextModel, '', this._editor.getModel()?.getLanguageId() ?? PLAINTEXT_LANGUAGE_ID, TextModel.DEFAULT_CREATION_OPTIONS, null));\n    this._setText = derived(reader => {\n      const edit = this._text.read(reader);\n      if (!edit) {\n        return;\n      }\n      this._previewTextModel.setValue(edit);\n    }).recomputeInitiallyAndOnChange(this._store);\n    this._decorations = derived(this, reader => {\n      this._setText.read(reader);\n      const position = this._position.read(reader);\n      if (!position) {\n        return {\n          org: [],\n          mod: []\n        };\n      }\n      const diff = this._diff.read(reader);\n      if (!diff) {\n        return {\n          org: [],\n          mod: []\n        };\n      }\n      const originalDecorations = [];\n      const modifiedDecorations = [];\n      if (diff.length === 1 && diff[0].innerChanges[0].modifiedRange.equalsRange(this._previewTextModel.getFullModelRange())) {\n        return {\n          org: [],\n          mod: []\n        };\n      }\n      const shift = this._shift.get();\n      const moveRange = range => {\n        return new Range(range.startLineNumber + position.top - 1, range.startColumn + shift, range.endLineNumber + position.top - 1, range.endColumn + shift);\n      };\n      for (const m of diff) {\n        if (!m.original.isEmpty) {\n          originalDecorations.push({\n            range: moveRange(m.original.toInclusiveRange()),\n            options: diffLineDeleteDecorationBackgroundWithIndicator\n          });\n        }\n        if (!m.modified.isEmpty) {\n          modifiedDecorations.push({\n            range: m.modified.toInclusiveRange(),\n            options: diffLineAddDecorationBackgroundWithIndicator\n          });\n        }\n        if (m.modified.isEmpty || m.original.isEmpty) {\n          if (!m.original.isEmpty) {\n            originalDecorations.push({\n              range: moveRange(m.original.toInclusiveRange()),\n              options: diffWholeLineDeleteDecoration\n            });\n          }\n          if (!m.modified.isEmpty) {\n            modifiedDecorations.push({\n              range: m.modified.toInclusiveRange(),\n              options: diffWholeLineAddDecoration\n            });\n          }\n        } else {\n          for (const i of m.innerChanges || []) {\n            // Don't show empty markers outside the line range\n            if (m.original.contains(i.originalRange.startLineNumber)) {\n              originalDecorations.push({\n                range: moveRange(i.originalRange),\n                options: i.originalRange.isEmpty() ? diffDeleteDecorationEmpty : diffDeleteDecoration\n              });\n            }\n            if (m.modified.contains(i.modifiedRange.startLineNumber)) {\n              modifiedDecorations.push({\n                range: i.modifiedRange,\n                options: i.modifiedRange.isEmpty() ? diffAddDecorationEmpty : diffAddDecoration\n              });\n            }\n          }\n        }\n      }\n      return {\n        org: originalDecorations,\n        mod: modifiedDecorations\n      };\n    });\n    this._originalDecorations = derived(this, reader => {\n      return this._decorations.read(reader).org;\n    });\n    this._modifiedDecorations = derived(this, reader => {\n      return this._decorations.read(reader).mod;\n    });\n    this._previewEditor.setModel(this._previewTextModel);\n    this._register(this._editorObs.setDecorations(this._originalDecorations));\n    this._register(this._previewEditorObs.setDecorations(this._modifiedDecorations));\n    this._register(autorun(reader => {\n      const width = this._previewEditorObs.contentWidth.read(reader);\n      const lines = this._text.read(reader).split('\\n').length - 1;\n      const height = this._editor.getOption(67 /* EditorOption.lineHeight */) * lines;\n      if (width <= 0) {\n        return;\n      }\n      this._previewEditor.layout({\n        height: height,\n        width: width\n      });\n    }));\n    this._register(autorun(reader => {\n      /** @description update position */\n      this._position.read(reader);\n      this._editor.layoutOverlayWidget(this);\n    }));\n    this._register(autorun(reader => {\n      /** @description scroll change */\n      this._scrollChanged.read(reader);\n      const position = this._position.read(reader);\n      if (!position) {\n        return;\n      }\n      this._editor.layoutOverlayWidget(this);\n    }));\n  }\n  getId() {\n    return this.id;\n  }\n  getDomNode() {\n    return this._nodes;\n  }\n  getPosition() {\n    const position = this._position.get();\n    if (!position) {\n      return null;\n    }\n    const layoutInfo = this._editor.getLayoutInfo();\n    const visibPos = this._editor.getScrolledVisiblePosition(new Position(position.top, 1));\n    if (!visibPos) {\n      return null;\n    }\n    const top = visibPos.top - 1; //-1 to offset the border width\n    const offset = this._editor.getOffsetForColumn(position.left.lineNumber, position.left.column);\n    const left = layoutInfo.contentLeft + offset + 10;\n    return {\n      preference: {\n        left,\n        top\n      }\n    };\n  }\n}, InlineEditSideBySideContentWidget_1 = _InlineEditSideBySideContentWidget, _InlineEditSideBySideContentWidget.id = 0, _InlineEditSideBySideContentWidget);\nInlineEditSideBySideContentWidget = InlineEditSideBySideContentWidget_1 = __decorate([__param(5, IInstantiationService)], InlineEditSideBySideContentWidget);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineEditSideBySideWidget_1","InlineEditSideBySideContentWidget_1","$","CancellationToken","Disposable","toDisposable","ObservablePromise","autorun","autorunWithStore","derived","observableSignalFromEvent","derivedDisposable","URI","observableCodeEditor","EmbeddedCodeEditorWidget","IDiffProviderFactoryService","diffAddDecoration","diffAddDecorationEmpty","diffDeleteDecoration","diffDeleteDecorationEmpty","diffLineAddDecorationBackgroundWithIndicator","diffLineDeleteDecorationBackgroundWithIndicator","diffWholeLineAddDecoration","diffWholeLineDeleteDecoration","Position","Range","PLAINTEXT_LANGUAGE_ID","TextModel","IModelService","IInstantiationService","range","start","end","step","undefined","n","removeIndentation","lines","indentation","match","text","map","l","replace","RegExp","shift","InlineEditSideBySideWidget","_InlineEditSideBySideWidget","_createUniqueUri","from","scheme","path","Date","toString","String","_modelId","constructor","_editor","_model","_instantiationService","_diffProviderFactoryService","_modelService","_position","reader","ghostText","read","startLineNumber","endLineNumber","startColumn","endColumn","editorModel","getModel","Array","lengths","lineNumber","getLineLastNonWhitespaceColumn","maxColumn","Math","max","lineOfMaxColumn","indexOf","position","pos","top","left","_text","t","split","join","_originalModel","createModel","keepObserved","_store","_modifiedModel","_diff","_diffPromise","promiseResult","data","originalText","getValueInRange","modifiedText","get","setValue","createDiffProvider","diffAlgorithm","fromFn","result","computeDiff","computeMoves","ignoreTrimWhitespace","maxComputationTimeMs","None","identical","changes","_register","store","model","contentWidget","add","createInstance","InlineEditSideBySideContentWidget","addOverlayWidget","removeOverlayWidget","_InlineEditSideBySideContentWidget","_shift","id","allowEditorOverflow","_nodes","_scrollChanged","onDidScrollChange","_previewEditor","glyphMargin","lineNumbers","minimap","enabled","guides","bracketPairs","bracketPairsHorizontal","highlightActiveIndentation","folding","selectOnLineNumbers","selectionHighlight","columnSelection","overviewRulerBorder","overviewRulerLanes","lineDecorationsWidth","lineNumbersMinChars","scrollbar","vertical","horizontal","alwaysConsumeMouseWheel","handleMouseWheel","readOnly","wordWrap","wordWrapOverride1","wordWrapOverride2","wrappingIndent","wrappingStrategy","contributions","isSimpleWidget","_previewEditorObs","_editorObs","_previewTextModel","getLanguageId","DEFAULT_CREATION_OPTIONS","_setText","edit","recomputeInitiallyAndOnChange","_decorations","org","mod","diff","originalDecorations","modifiedDecorations","innerChanges","modifiedRange","equalsRange","getFullModelRange","moveRange","m","original","isEmpty","push","toInclusiveRange","options","modified","contains","originalRange","_originalDecorations","_modifiedDecorations","setModel","setDecorations","width","contentWidth","height","getOption","layout","layoutOverlayWidget","getId","getDomNode","getPosition","layoutInfo","getLayoutInfo","visibPos","getScrolledVisiblePosition","offset","getOffsetForColumn","column","contentLeft","preference"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineEdit/browser/inlineEditSideBySideWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineEditSideBySideWidget_1, InlineEditSideBySideContentWidget_1;\nimport { $ } from '../../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ObservablePromise, autorun, autorunWithStore, derived, observableSignalFromEvent } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './inlineEditSideBySideWidget.css';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../../../browser/widget/diffEditor/registrations.contribution.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../common/languages/modesRegistry.js';\nimport { TextModel } from '../../../common/model/textModel.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nfunction* range(start, end, step = 1) {\n    if (end === undefined) {\n        [end, start] = [start, 0];\n    }\n    for (let n = start; n < end; n += step) {\n        yield n;\n    }\n}\nfunction removeIndentation(lines) {\n    const indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n    const length = indentation.length;\n    return {\n        text: lines.map(l => l.replace(new RegExp('^' + indentation), '')),\n        shift: length\n    };\n}\nlet InlineEditSideBySideWidget = class InlineEditSideBySideWidget extends Disposable {\n    static { InlineEditSideBySideWidget_1 = this; }\n    static { this._modelId = 0; }\n    static _createUniqueUri() {\n        return URI.from({ scheme: 'inline-edit-widget', path: new Date().toString() + String(InlineEditSideBySideWidget_1._modelId++) });\n    }\n    constructor(_editor, _model, _instantiationService, _diffProviderFactoryService, _modelService) {\n        super();\n        this._editor = _editor;\n        this._model = _model;\n        this._instantiationService = _instantiationService;\n        this._diffProviderFactoryService = _diffProviderFactoryService;\n        this._modelService = _modelService;\n        this._position = derived(this, reader => {\n            const ghostText = this._model.read(reader);\n            if (!ghostText || ghostText.text.length === 0) {\n                return null;\n            }\n            if (ghostText.range.startLineNumber === ghostText.range.endLineNumber && !(ghostText.range.startColumn === ghostText.range.endColumn && ghostText.range.startColumn === 1)) {\n                //for inner-line suggestions we still want to use minimal ghost text\n                return null;\n            }\n            const editorModel = this._editor.getModel();\n            if (!editorModel) {\n                return null;\n            }\n            const lines = Array.from(range(ghostText.range.startLineNumber, ghostText.range.endLineNumber + 1));\n            const lengths = lines.map(lineNumber => editorModel.getLineLastNonWhitespaceColumn(lineNumber));\n            const maxColumn = Math.max(...lengths);\n            const lineOfMaxColumn = lines[lengths.indexOf(maxColumn)];\n            const position = new Position(lineOfMaxColumn, maxColumn);\n            const pos = {\n                top: ghostText.range.startLineNumber,\n                left: position\n            };\n            return pos;\n        });\n        this._text = derived(this, reader => {\n            const ghostText = this._model.read(reader);\n            if (!ghostText) {\n                return { text: '', shift: 0 };\n            }\n            const t = removeIndentation(ghostText.text.split('\\n'));\n            return {\n                text: t.text.join('\\n'),\n                shift: t.shift\n            };\n        });\n        this._originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget_1._createUniqueUri())).keepObserved(this._store);\n        this._modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditSideBySideWidget_1._createUniqueUri())).keepObserved(this._store);\n        this._diff = derived(this, reader => {\n            return this._diffPromise.read(reader)?.promiseResult.read(reader)?.data;\n        });\n        this._diffPromise = derived(this, reader => {\n            const ghostText = this._model.read(reader);\n            if (!ghostText) {\n                return;\n            }\n            const editorModel = this._editor.getModel();\n            if (!editorModel) {\n                return;\n            }\n            const originalText = removeIndentation(editorModel.getValueInRange(ghostText.range).split('\\n')).text.join('\\n');\n            const modifiedText = removeIndentation(ghostText.text.split('\\n')).text.join('\\n');\n            this._originalModel.get().setValue(originalText);\n            this._modifiedModel.get().setValue(modifiedText);\n            const d = this._diffProviderFactoryService.createDiffProvider({ diffAlgorithm: 'advanced' });\n            return ObservablePromise.fromFn(async () => {\n                const result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n                    computeMoves: false,\n                    ignoreTrimWhitespace: false,\n                    maxComputationTimeMs: 1000,\n                }, CancellationToken.None);\n                if (result.identical) {\n                    return undefined;\n                }\n                return result.changes;\n            });\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description setup content widget */\n            const model = this._model.read(reader);\n            if (!model) {\n                return;\n            }\n            if (this._position.get() === null) {\n                return;\n            }\n            const contentWidget = store.add(this._instantiationService.createInstance(InlineEditSideBySideContentWidget, this._editor, this._position, this._text.map(t => t.text), this._text.map(t => t.shift), this._diff));\n            _editor.addOverlayWidget(contentWidget);\n            store.add(toDisposable(() => _editor.removeOverlayWidget(contentWidget)));\n        }));\n    }\n};\nInlineEditSideBySideWidget = InlineEditSideBySideWidget_1 = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, IDiffProviderFactoryService),\n    __param(4, IModelService)\n], InlineEditSideBySideWidget);\nexport { InlineEditSideBySideWidget };\nlet InlineEditSideBySideContentWidget = class InlineEditSideBySideContentWidget extends Disposable {\n    static { InlineEditSideBySideContentWidget_1 = this; }\n    static { this.id = 0; }\n    constructor(_editor, _position, _text, _shift, _diff, _instantiationService) {\n        super();\n        this._editor = _editor;\n        this._position = _position;\n        this._text = _text;\n        this._shift = _shift;\n        this._diff = _diff;\n        this._instantiationService = _instantiationService;\n        this.id = `InlineEditSideBySideContentWidget${InlineEditSideBySideContentWidget_1.id++}`;\n        this.allowEditorOverflow = false;\n        this._nodes = $('div.inlineEditSideBySide', undefined);\n        this._scrollChanged = observableSignalFromEvent('editor.onDidScrollChange', this._editor.onDidScrollChange);\n        this._previewEditor = this._register(this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._nodes, {\n            glyphMargin: false,\n            lineNumbers: 'off',\n            minimap: { enabled: false },\n            guides: {\n                indentation: false,\n                bracketPairs: false,\n                bracketPairsHorizontal: false,\n                highlightActiveIndentation: false,\n            },\n            folding: false,\n            selectOnLineNumbers: false,\n            selectionHighlight: false,\n            columnSelection: false,\n            overviewRulerBorder: false,\n            overviewRulerLanes: 0,\n            lineDecorationsWidth: 0,\n            lineNumbersMinChars: 0,\n            scrollbar: { vertical: 'hidden', horizontal: 'hidden', alwaysConsumeMouseWheel: false, handleMouseWheel: false },\n            readOnly: true,\n            wordWrap: 'off',\n            wordWrapOverride1: 'off',\n            wordWrapOverride2: 'off',\n            wrappingIndent: 'none',\n            wrappingStrategy: undefined,\n        }, { contributions: [], isSimpleWidget: true }, this._editor));\n        this._previewEditorObs = observableCodeEditor(this._previewEditor);\n        this._editorObs = observableCodeEditor(this._editor);\n        this._previewTextModel = this._register(this._instantiationService.createInstance(TextModel, '', this._editor.getModel()?.getLanguageId() ?? PLAINTEXT_LANGUAGE_ID, TextModel.DEFAULT_CREATION_OPTIONS, null));\n        this._setText = derived(reader => {\n            const edit = this._text.read(reader);\n            if (!edit) {\n                return;\n            }\n            this._previewTextModel.setValue(edit);\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._decorations = derived(this, (reader) => {\n            this._setText.read(reader);\n            const position = this._position.read(reader);\n            if (!position) {\n                return { org: [], mod: [] };\n            }\n            const diff = this._diff.read(reader);\n            if (!diff) {\n                return { org: [], mod: [] };\n            }\n            const originalDecorations = [];\n            const modifiedDecorations = [];\n            if (diff.length === 1 && diff[0].innerChanges[0].modifiedRange.equalsRange(this._previewTextModel.getFullModelRange())) {\n                return { org: [], mod: [] };\n            }\n            const shift = this._shift.get();\n            const moveRange = (range) => {\n                return new Range(range.startLineNumber + position.top - 1, range.startColumn + shift, range.endLineNumber + position.top - 1, range.endColumn + shift);\n            };\n            for (const m of diff) {\n                if (!m.original.isEmpty) {\n                    originalDecorations.push({ range: moveRange(m.original.toInclusiveRange()), options: diffLineDeleteDecorationBackgroundWithIndicator });\n                }\n                if (!m.modified.isEmpty) {\n                    modifiedDecorations.push({ range: m.modified.toInclusiveRange(), options: diffLineAddDecorationBackgroundWithIndicator });\n                }\n                if (m.modified.isEmpty || m.original.isEmpty) {\n                    if (!m.original.isEmpty) {\n                        originalDecorations.push({ range: moveRange(m.original.toInclusiveRange()), options: diffWholeLineDeleteDecoration });\n                    }\n                    if (!m.modified.isEmpty) {\n                        modifiedDecorations.push({ range: m.modified.toInclusiveRange(), options: diffWholeLineAddDecoration });\n                    }\n                }\n                else {\n                    for (const i of m.innerChanges || []) {\n                        // Don't show empty markers outside the line range\n                        if (m.original.contains(i.originalRange.startLineNumber)) {\n                            originalDecorations.push({ range: moveRange(i.originalRange), options: i.originalRange.isEmpty() ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n                        }\n                        if (m.modified.contains(i.modifiedRange.startLineNumber)) {\n                            modifiedDecorations.push({ range: i.modifiedRange, options: i.modifiedRange.isEmpty() ? diffAddDecorationEmpty : diffAddDecoration });\n                        }\n                    }\n                }\n            }\n            return { org: originalDecorations, mod: modifiedDecorations };\n        });\n        this._originalDecorations = derived(this, reader => {\n            return this._decorations.read(reader).org;\n        });\n        this._modifiedDecorations = derived(this, reader => {\n            return this._decorations.read(reader).mod;\n        });\n        this._previewEditor.setModel(this._previewTextModel);\n        this._register(this._editorObs.setDecorations(this._originalDecorations));\n        this._register(this._previewEditorObs.setDecorations(this._modifiedDecorations));\n        this._register(autorun(reader => {\n            const width = this._previewEditorObs.contentWidth.read(reader);\n            const lines = this._text.read(reader).split('\\n').length - 1;\n            const height = this._editor.getOption(67 /* EditorOption.lineHeight */) * lines;\n            if (width <= 0) {\n                return;\n            }\n            this._previewEditor.layout({ height: height, width: width });\n        }));\n        this._register(autorun(reader => {\n            /** @description update position */\n            this._position.read(reader);\n            this._editor.layoutOverlayWidget(this);\n        }));\n        this._register(autorun(reader => {\n            /** @description scroll change */\n            this._scrollChanged.read(reader);\n            const position = this._position.read(reader);\n            if (!position) {\n                return;\n            }\n            this._editor.layoutOverlayWidget(this);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this._nodes;\n    }\n    getPosition() {\n        const position = this._position.get();\n        if (!position) {\n            return null;\n        }\n        const layoutInfo = this._editor.getLayoutInfo();\n        const visibPos = this._editor.getScrolledVisiblePosition(new Position(position.top, 1));\n        if (!visibPos) {\n            return null;\n        }\n        const top = visibPos.top - 1; //-1 to offset the border width\n        const offset = this._editor.getOffsetForColumn(position.left.lineNumber, position.left.column);\n        const left = layoutInfo.contentLeft + offset + 10;\n        return {\n            preference: {\n                left,\n                top,\n            }\n        };\n    }\n};\nInlineEditSideBySideContentWidget = InlineEditSideBySideContentWidget_1 = __decorate([\n    __param(5, IInstantiationService)\n], InlineEditSideBySideContentWidget);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}