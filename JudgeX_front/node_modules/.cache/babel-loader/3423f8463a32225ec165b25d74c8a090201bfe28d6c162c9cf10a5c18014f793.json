{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../common/errors.js';\nexport function createTrustedTypesPolicy(policyName, policyOptions) {\n  const monacoEnvironment = globalThis.MonacoEnvironment;\n  if (monacoEnvironment?.createTrustedTypesPolicy) {\n    try {\n      return monacoEnvironment.createTrustedTypesPolicy(policyName, policyOptions);\n    } catch (err) {\n      onUnexpectedError(err);\n      return undefined;\n    }\n  }\n  try {\n    return globalThis.trustedTypes?.createPolicy(policyName, policyOptions);\n  } catch (err) {\n    onUnexpectedError(err);\n    return undefined;\n  }\n}","map":{"version":3,"names":["onUnexpectedError","createTrustedTypesPolicy","policyName","policyOptions","monacoEnvironment","globalThis","MonacoEnvironment","err","undefined","trustedTypes","createPolicy"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/base/browser/trustedTypes.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../common/errors.js';\nexport function createTrustedTypesPolicy(policyName, policyOptions) {\n    const monacoEnvironment = globalThis.MonacoEnvironment;\n    if (monacoEnvironment?.createTrustedTypesPolicy) {\n        try {\n            return monacoEnvironment.createTrustedTypesPolicy(policyName, policyOptions);\n        }\n        catch (err) {\n            onUnexpectedError(err);\n            return undefined;\n        }\n    }\n    try {\n        return globalThis.trustedTypes?.createPolicy(policyName, policyOptions);\n    }\n    catch (err) {\n        onUnexpectedError(err);\n        return undefined;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,QAAQ,qBAAqB;AACvD,OAAO,SAASC,wBAAwBA,CAACC,UAAU,EAAEC,aAAa,EAAE;EAChE,MAAMC,iBAAiB,GAAGC,UAAU,CAACC,iBAAiB;EACtD,IAAIF,iBAAiB,EAAEH,wBAAwB,EAAE;IAC7C,IAAI;MACA,OAAOG,iBAAiB,CAACH,wBAAwB,CAACC,UAAU,EAAEC,aAAa,CAAC;IAChF,CAAC,CACD,OAAOI,GAAG,EAAE;MACRP,iBAAiB,CAACO,GAAG,CAAC;MACtB,OAAOC,SAAS;IACpB;EACJ;EACA,IAAI;IACA,OAAOH,UAAU,CAACI,YAAY,EAAEC,YAAY,CAACR,UAAU,EAAEC,aAAa,CAAC;EAC3E,CAAC,CACD,OAAOI,GAAG,EAAE;IACRP,iBAAiB,CAACO,GAAG,CAAC;IACtB,OAAOC,SAAS;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}