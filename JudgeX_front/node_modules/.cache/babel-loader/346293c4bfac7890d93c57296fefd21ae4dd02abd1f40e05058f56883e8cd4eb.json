{"ast":null,"code":"var _SectionHeaderDetector;\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nlet SectionHeaderDetector = (_SectionHeaderDetector = class SectionHeaderDetector extends Disposable {\n  constructor(editor, languageConfigurationService, editorWorkerService) {\n    super();\n    this.editor = editor;\n    this.languageConfigurationService = languageConfigurationService;\n    this.editorWorkerService = editorWorkerService;\n    this.decorations = this.editor.createDecorationsCollection();\n    this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n    this.computePromise = null;\n    this.currentOccurrences = {};\n    this._register(editor.onDidChangeModel(e => {\n      this.currentOccurrences = {};\n      this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n      this.stop();\n      this.computeSectionHeaders.schedule(0);\n    }));\n    this._register(editor.onDidChangeModelLanguage(e => {\n      this.currentOccurrences = {};\n      this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n      this.stop();\n      this.computeSectionHeaders.schedule(0);\n    }));\n    this._register(languageConfigurationService.onDidChange(e => {\n      const editorLanguageId = this.editor.getModel()?.getLanguageId();\n      if (editorLanguageId && e.affects(editorLanguageId)) {\n        this.currentOccurrences = {};\n        this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n        this.stop();\n        this.computeSectionHeaders.schedule(0);\n      }\n    }));\n    this._register(editor.onDidChangeConfiguration(e => {\n      if (this.options && !e.hasChanged(73 /* EditorOption.minimap */)) {\n        return;\n      }\n      this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n      // Remove any links (for the getting disabled case)\n      this.updateDecorations([]);\n      // Stop any computation (for the getting disabled case)\n      this.stop();\n      // Start computing (for the getting enabled case)\n      this.computeSectionHeaders.schedule(0);\n    }));\n    this._register(this.editor.onDidChangeModelContent(e => {\n      this.computeSectionHeaders.schedule();\n    }));\n    this._register(editor.onDidChangeModelTokens(e => {\n      if (!this.computeSectionHeaders.isScheduled()) {\n        this.computeSectionHeaders.schedule(1000);\n      }\n    }));\n    this.computeSectionHeaders = this._register(new RunOnceScheduler(() => {\n      this.findSectionHeaders();\n    }, 250));\n    this.computeSectionHeaders.schedule(0);\n  }\n  createOptions(minimap) {\n    if (!minimap || !this.editor.hasModel()) {\n      return undefined;\n    }\n    const languageId = this.editor.getModel().getLanguageId();\n    if (!languageId) {\n      return undefined;\n    }\n    const commentsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n    const foldingRules = this.languageConfigurationService.getLanguageConfiguration(languageId).foldingRules;\n    if (!commentsConfiguration && !foldingRules?.markers) {\n      return undefined;\n    }\n    return {\n      foldingRules,\n      findMarkSectionHeaders: minimap.showMarkSectionHeaders,\n      findRegionSectionHeaders: minimap.showRegionSectionHeaders\n    };\n  }\n  findSectionHeaders() {\n    if (!this.editor.hasModel() || !this.options?.findMarkSectionHeaders && !this.options?.findRegionSectionHeaders) {\n      return;\n    }\n    const model = this.editor.getModel();\n    if (model.isDisposed() || model.isTooLargeForSyncing()) {\n      return;\n    }\n    const modelVersionId = model.getVersionId();\n    this.editorWorkerService.findSectionHeaders(model.uri, this.options).then(sectionHeaders => {\n      if (model.isDisposed() || model.getVersionId() !== modelVersionId) {\n        // model changed in the meantime\n        return;\n      }\n      this.updateDecorations(sectionHeaders);\n    });\n  }\n  updateDecorations(sectionHeaders) {\n    const model = this.editor.getModel();\n    if (model) {\n      // Remove all section headers that should be in comments and are not in comments\n      sectionHeaders = sectionHeaders.filter(sectionHeader => {\n        if (!sectionHeader.shouldBeInComments) {\n          return true;\n        }\n        const validRange = model.validateRange(sectionHeader.range);\n        const tokens = model.tokenization.getLineTokens(validRange.startLineNumber);\n        const idx = tokens.findTokenIndexAtOffset(validRange.startColumn - 1);\n        const tokenType = tokens.getStandardTokenType(idx);\n        const languageId = tokens.getLanguageId(idx);\n        return languageId === model.getLanguageId() && tokenType === 1 /* StandardTokenType.Comment */;\n      });\n    }\n    const oldDecorations = Object.values(this.currentOccurrences).map(occurrence => occurrence.decorationId);\n    const newDecorations = sectionHeaders.map(sectionHeader => decoration(sectionHeader));\n    this.editor.changeDecorations(changeAccessor => {\n      const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n      this.currentOccurrences = {};\n      for (let i = 0, len = decorations.length; i < len; i++) {\n        const occurrence = {\n          sectionHeader: sectionHeaders[i],\n          decorationId: decorations[i]\n        };\n        this.currentOccurrences[occurrence.decorationId] = occurrence;\n      }\n    });\n  }\n  stop() {\n    this.computeSectionHeaders.cancel();\n    if (this.computePromise) {\n      this.computePromise.cancel();\n      this.computePromise = null;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this.stop();\n    this.decorations.clear();\n  }\n}, _SectionHeaderDetector.ID = 'editor.sectionHeaderDetector', _SectionHeaderDetector);\nSectionHeaderDetector = __decorate([__param(1, ILanguageConfigurationService), __param(2, IEditorWorkerService)], SectionHeaderDetector);\nexport { SectionHeaderDetector };\nfunction decoration(sectionHeader) {\n  return {\n    range: sectionHeader.range,\n    options: ModelDecorationOptions.createDynamic({\n      description: 'section-header',\n      stickiness: 3 /* TrackedRangeStickiness.GrowsOnlyWhenTypingAfter */,\n      collapseOnReplaceEdit: true,\n      minimap: {\n        color: undefined,\n        position: 1 /* MinimapPosition.Inline */,\n        sectionHeaderStyle: sectionHeader.hasSeparatorLine ? 2 /* MinimapSectionHeaderStyle.Underlined */ : 1 /* MinimapSectionHeaderStyle.Normal */,\n        sectionHeaderText: sectionHeader.text\n      }\n    })\n  };\n}\nregisterEditorContribution(SectionHeaderDetector.ID, SectionHeaderDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RunOnceScheduler","Disposable","registerEditorContribution","ILanguageConfigurationService","ModelDecorationOptions","IEditorWorkerService","SectionHeaderDetector","_SectionHeaderDetector","constructor","editor","languageConfigurationService","editorWorkerService","decorations","createDecorationsCollection","options","createOptions","getOption","computePromise","currentOccurrences","_register","onDidChangeModel","e","stop","computeSectionHeaders","schedule","onDidChangeModelLanguage","onDidChange","editorLanguageId","getModel","getLanguageId","affects","onDidChangeConfiguration","hasChanged","updateDecorations","onDidChangeModelContent","onDidChangeModelTokens","isScheduled","findSectionHeaders","minimap","hasModel","undefined","languageId","commentsConfiguration","getLanguageConfiguration","comments","foldingRules","markers","findMarkSectionHeaders","showMarkSectionHeaders","findRegionSectionHeaders","showRegionSectionHeaders","model","isDisposed","isTooLargeForSyncing","modelVersionId","getVersionId","uri","then","sectionHeaders","filter","sectionHeader","shouldBeInComments","validRange","validateRange","range","tokens","tokenization","getLineTokens","startLineNumber","idx","findTokenIndexAtOffset","startColumn","tokenType","getStandardTokenType","oldDecorations","values","map","occurrence","decorationId","newDecorations","decoration","changeDecorations","changeAccessor","deltaDecorations","len","cancel","dispose","clear","ID","createDynamic","description","stickiness","collapseOnReplaceEdit","color","position","sectionHeaderStyle","hasSeparatorLine","sectionHeaderText","text"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/sectionHeaders/browser/sectionHeaders.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nlet SectionHeaderDetector = class SectionHeaderDetector extends Disposable {\n    static { this.ID = 'editor.sectionHeaderDetector'; }\n    constructor(editor, languageConfigurationService, editorWorkerService) {\n        super();\n        this.editor = editor;\n        this.languageConfigurationService = languageConfigurationService;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n        this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n        this.computePromise = null;\n        this.currentOccurrences = {};\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            this.stop();\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.currentOccurrences = {};\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            this.stop();\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(languageConfigurationService.onDidChange((e) => {\n            const editorLanguageId = this.editor.getModel()?.getLanguageId();\n            if (editorLanguageId && e.affects(editorLanguageId)) {\n                this.currentOccurrences = {};\n                this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n                this.stop();\n                this.computeSectionHeaders.schedule(0);\n            }\n        }));\n        this._register(editor.onDidChangeConfiguration(e => {\n            if (this.options && !e.hasChanged(73 /* EditorOption.minimap */)) {\n                return;\n            }\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(this.editor.onDidChangeModelContent(e => {\n            this.computeSectionHeaders.schedule();\n        }));\n        this._register(editor.onDidChangeModelTokens((e) => {\n            if (!this.computeSectionHeaders.isScheduled()) {\n                this.computeSectionHeaders.schedule(1000);\n            }\n        }));\n        this.computeSectionHeaders = this._register(new RunOnceScheduler(() => {\n            this.findSectionHeaders();\n        }, 250));\n        this.computeSectionHeaders.schedule(0);\n    }\n    createOptions(minimap) {\n        if (!minimap || !this.editor.hasModel()) {\n            return undefined;\n        }\n        const languageId = this.editor.getModel().getLanguageId();\n        if (!languageId) {\n            return undefined;\n        }\n        const commentsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n        const foldingRules = this.languageConfigurationService.getLanguageConfiguration(languageId).foldingRules;\n        if (!commentsConfiguration && !foldingRules?.markers) {\n            return undefined;\n        }\n        return {\n            foldingRules,\n            findMarkSectionHeaders: minimap.showMarkSectionHeaders,\n            findRegionSectionHeaders: minimap.showRegionSectionHeaders,\n        };\n    }\n    findSectionHeaders() {\n        if (!this.editor.hasModel()\n            || (!this.options?.findMarkSectionHeaders && !this.options?.findRegionSectionHeaders)) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (model.isDisposed() || model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelVersionId = model.getVersionId();\n        this.editorWorkerService.findSectionHeaders(model.uri, this.options)\n            .then((sectionHeaders) => {\n            if (model.isDisposed() || model.getVersionId() !== modelVersionId) {\n                // model changed in the meantime\n                return;\n            }\n            this.updateDecorations(sectionHeaders);\n        });\n    }\n    updateDecorations(sectionHeaders) {\n        const model = this.editor.getModel();\n        if (model) {\n            // Remove all section headers that should be in comments and are not in comments\n            sectionHeaders = sectionHeaders.filter((sectionHeader) => {\n                if (!sectionHeader.shouldBeInComments) {\n                    return true;\n                }\n                const validRange = model.validateRange(sectionHeader.range);\n                const tokens = model.tokenization.getLineTokens(validRange.startLineNumber);\n                const idx = tokens.findTokenIndexAtOffset(validRange.startColumn - 1);\n                const tokenType = tokens.getStandardTokenType(idx);\n                const languageId = tokens.getLanguageId(idx);\n                return (languageId === model.getLanguageId() && tokenType === 1 /* StandardTokenType.Comment */);\n            });\n        }\n        const oldDecorations = Object.values(this.currentOccurrences).map(occurrence => occurrence.decorationId);\n        const newDecorations = sectionHeaders.map(sectionHeader => decoration(sectionHeader));\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurrence = { sectionHeader: sectionHeaders[i], decorationId: decorations[i] };\n                this.currentOccurrences[occurrence.decorationId] = occurrence;\n            }\n        });\n    }\n    stop() {\n        this.computeSectionHeaders.cancel();\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n        this.decorations.clear();\n    }\n};\nSectionHeaderDetector = __decorate([\n    __param(1, ILanguageConfigurationService),\n    __param(2, IEditorWorkerService)\n], SectionHeaderDetector);\nexport { SectionHeaderDetector };\nfunction decoration(sectionHeader) {\n    return {\n        range: sectionHeader.range,\n        options: ModelDecorationOptions.createDynamic({\n            description: 'section-header',\n            stickiness: 3 /* TrackedRangeStickiness.GrowsOnlyWhenTypingAfter */,\n            collapseOnReplaceEdit: true,\n            minimap: {\n                color: undefined,\n                position: 1 /* MinimapPosition.Inline */,\n                sectionHeaderStyle: sectionHeader.hasSeparatorLine ? 2 /* MinimapSectionHeaderStyle.Underlined */ : 1 /* MinimapSectionHeaderStyle.Normal */,\n                sectionHeaderText: sectionHeader.text,\n            },\n        })\n    };\n}\nregisterEditorContribution(SectionHeaderDetector.ID, SectionHeaderDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}