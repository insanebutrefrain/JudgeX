{"ast":null,"code":"var _SelectionAnchorController;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SelectionAnchorController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = (_SelectionAnchorController = class SelectionAnchorController {\n  static get(editor) {\n    return editor.getContribution(SelectionAnchorController_1.ID);\n  }\n  constructor(editor, contextKeyService) {\n    this.editor = editor;\n    this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n    this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n  }\n  setSelectionAnchor() {\n    if (this.editor.hasModel()) {\n      const position = this.editor.getPosition();\n      this.editor.changeDecorations(accessor => {\n        if (this.decorationId) {\n          accessor.removeDecoration(this.decorationId);\n        }\n        this.decorationId = accessor.addDecoration(Selection.fromPositions(position, position), {\n          description: 'selection-anchor',\n          stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n          hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n          className: 'selection-anchor'\n        });\n      });\n      this.selectionAnchorSetContextKey.set(!!this.decorationId);\n      alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n    }\n  }\n  goToSelectionAnchor() {\n    if (this.editor.hasModel() && this.decorationId) {\n      const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n      if (anchorPosition) {\n        this.editor.setPosition(anchorPosition.getStartPosition());\n      }\n    }\n  }\n  selectFromAnchorToCursor() {\n    if (this.editor.hasModel() && this.decorationId) {\n      const start = this.editor.getModel().getDecorationRange(this.decorationId);\n      if (start) {\n        const end = this.editor.getPosition();\n        this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n        this.cancelSelectionAnchor();\n      }\n    }\n  }\n  cancelSelectionAnchor() {\n    if (this.decorationId) {\n      const decorationId = this.decorationId;\n      this.editor.changeDecorations(accessor => {\n        accessor.removeDecoration(decorationId);\n        this.decorationId = undefined;\n      });\n      this.selectionAnchorSetContextKey.set(false);\n    }\n  }\n  dispose() {\n    this.cancelSelectionAnchor();\n    this.modelChangeListener.dispose();\n  }\n}, SelectionAnchorController_1 = _SelectionAnchorController, _SelectionAnchorController.ID = 'editor.contrib.selectionAnchorController', _SelectionAnchorController);\nSelectionAnchorController = SelectionAnchorController_1 = __decorate([__param(1, IContextKeyService)], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.setSelectionAnchor',\n      label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n      alias: 'Set Selection Anchor',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 32 /* KeyCode.KeyB */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  async run(_accessor, editor) {\n    SelectionAnchorController.get(editor)?.setSelectionAnchor();\n  }\n}\nclass GoToSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.goToSelectionAnchor',\n      label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n      alias: 'Go to Selection Anchor',\n      precondition: SelectionAnchorSet\n    });\n  }\n  async run(_accessor, editor) {\n    SelectionAnchorController.get(editor)?.goToSelectionAnchor();\n  }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.selectFromAnchorToCursor',\n      label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n      alias: 'Select from Anchor to Cursor',\n      precondition: SelectionAnchorSet,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  async run(_accessor, editor) {\n    SelectionAnchorController.get(editor)?.selectFromAnchorToCursor();\n  }\n}\nclass CancelSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.cancelSelectionAnchor',\n      label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n      alias: 'Cancel Selection Anchor',\n      precondition: SelectionAnchorSet,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 9 /* KeyCode.Escape */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  async run(_accessor, editor) {\n    SelectionAnchorController.get(editor)?.cancelSelectionAnchor();\n  }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SelectionAnchorController_1","alert","MarkdownString","KeyChord","EditorAction","registerEditorAction","registerEditorContribution","Selection","EditorContextKeys","localize","IContextKeyService","RawContextKey","SelectionAnchorSet","SelectionAnchorController","_SelectionAnchorController","get","editor","getContribution","ID","constructor","contextKeyService","selectionAnchorSetContextKey","bindTo","modelChangeListener","onDidChangeModel","reset","setSelectionAnchor","hasModel","position","getPosition","changeDecorations","accessor","decorationId","removeDecoration","addDecoration","fromPositions","description","stickiness","hoverMessage","appendText","className","set","lineNumber","column","goToSelectionAnchor","anchorPosition","getModel","getDecorationRange","setPosition","getStartPosition","selectFromAnchorToCursor","start","end","setSelection","cancelSelectionAnchor","undefined","dispose","SetSelectionAnchor","id","label","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","weight","run","_accessor","GoToSelectionAnchor","SelectFromAnchorToCursor","CancelSelectionAnchor"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/browser/anchorSelect.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SelectionAnchorController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = class SelectionAnchorController {\n    static { SelectionAnchorController_1 = this; }\n    static { this.ID = 'editor.contrib.selectionAnchorController'; }\n    static get(editor) {\n        return editor.getContribution(SelectionAnchorController_1.ID);\n    }\n    constructor(editor, contextKeyService) {\n        this.editor = editor;\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n    }\n    setSelectionAnchor() {\n        if (this.editor.hasModel()) {\n            const position = this.editor.getPosition();\n            this.editor.changeDecorations((accessor) => {\n                if (this.decorationId) {\n                    accessor.removeDecoration(this.decorationId);\n                }\n                this.decorationId = accessor.addDecoration(Selection.fromPositions(position, position), {\n                    description: 'selection-anchor',\n                    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n                    hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n                    className: 'selection-anchor'\n                });\n            });\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n        }\n    }\n    goToSelectionAnchor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (anchorPosition) {\n                this.editor.setPosition(anchorPosition.getStartPosition());\n            }\n        }\n    }\n    selectFromAnchorToCursor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (start) {\n                const end = this.editor.getPosition();\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n                this.cancelSelectionAnchor();\n            }\n        }\n    }\n    cancelSelectionAnchor() {\n        if (this.decorationId) {\n            const decorationId = this.decorationId;\n            this.editor.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n                this.decorationId = undefined;\n            });\n            this.selectionAnchorSetContextKey.set(false);\n        }\n    }\n    dispose() {\n        this.cancelSelectionAnchor();\n        this.modelChangeListener.dispose();\n    }\n};\nSelectionAnchorController = SelectionAnchorController_1 = __decorate([\n    __param(1, IContextKeyService)\n], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.setSelectionAnchor',\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n            alias: 'Set Selection Anchor',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 32 /* KeyCode.KeyB */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.setSelectionAnchor();\n    }\n}\nclass GoToSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToSelectionAnchor',\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n            alias: 'Go to Selection Anchor',\n            precondition: SelectionAnchorSet,\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.goToSelectionAnchor();\n    }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectFromAnchorToCursor',\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n            alias: 'Select from Anchor to Cursor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.selectFromAnchorToCursor();\n    }\n}\nclass CancelSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.cancelSelectionAnchor',\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n            alias: 'Cancel Selection Anchor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.cancelSelectionAnchor();\n    }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}