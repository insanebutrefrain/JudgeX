{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isObject, isNumber, isString, isBoolean, isFunction } from \"../_utils/is.js\";\nconst isGroupOption = option => {\n  return isObject(option) && \"isGroup\" in option;\n};\nconst isGroupOptionInfo = option => {\n  return isObject(option) && \"isGroup\" in option;\n};\nconst getValueString = (value, valueKey = \"value\") => String(isObject(value) ? value[valueKey] : value);\nconst getKeyFromValue = (value, valueKey = \"value\") => {\n  if (isObject(value)) {\n    return `__arco__option__object__${value[valueKey]}`;\n  }\n  if (value || isNumber(value) || isString(value) || isBoolean(value)) {\n    return `__arco__option__${typeof value}-${value}`;\n  }\n  return \"\";\n};\nconst hasEmptyStringKey = optionInfoMap => {\n  return optionInfoMap.has(`__arco__option__string-`);\n};\nconst createOptionInfo = (option, {\n  valueKey,\n  fieldNames,\n  origin,\n  index = -1\n}) => {\n  var _a;\n  if (isObject(option)) {\n    const value = option[fieldNames.value];\n    return {\n      raw: option,\n      index,\n      key: getKeyFromValue(value, valueKey),\n      origin,\n      value,\n      label: (_a = option[fieldNames.label]) != null ? _a : getValueString(value, valueKey),\n      render: option[fieldNames.render],\n      disabled: Boolean(option[fieldNames.disabled]),\n      tagProps: option[fieldNames.tagProps]\n    };\n  }\n  const raw = {\n    value: option,\n    label: String(option),\n    disabled: false\n  };\n  return {\n    raw,\n    index,\n    key: getKeyFromValue(option, valueKey),\n    origin,\n    ...raw\n  };\n};\nconst getOptionInfos = (options, {\n  valueKey,\n  fieldNames,\n  origin,\n  optionInfoMap\n}) => {\n  var _a;\n  const infos = [];\n  for (const item of options) {\n    if (isGroupOption(item)) {\n      const options2 = getOptionInfos((_a = item.options) != null ? _a : [], {\n        valueKey,\n        fieldNames,\n        origin,\n        optionInfoMap\n      });\n      if (options2.length > 0) {\n        infos.push({\n          ...item,\n          key: `__arco__group__${item.label}`,\n          options: options2\n        });\n      }\n    } else {\n      const optionInfo = createOptionInfo(item, {\n        valueKey,\n        fieldNames,\n        origin\n      });\n      infos.push(optionInfo);\n      if (!optionInfoMap.get(optionInfo.key)) {\n        optionInfoMap.set(optionInfo.key, optionInfo);\n      }\n    }\n  }\n  return infos;\n};\nconst getValidOptions = (optionInfos, {\n  inputValue,\n  filterOption\n}) => {\n  const travel = optionInfos2 => {\n    var _a;\n    const options = [];\n    for (const item of optionInfos2) {\n      if (isGroupOptionInfo(item)) {\n        const _options = travel((_a = item.options) != null ? _a : []);\n        if (_options.length > 0) {\n          options.push({\n            ...item,\n            options: _options\n          });\n        }\n      } else if (isValidOption(item, {\n        inputValue,\n        filterOption\n      })) {\n        options.push(item);\n      }\n    }\n    return options;\n  };\n  return travel(optionInfos);\n};\nconst isValidOption = (optionInfo, {\n  inputValue,\n  filterOption\n}) => {\n  if (isFunction(filterOption)) {\n    return !inputValue || filterOption(inputValue, optionInfo.raw);\n  }\n  if (filterOption) {\n    return optionInfo.label.toLowerCase().includes((inputValue != null ? inputValue : \"\").toLowerCase());\n  }\n  return true;\n};\nexport { createOptionInfo, getKeyFromValue, getOptionInfos, getValidOptions, getValueString, hasEmptyStringKey, isGroupOption, isGroupOptionInfo, isValidOption };","map":{"version":3,"names":["isObject","isNumber","isString","isBoolean","isFunction","isGroupOption","option","isGroupOptionInfo","getValueString","value","valueKey","String","getKeyFromValue","hasEmptyStringKey","optionInfoMap","has","createOptionInfo","fieldNames","origin","index","_a","raw","key","label","render","disabled","Boolean","tagProps","getOptionInfos","options","infos","item","options2","length","push","optionInfo","get","set","getValidOptions","optionInfos","inputValue","filterOption","travel","optionInfos2","_options","isValidOption","toLowerCase","includes"],"sources":["P:/WebStorm/judgex_front/node_modules/@arco-design/web-vue/es/select/utils.js"],"sourcesContent":["import { isObject, isNumber, isString, isBoolean, isFunction } from \"../_utils/is.js\";\nconst isGroupOption = (option) => {\n  return isObject(option) && \"isGroup\" in option;\n};\nconst isGroupOptionInfo = (option) => {\n  return isObject(option) && \"isGroup\" in option;\n};\nconst getValueString = (value, valueKey = \"value\") => String(isObject(value) ? value[valueKey] : value);\nconst getKeyFromValue = (value, valueKey = \"value\") => {\n  if (isObject(value)) {\n    return `__arco__option__object__${value[valueKey]}`;\n  }\n  if (value || isNumber(value) || isString(value) || isBoolean(value)) {\n    return `__arco__option__${typeof value}-${value}`;\n  }\n  return \"\";\n};\nconst hasEmptyStringKey = (optionInfoMap) => {\n  return optionInfoMap.has(`__arco__option__string-`);\n};\nconst createOptionInfo = (option, {\n  valueKey,\n  fieldNames,\n  origin,\n  index = -1\n}) => {\n  var _a;\n  if (isObject(option)) {\n    const value = option[fieldNames.value];\n    return {\n      raw: option,\n      index,\n      key: getKeyFromValue(value, valueKey),\n      origin,\n      value,\n      label: (_a = option[fieldNames.label]) != null ? _a : getValueString(value, valueKey),\n      render: option[fieldNames.render],\n      disabled: Boolean(option[fieldNames.disabled]),\n      tagProps: option[fieldNames.tagProps]\n    };\n  }\n  const raw = {\n    value: option,\n    label: String(option),\n    disabled: false\n  };\n  return {\n    raw,\n    index,\n    key: getKeyFromValue(option, valueKey),\n    origin,\n    ...raw\n  };\n};\nconst getOptionInfos = (options, {\n  valueKey,\n  fieldNames,\n  origin,\n  optionInfoMap\n}) => {\n  var _a;\n  const infos = [];\n  for (const item of options) {\n    if (isGroupOption(item)) {\n      const options2 = getOptionInfos((_a = item.options) != null ? _a : [], {\n        valueKey,\n        fieldNames,\n        origin,\n        optionInfoMap\n      });\n      if (options2.length > 0) {\n        infos.push({\n          ...item,\n          key: `__arco__group__${item.label}`,\n          options: options2\n        });\n      }\n    } else {\n      const optionInfo = createOptionInfo(item, {\n        valueKey,\n        fieldNames,\n        origin\n      });\n      infos.push(optionInfo);\n      if (!optionInfoMap.get(optionInfo.key)) {\n        optionInfoMap.set(optionInfo.key, optionInfo);\n      }\n    }\n  }\n  return infos;\n};\nconst getValidOptions = (optionInfos, {\n  inputValue,\n  filterOption\n}) => {\n  const travel = (optionInfos2) => {\n    var _a;\n    const options = [];\n    for (const item of optionInfos2) {\n      if (isGroupOptionInfo(item)) {\n        const _options = travel((_a = item.options) != null ? _a : []);\n        if (_options.length > 0) {\n          options.push({ ...item, options: _options });\n        }\n      } else if (isValidOption(item, { inputValue, filterOption })) {\n        options.push(item);\n      }\n    }\n    return options;\n  };\n  return travel(optionInfos);\n};\nconst isValidOption = (optionInfo, {\n  inputValue,\n  filterOption\n}) => {\n  if (isFunction(filterOption)) {\n    return !inputValue || filterOption(inputValue, optionInfo.raw);\n  }\n  if (filterOption) {\n    return optionInfo.label.toLowerCase().includes((inputValue != null ? inputValue : \"\").toLowerCase());\n  }\n  return true;\n};\nexport { createOptionInfo, getKeyFromValue, getOptionInfos, getValidOptions, getValueString, hasEmptyStringKey, isGroupOption, isGroupOptionInfo, isValidOption };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}