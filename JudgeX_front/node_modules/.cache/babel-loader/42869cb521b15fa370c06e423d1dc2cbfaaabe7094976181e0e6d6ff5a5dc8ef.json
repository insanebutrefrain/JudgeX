{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isHotReloadEnabled, registerHotReloadHandler } from './hotReload.js';\nimport { observableSignalFromEvent } from './observable.js';\nexport function readHotReloadableExport(value, reader) {\n  observeHotReloadableExports([value], reader);\n  return value;\n}\nexport function observeHotReloadableExports(values, reader) {\n  if (isHotReloadEnabled()) {\n    const o = observableSignalFromEvent('reload', event => registerHotReloadHandler(({\n      oldExports\n    }) => {\n      if (![...Object.values(oldExports)].some(v => values.includes(v))) {\n        return undefined;\n      }\n      return _newExports => {\n        event(undefined);\n        return true;\n      };\n    }));\n    o.read(reader);\n  }\n}","map":{"version":3,"names":["isHotReloadEnabled","registerHotReloadHandler","observableSignalFromEvent","readHotReloadableExport","value","reader","observeHotReloadableExports","values","o","event","oldExports","Object","some","v","includes","undefined","_newExports","read"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/base/common/hotReloadHelpers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isHotReloadEnabled, registerHotReloadHandler } from './hotReload.js';\nimport { observableSignalFromEvent } from './observable.js';\nexport function readHotReloadableExport(value, reader) {\n    observeHotReloadableExports([value], reader);\n    return value;\n}\nexport function observeHotReloadableExports(values, reader) {\n    if (isHotReloadEnabled()) {\n        const o = observableSignalFromEvent('reload', event => registerHotReloadHandler(({ oldExports }) => {\n            if (![...Object.values(oldExports)].some(v => values.includes(v))) {\n                return undefined;\n            }\n            return (_newExports) => {\n                event(undefined);\n                return true;\n            };\n        }));\n        o.read(reader);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,EAAEC,wBAAwB,QAAQ,gBAAgB;AAC7E,SAASC,yBAAyB,QAAQ,iBAAiB;AAC3D,OAAO,SAASC,uBAAuBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACnDC,2BAA2B,CAAC,CAACF,KAAK,CAAC,EAAEC,MAAM,CAAC;EAC5C,OAAOD,KAAK;AAChB;AACA,OAAO,SAASE,2BAA2BA,CAACC,MAAM,EAAEF,MAAM,EAAE;EACxD,IAAIL,kBAAkB,CAAC,CAAC,EAAE;IACtB,MAAMQ,CAAC,GAAGN,yBAAyB,CAAC,QAAQ,EAAEO,KAAK,IAAIR,wBAAwB,CAAC,CAAC;MAAES;IAAW,CAAC,KAAK;MAChG,IAAI,CAAC,CAAC,GAAGC,MAAM,CAACJ,MAAM,CAACG,UAAU,CAAC,CAAC,CAACE,IAAI,CAACC,CAAC,IAAIN,MAAM,CAACO,QAAQ,CAACD,CAAC,CAAC,CAAC,EAAE;QAC/D,OAAOE,SAAS;MACpB;MACA,OAAQC,WAAW,IAAK;QACpBP,KAAK,CAACM,SAAS,CAAC;QAChB,OAAO,IAAI;MACf,CAAC;IACL,CAAC,CAAC,CAAC;IACHP,CAAC,CAACS,IAAI,CAACZ,MAAM,CAAC;EAClB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}