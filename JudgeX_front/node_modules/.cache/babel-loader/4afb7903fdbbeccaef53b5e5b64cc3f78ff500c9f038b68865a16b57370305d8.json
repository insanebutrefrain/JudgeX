{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { StickyScrollController } from './stickyScrollController.js';\nexport class ToggleStickyScroll extends Action2 {\n  constructor() {\n    super({\n      id: 'editor.action.toggleStickyScroll',\n      title: {\n        ...localize2('toggleEditorStickyScroll', \"Toggle Editor Sticky Scroll\"),\n        mnemonicTitle: localize({\n          key: 'mitoggleStickyScroll',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Toggle Editor Sticky Scroll\")\n      },\n      metadata: {\n        description: localize2('toggleEditorStickyScroll.description', \"Toggle/enable the editor sticky scroll which shows the nested scopes at the top of the viewport\")\n      },\n      category: Categories.View,\n      toggled: {\n        condition: ContextKeyExpr.equals('config.editor.stickyScroll.enabled', true),\n        title: localize('stickyScroll', \"Sticky Scroll\"),\n        mnemonicTitle: localize({\n          key: 'miStickyScroll',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Sticky Scroll\")\n      },\n      menu: [{\n        id: MenuId.CommandPalette\n      }, {\n        id: MenuId.MenubarAppearanceMenu,\n        group: '4_editor',\n        order: 3\n      }, {\n        id: MenuId.StickyScrollContext\n      }]\n    });\n  }\n  async run(accessor) {\n    const configurationService = accessor.get(IConfigurationService);\n    const newValue = !configurationService.getValue('editor.stickyScroll.enabled');\n    return configurationService.updateValue('editor.stickyScroll.enabled', newValue);\n  }\n}\nconst weight = 100 /* KeybindingWeight.EditorContrib */;\nexport class FocusStickyScroll extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'editor.action.focusStickyScroll',\n      title: {\n        ...localize2('focusStickyScroll', \"Focus on the editor sticky scroll\"),\n        mnemonicTitle: localize({\n          key: 'mifocusStickyScroll',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Focus Sticky Scroll\")\n      },\n      precondition: ContextKeyExpr.and(ContextKeyExpr.has('config.editor.stickyScroll.enabled'), EditorContextKeys.stickyScrollVisible),\n      menu: [{\n        id: MenuId.CommandPalette\n      }]\n    });\n  }\n  runEditorCommand(_accessor, editor) {\n    StickyScrollController.get(editor)?.focus();\n  }\n}\nexport class SelectNextStickyScrollLine extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'editor.action.selectNextStickyScrollLine',\n      title: localize2('selectNextStickyScrollLine.title', \"Select the next editor sticky scroll line\"),\n      precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n      keybinding: {\n        weight,\n        primary: 18 /* KeyCode.DownArrow */\n      }\n    });\n  }\n  runEditorCommand(_accessor, editor) {\n    StickyScrollController.get(editor)?.focusNext();\n  }\n}\nexport class SelectPreviousStickyScrollLine extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'editor.action.selectPreviousStickyScrollLine',\n      title: localize2('selectPreviousStickyScrollLine.title', \"Select the previous sticky scroll line\"),\n      precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n      keybinding: {\n        weight,\n        primary: 16 /* KeyCode.UpArrow */\n      }\n    });\n  }\n  runEditorCommand(_accessor, editor) {\n    StickyScrollController.get(editor)?.focusPrevious();\n  }\n}\nexport class GoToStickyScrollLine extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'editor.action.goToFocusedStickyScrollLine',\n      title: localize2('goToFocusedStickyScrollLine.title', \"Go to the focused sticky scroll line\"),\n      precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n      keybinding: {\n        weight,\n        primary: 3 /* KeyCode.Enter */\n      }\n    });\n  }\n  runEditorCommand(_accessor, editor) {\n    StickyScrollController.get(editor)?.goToFocused();\n  }\n}\nexport class SelectEditor extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'editor.action.selectEditor',\n      title: localize2('selectEditor.title', \"Select Editor\"),\n      precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n      keybinding: {\n        weight,\n        primary: 9 /* KeyCode.Escape */\n      }\n    });\n  }\n  runEditorCommand(_accessor, editor) {\n    StickyScrollController.get(editor)?.selectEditor();\n  }\n}","map":{"version":3,"names":["EditorAction2","localize","localize2","Categories","Action2","MenuId","IConfigurationService","ContextKeyExpr","EditorContextKeys","StickyScrollController","ToggleStickyScroll","constructor","id","title","mnemonicTitle","key","comment","metadata","description","category","View","toggled","condition","equals","menu","CommandPalette","MenubarAppearanceMenu","group","order","StickyScrollContext","run","accessor","configurationService","get","newValue","getValue","updateValue","weight","FocusStickyScroll","precondition","and","has","stickyScrollVisible","runEditorCommand","_accessor","editor","focus","SelectNextStickyScrollLine","stickyScrollFocused","isEqualTo","keybinding","primary","focusNext","SelectPreviousStickyScrollLine","focusPrevious","GoToStickyScrollLine","goToFocused","SelectEditor","selectEditor"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollActions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { StickyScrollController } from './stickyScrollController.js';\nexport class ToggleStickyScroll extends Action2 {\n    constructor() {\n        super({\n            id: 'editor.action.toggleStickyScroll',\n            title: {\n                ...localize2('toggleEditorStickyScroll', \"Toggle Editor Sticky Scroll\"),\n                mnemonicTitle: localize({ key: 'mitoggleStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Editor Sticky Scroll\"),\n            },\n            metadata: {\n                description: localize2('toggleEditorStickyScroll.description', \"Toggle/enable the editor sticky scroll which shows the nested scopes at the top of the viewport\"),\n            },\n            category: Categories.View,\n            toggled: {\n                condition: ContextKeyExpr.equals('config.editor.stickyScroll.enabled', true),\n                title: localize('stickyScroll', \"Sticky Scroll\"),\n                mnemonicTitle: localize({ key: 'miStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Sticky Scroll\"),\n            },\n            menu: [\n                { id: MenuId.CommandPalette },\n                { id: MenuId.MenubarAppearanceMenu, group: '4_editor', order: 3 },\n                { id: MenuId.StickyScrollContext }\n            ]\n        });\n    }\n    async run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('editor.stickyScroll.enabled');\n        return configurationService.updateValue('editor.stickyScroll.enabled', newValue);\n    }\n}\nconst weight = 100 /* KeybindingWeight.EditorContrib */;\nexport class FocusStickyScroll extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.focusStickyScroll',\n            title: {\n                ...localize2('focusStickyScroll', \"Focus on the editor sticky scroll\"),\n                mnemonicTitle: localize({ key: 'mifocusStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Focus Sticky Scroll\"),\n            },\n            precondition: ContextKeyExpr.and(ContextKeyExpr.has('config.editor.stickyScroll.enabled'), EditorContextKeys.stickyScrollVisible),\n            menu: [\n                { id: MenuId.CommandPalette },\n            ]\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        StickyScrollController.get(editor)?.focus();\n    }\n}\nexport class SelectNextStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectNextStickyScrollLine',\n            title: localize2('selectNextStickyScrollLine.title', \"Select the next editor sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        StickyScrollController.get(editor)?.focusNext();\n    }\n}\nexport class SelectPreviousStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectPreviousStickyScrollLine',\n            title: localize2('selectPreviousStickyScrollLine.title', \"Select the previous sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        StickyScrollController.get(editor)?.focusPrevious();\n    }\n}\nexport class GoToStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.goToFocusedStickyScrollLine',\n            title: localize2('goToFocusedStickyScrollLine.title', \"Go to the focused sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        StickyScrollController.get(editor)?.goToFocused();\n    }\n}\nexport class SelectEditor extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectEditor',\n            title: localize2('selectEditor.title', \"Select Editor\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        StickyScrollController.get(editor)?.selectEditor();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}