{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', {\n  dark: '#89D185',\n  light: '#388A34',\n  hcDark: '#89D185',\n  hcLight: '#374e06'\n}, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', {\n  dark: '#B180D7',\n  light: '#652D90',\n  hcDark: '#B180D7',\n  hcLight: '#652D90'\n}, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));","map":{"version":3,"names":["nls","registerColor","transparent","foreground","editorErrorForeground","editorInfoForeground","editorWarningForeground","minimapFindMatch","chartsForeground","localize","chartsLines","chartsRed","chartsBlue","chartsYellow","chartsOrange","chartsGreen","dark","light","hcDark","hcLight","chartsPurple"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/chartsColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,oBAAoB;AACzC,SAASC,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,qBAAqB,EAAEC,oBAAoB,EAAEC,uBAAuB,QAAQ,mBAAmB;AACxG,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAO,MAAMC,gBAAgB,GAAGP,aAAa,CAAC,mBAAmB,EAAEE,UAAU,EAAEH,GAAG,CAACS,QAAQ,CAAC,kBAAkB,EAAE,sCAAsC,CAAC,CAAC;AACxJ,OAAO,MAAMC,WAAW,GAAGT,aAAa,CAAC,cAAc,EAAEC,WAAW,CAACC,UAAU,EAAE,EAAE,CAAC,EAAEH,GAAG,CAACS,QAAQ,CAAC,aAAa,EAAE,gDAAgD,CAAC,CAAC;AACpK,OAAO,MAAME,SAAS,GAAGV,aAAa,CAAC,YAAY,EAAEG,qBAAqB,EAAEJ,GAAG,CAACS,QAAQ,CAAC,WAAW,EAAE,6CAA6C,CAAC,CAAC;AACrJ,OAAO,MAAMG,UAAU,GAAGX,aAAa,CAAC,aAAa,EAAEI,oBAAoB,EAAEL,GAAG,CAACS,QAAQ,CAAC,YAAY,EAAE,8CAA8C,CAAC,CAAC;AACxJ,OAAO,MAAMI,YAAY,GAAGZ,aAAa,CAAC,eAAe,EAAEK,uBAAuB,EAAEN,GAAG,CAACS,QAAQ,CAAC,cAAc,EAAE,gDAAgD,CAAC,CAAC;AACnK,OAAO,MAAMK,YAAY,GAAGb,aAAa,CAAC,eAAe,EAAEM,gBAAgB,EAAEP,GAAG,CAACS,QAAQ,CAAC,cAAc,EAAE,gDAAgD,CAAC,CAAC;AAC5J,OAAO,MAAMM,WAAW,GAAGd,aAAa,CAAC,cAAc,EAAE;EAAEe,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,MAAM,EAAE,SAAS;EAAEC,OAAO,EAAE;AAAU,CAAC,EAAEnB,GAAG,CAACS,QAAQ,CAAC,aAAa,EAAE,+CAA+C,CAAC,CAAC;AACpN,OAAO,MAAMW,YAAY,GAAGnB,aAAa,CAAC,eAAe,EAAE;EAAEe,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,MAAM,EAAE,SAAS;EAAEC,OAAO,EAAE;AAAU,CAAC,EAAEnB,GAAG,CAACS,QAAQ,CAAC,cAAc,EAAE,gDAAgD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}