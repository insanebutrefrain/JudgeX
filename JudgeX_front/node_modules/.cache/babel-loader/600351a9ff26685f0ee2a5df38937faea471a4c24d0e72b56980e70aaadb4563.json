{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', {\n  dark: '#282828',\n  light: '#eeeeee',\n  hcDark: '#f38518',\n  hcLight: contrastBorder\n}, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', {\n  dark: '#ffffff0b',\n  light: '#fdff0033',\n  hcDark: null,\n  hcLight: null\n}, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', {\n  dark: editorFindMatchHighlight,\n  light: editorFindMatchHighlight,\n  hcDark: null,\n  hcLight: null\n}, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', {\n  dark: null,\n  light: null,\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\nexport const editorCursorForeground = registerColor('editorCursor.foreground', {\n  dark: '#AEAFAD',\n  light: Color.black,\n  hcDark: Color.white,\n  hcLight: '#0F4A85'\n}, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', {\n  dark: '#e3e4e229',\n  light: '#33333333',\n  hcDark: '#e3e4e229',\n  hcLight: '#CCCCCC'\n}, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', {\n  dark: '#858585',\n  light: '#237893',\n  hcDark: Color.white,\n  hcLight: '#292929'\n}, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', {\n  dark: '#c6c6c6',\n  light: '#0B216F',\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\nexport const editorRuler = registerColor('editorRuler.foreground', {\n  dark: '#5A5A5A',\n  light: Color.lightgrey,\n  hcDark: Color.white,\n  hcLight: '#292929'\n}, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', {\n  dark: '#999999',\n  light: '#919191',\n  hcDark: '#999999',\n  hcLight: '#292929'\n}, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', {\n  dark: '#0064001a',\n  light: '#0064001a',\n  hcDark: '#0064001a',\n  hcLight: '#0000'\n}, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', {\n  dark: '#888',\n  light: '#B9B9B9',\n  hcDark: contrastBorder,\n  hcLight: contrastBorder\n}, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', {\n  dark: '#7f7f7f4d',\n  light: '#7f7f7f4d',\n  hcDark: '#7f7f7f4d',\n  hcLight: '#666666'\n}, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', {\n  dark: null,\n  light: null,\n  hcDark: Color.fromHex('#fff').transparent(0.8),\n  hcLight: contrastBorder\n}, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', {\n  dark: Color.fromHex('#000a'),\n  light: Color.fromHex('#0007'),\n  hcDark: null,\n  hcLight: null\n}, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', {\n  dark: null,\n  light: null,\n  hcDark: Color.fromHex('#fff').transparent(0.8),\n  hcLight: Color.fromHex('#292929').transparent(0.8)\n}, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', {\n  dark: Color.fromHex('#ffffff56'),\n  light: Color.fromHex('#0007'),\n  hcDark: null,\n  hcLight: null\n}, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hcDark: new Color(new RGBA(255, 50, 50, 1)),\n  hcLight: '#B5200D'\n}, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hcDark: editorWarningBorder,\n  hcLight: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hcDark: editorInfoBorder,\n  hcLight: editorInfoBorder\n}, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', {\n  dark: '#FFD700',\n  light: '#0431FAFF',\n  hcDark: '#FFD700',\n  hcLight: '#0431FAFF'\n}, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', {\n  dark: '#DA70D6',\n  light: '#319331FF',\n  hcDark: '#DA70D6',\n  hcLight: '#319331FF'\n}, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', {\n  dark: '#179FFF',\n  light: '#7B3814FF',\n  hcDark: '#87CEFA',\n  hcLight: '#7B3814FF'\n}, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.8)),\n  light: new Color(new RGBA(255, 18, 18, 0.8)),\n  hcDark: 'new Color(new RGBA(255, 50, 50, 1))',\n  hcLight: '#B5200D'\n}, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n  const background = theme.getColor(editorBackground);\n  const lineHighlight = theme.getColor(editorLineHighlight);\n  const imeBackground = lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background;\n  if (imeBackground) {\n    collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n  }\n});","map":{"version":3,"names":["nls","Color","RGBA","activeContrastBorder","editorBackground","registerColor","editorWarningForeground","editorInfoForeground","editorWarningBorder","editorInfoBorder","contrastBorder","editorFindMatchHighlight","editorWarningBackground","registerThemingParticipant","editorLineHighlight","localize","editorLineHighlightBorder","dark","light","hcDark","hcLight","editorRangeHighlight","editorRangeHighlightBorder","editorSymbolHighlight","editorSymbolHighlightBorder","editorCursorForeground","black","white","editorCursorBackground","editorMultiCursorPrimaryForeground","editorMultiCursorPrimaryBackground","editorMultiCursorSecondaryForeground","editorMultiCursorSecondaryBackground","editorWhitespaces","editorLineNumbers","deprecatedEditorIndentGuides","deprecatedEditorActiveIndentGuides","editorIndentGuide1","editorIndentGuide2","editorIndentGuide3","editorIndentGuide4","editorIndentGuide5","editorIndentGuide6","editorActiveIndentGuide1","editorActiveIndentGuide2","editorActiveIndentGuide3","editorActiveIndentGuide4","editorActiveIndentGuide5","editorActiveIndentGuide6","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorDimmedLineNumber","editorRuler","lightgrey","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorOverviewRulerBackground","editorGutter","editorUnnecessaryCodeBorder","fromHex","transparent","editorUnnecessaryCodeOpacity","ghostTextBorder","ghostTextForeground","ghostTextBackground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorUnicodeHighlightBorder","editorUnicodeHighlightBackground","theme","collector","background","getColor","lineHighlight","imeBackground","isTransparent","addRule"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: 'new Color(new RGBA(255, 50, 50, 1))', hcLight: '#B5200D' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    const imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n    if (imeBackground) {\n        collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}