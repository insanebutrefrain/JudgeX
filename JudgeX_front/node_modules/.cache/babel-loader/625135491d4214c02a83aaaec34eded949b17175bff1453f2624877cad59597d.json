{"ast":null,"code":"var _SymbolNavigationAction, _GoToDefinitionAction, _OpenDefinitionToSideAction, _PeekDefinitionAction, _GoToDeclarationAction, _GoToTypeDefinitionAction, _PeekTypeDefinitionAction, _GoToImplementationAction, _PeekImplementationAction;\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n  submenu: MenuId.EditorContextPeek,\n  title: nls.localize('peek.submenu', \"Peek\"),\n  group: 'navigation',\n  order: 100\n});\nexport class SymbolNavigationAnchor {\n  static is(thing) {\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n    if (thing instanceof SymbolNavigationAnchor) {\n      return true;\n    }\n    if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n      return true;\n    }\n    return false;\n  }\n  constructor(model, position) {\n    this.model = model;\n    this.position = position;\n  }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n  static all() {\n    return SymbolNavigationAction._allSymbolNavigationCommands.values();\n  }\n  static _patchConfig(opts) {\n    const result = {\n      ...opts,\n      f1: true\n    };\n    // patch context menu when clause\n    if (result.menu) {\n      for (const item of Iterable.wrap(result.menu)) {\n        if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n          item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        }\n      }\n    }\n    return result;\n  }\n  constructor(configuration, opts) {\n    super(SymbolNavigationAction._patchConfig(opts));\n    this.configuration = configuration;\n    SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n  }\n  runEditorCommand(accessor, editor, arg, range) {\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(ICodeEditorService);\n    const progressService = accessor.get(IEditorProgressService);\n    const symbolNavService = accessor.get(ISymbolNavigationService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const instaService = accessor.get(IInstantiationService);\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n    const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n    const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async references => {\n      if (!references || cts.token.isCancellationRequested) {\n        return;\n      }\n      alert(references.ariaMessage);\n      let altAction;\n      if (references.referenceAt(model.uri, position)) {\n        const altActionId = this._getAlternativeCommand(editor);\n        if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n          altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n        }\n      }\n      const referenceCount = references.references.length;\n      if (referenceCount === 0) {\n        // no result -> show message\n        if (!this.configuration.muteMessage) {\n          const info = model.getWordAtPosition(position);\n          MessageController.get(editor)?.showMessage(this._getNoResultFoundMessage(info), position);\n        }\n      } else if (referenceCount === 1 && altAction) {\n        // already at the only result, run alternative\n        SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n        instaService.invokeFunction(accessor => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n          SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n        }));\n      } else {\n        // normal results handling\n        return this._onResult(editorService, symbolNavService, editor, references, range);\n      }\n    }, err => {\n      // report an error\n      notificationService.error(err);\n    }).finally(() => {\n      cts.dispose();\n    });\n    progressService.showWhile(promise, 250);\n    return promise;\n  }\n  async _onResult(editorService, symbolNavService, editor, model, range) {\n    const gotoLocation = this._getGoToPreference(editor);\n    if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) {\n      this._openInPeek(editor, model, range);\n    } else {\n      const next = model.firstReference();\n      const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n      const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n      if (peek && targetEditor) {\n        this._openInPeek(targetEditor, model, range);\n      } else {\n        model.dispose();\n      }\n      // keep remaining locations around when using\n      // 'goto'-mode\n      if (gotoLocation === 'goto') {\n        symbolNavService.put(next);\n      }\n    }\n  }\n  async _openReference(editor, editorService, reference, sideBySide, highlight) {\n    // range is the target-selection-range when we have one\n    // and the fallback is the 'full' range\n    let range = undefined;\n    if (isLocationLink(reference)) {\n      range = reference.targetSelectionRange;\n    }\n    if (!range) {\n      range = reference.range;\n    }\n    if (!range) {\n      return undefined;\n    }\n    const targetEditor = await editorService.openCodeEditor({\n      resource: reference.uri,\n      options: {\n        selection: Range.collapseToStart(range),\n        selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n        selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n      }\n    }, editor, sideBySide);\n    if (!targetEditor) {\n      return undefined;\n    }\n    if (highlight) {\n      const modelNow = targetEditor.getModel();\n      const decorations = targetEditor.createDecorationsCollection([{\n        range,\n        options: {\n          description: 'symbol-navigate-action-highlight',\n          className: 'symbolHighlight'\n        }\n      }]);\n      setTimeout(() => {\n        if (targetEditor.getModel() === modelNow) {\n          decorations.clear();\n        }\n      }, 350);\n    }\n    return targetEditor;\n  }\n  _openInPeek(target, model, range) {\n    const controller = ReferencesController.get(target);\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n    } else {\n      model.dispose();\n    }\n  }\n}\n//#region --- DEFINITION\n_SymbolNavigationAction = SymbolNavigationAction;\n_SymbolNavigationAction._allSymbolNavigationCommands = new Map();\n_SymbolNavigationAction._activeAlternativeCommands = new Set();\nexport class DefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n  }\n}\nregisterAction2((_GoToDefinitionAction = class GoToDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDefinitionAction.id,\n      title: {\n        ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Definition\")\n      },\n      precondition: EditorContextKeys.hasDefinitionProvider,\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }],\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.1\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 2\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n  }\n}, _GoToDefinitionAction.id = 'editor.action.revealDefinition', _GoToDefinitionAction));\nregisterAction2((_OpenDefinitionToSideAction = class OpenDefinitionToSideAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: true,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: OpenDefinitionToSideAction.id,\n      title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n  }\n}, _OpenDefinitionToSideAction.id = 'editor.action.revealDefinitionAside', _OpenDefinitionToSideAction));\nregisterAction2((_PeekDefinitionAction = class PeekDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekDefinitionAction.id,\n      title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n        linux: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 2\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n  }\n}, _PeekDefinitionAction.id = 'editor.action.peekDefinition', _PeekDefinitionAction));\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n  }\n}\nregisterAction2((_GoToDeclarationAction = class GoToDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDeclarationAction.id,\n      title: {\n        ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDeclaration',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Declaration\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.3\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n}, _GoToDeclarationAction.id = 'editor.action.revealDeclaration', _GoToDeclarationAction));\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.peekDeclaration',\n      title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 3\n      }\n    });\n  }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n  }\n}\nregisterAction2((_GoToTypeDefinitionAction = class GoToTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToTypeDefinitionAction.ID,\n      title: {\n        ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoTypeDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Type Definition\")\n      },\n      precondition: EditorContextKeys.hasTypeDefinitionProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.4\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n}, _GoToTypeDefinitionAction.ID = 'editor.action.goToTypeDefinition', _GoToTypeDefinitionAction));\nregisterAction2((_PeekTypeDefinitionAction = class PeekTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekTypeDefinitionAction.ID,\n      title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 4\n      }\n    });\n  }\n}, _PeekTypeDefinitionAction.ID = 'editor.action.peekTypeDefinition', _PeekTypeDefinitionAction));\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n  }\n}\nregisterAction2((_GoToImplementationAction = class GoToImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToImplementationAction.ID,\n      title: {\n        ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoImplementation',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Implementations\")\n      },\n      precondition: EditorContextKeys.hasImplementationProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 4\n      }]\n    });\n  }\n}, _GoToImplementationAction.ID = 'editor.action.goToImplementation', _GoToImplementationAction));\nregisterAction2((_PeekImplementationAction = class PeekImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekImplementationAction.ID,\n      title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 5\n      }\n    });\n  }\n}, _PeekImplementationAction.ID = 'editor.action.peekImplementation', _PeekImplementationAction));\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n  _getNoResultFoundMessage(info) {\n    return info ? nls.localize('references.no', \"No references found for '{0}'\", info.word) : nls.localize('references.noGeneric', \"No references found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: 'editor.action.goToReferences',\n      title: {\n        ...nls.localize2('goToReferences.label', \"Go to References\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoReference',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&References\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 5\n      }]\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n  }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.referenceSearch.trigger',\n      title: nls.localize2('references.action.label', \"Peek References\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 6\n      }\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n  }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n  constructor(config, _references, _gotoMultipleBehaviour) {\n    super(config, {\n      id: 'editor.action.goToLocation',\n      title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n      precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated())\n    });\n    this._references = _references;\n    this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n  }\n  async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n    return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n  }\n  _getGoToPreference(editor) {\n    return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n  _getAlternativeCommand() {\n    return '';\n  }\n}\nCommandsRegistry.registerCommand({\n  id: 'editor.action.goToLocations',\n  metadata: {\n    description: 'Go to locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }, {\n      name: 'noResultsMessage',\n      description: 'Human readable message that shows when locations is empty.'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    assertType(Array.isArray(references));\n    assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n    assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n    const editorService = accessor.get(ICodeEditorService);\n    const editor = await editorService.openCodeEditor({\n      resource\n    }, editorService.getFocusedCodeEditor());\n    if (isCodeEditor(editor)) {\n      editor.setPosition(position);\n      editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n      return editor.invokeWithinContext(accessor => {\n        const command = new class extends GenericGoToLocationAction {\n          _getNoResultFoundMessage(info) {\n            return noResultsMessage || super._getNoResultFoundMessage(info);\n          }\n        }({\n          muteMessage: !Boolean(noResultsMessage),\n          openInPeek: Boolean(openInPeek),\n          openToSide: false\n        }, references, multiple);\n        accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n      });\n    }\n  }\n});\nCommandsRegistry.registerCommand({\n  id: 'editor.action.peekLocations',\n  metadata: {\n    description: 'Peek locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple) => {\n    accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n  }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n  id: 'editor.action.findReferences',\n  handler: (accessor, resource, position) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const codeEditorService = accessor.get(ICodeEditorService);\n    return codeEditorService.openCodeEditor({\n      resource\n    }, codeEditorService.getFocusedCodeEditor()).then(control => {\n      if (!isCodeEditor(control) || !control.hasModel()) {\n        return undefined;\n      }\n      const controller = ReferencesController.get(control);\n      if (!controller) {\n        return undefined;\n      }\n      const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      return Promise.resolve(controller.toggleWidget(range, references, false));\n    });\n  }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion","map":{"version":3,"names":["alert","createCancelablePromise","raceCancellation","KeyChord","assertType","URI","EditorStateCancellationTokenSource","isCodeEditor","EditorAction2","ICodeEditorService","EmbeddedCodeEditorWidget","corePosition","Range","EditorContextKeys","isLocationLink","ReferencesController","ReferencesModel","ISymbolNavigationService","MessageController","PeekContext","nls","MenuId","MenuRegistry","registerAction2","CommandsRegistry","ICommandService","ContextKeyExpr","IInstantiationService","INotificationService","IEditorProgressService","getDeclarationsAtPosition","getDefinitionsAtPosition","getImplementationsAtPosition","getReferencesAtPosition","getTypeDefinitionsAtPosition","ILanguageFeaturesService","Iterable","IsWebContext","appendMenuItem","EditorContext","submenu","EditorContextPeek","title","localize","group","order","SymbolNavigationAnchor","is","thing","Position","isIPosition","position","model","constructor","SymbolNavigationAction","all","_allSymbolNavigationCommands","values","_patchConfig","opts","result","f1","menu","item","wrap","id","when","and","precondition","configuration","set","runEditorCommand","accessor","editor","arg","range","hasModel","Promise","resolve","undefined","notificationService","get","editorService","progressService","symbolNavService","languageFeaturesService","instaService","getModel","getPosition","anchor","cts","promise","_getLocationModel","token","then","references","isCancellationRequested","ariaMessage","altAction","referenceAt","uri","altActionId","_getAlternativeCommand","_activeAlternativeCommands","has","referenceCount","length","muteMessage","info","getWordAtPosition","showMessage","_getNoResultFoundMessage","add","desc","invokeFunction","finally","delete","_onResult","err","error","dispose","showWhile","gotoLocation","_getGoToPreference","openInPeek","_openInPeek","next","firstReference","peek","targetEditor","_openReference","openToSide","put","reference","sideBySide","highlight","targetSelectionRange","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","selectionSource","modelNow","decorations","createDecorationsCollection","description","className","setTimeout","clear","target","controller","toggleWidget","getSelection","_","_SymbolNavigationAction","Map","Set","DefinitionAction","definitionProvider","word","getOption","alternativeDefinitionCommand","multipleDefinitions","_GoToDefinitionAction","GoToDefinitionAction","localize2","mnemonicTitle","key","comment","hasDefinitionProvider","keybinding","editorTextFocus","primary","weight","MenubarGoMenu","registerCommandAlias","_OpenDefinitionToSideAction","OpenDefinitionToSideAction","isInEmbeddedEditor","toNegated","_PeekDefinitionAction","PeekDefinitionAction","notInPeekEditor","linux","DeclarationAction","declarationProvider","alternativeDeclarationCommand","multipleDeclarations","_GoToDeclarationAction","GoToDeclarationAction","hasDeclarationProvider","PeekDeclarationAction","TypeDefinitionAction","typeDefinitionProvider","alternativeTypeDefinitionCommand","multipleTypeDefinitions","_GoToTypeDefinitionAction","GoToTypeDefinitionAction","ID","hasTypeDefinitionProvider","_PeekTypeDefinitionAction","PeekTypeDefinitionAction","ImplementationAction","implementationProvider","alternativeImplementationCommand","multipleImplementations","_GoToImplementationAction","GoToImplementationAction","hasImplementationProvider","_PeekImplementationAction","PeekImplementationAction","ReferencesAction","alternativeReferenceCommand","multipleReferences","GoToReferencesAction","hasReferenceProvider","referenceProvider","PeekReferencesAction","GenericGoToLocationAction","config","_references","_gotoMultipleBehaviour","_model","_position","_token","registerCommand","metadata","args","name","constraint","Array","handler","multiple","noResultsMessage","isUri","isArray","getFocusedCodeEditor","setPosition","revealPositionInCenterIfOutsideViewport","invokeWithinContext","command","Boolean","run","bind","executeCommand","codeEditorService","control","lift","lineNumber","column"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    submenu: MenuId.EditorContextPeek,\n    title: nls.localize('peek.submenu', \"Peek\"),\n    group: 'navigation',\n    order: 100\n});\nexport class SymbolNavigationAnchor {\n    static is(thing) {\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        if (thing instanceof SymbolNavigationAnchor) {\n            return true;\n        }\n        if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n            return true;\n        }\n        return false;\n    }\n    constructor(model, position) {\n        this.model = model;\n        this.position = position;\n    }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n    static { this._allSymbolNavigationCommands = new Map(); }\n    static { this._activeAlternativeCommands = new Set(); }\n    static all() {\n        return SymbolNavigationAction._allSymbolNavigationCommands.values();\n    }\n    static _patchConfig(opts) {\n        const result = { ...opts, f1: true };\n        // patch context menu when clause\n        if (result.menu) {\n            for (const item of Iterable.wrap(result.menu)) {\n                if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n                    item.when = ContextKeyExpr.and(opts.precondition, item.when);\n                }\n            }\n        }\n        return result;\n    }\n    constructor(configuration, opts) {\n        super(SymbolNavigationAction._patchConfig(opts));\n        this.configuration = configuration;\n        SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n    }\n    runEditorCommand(accessor, editor, arg, range) {\n        if (!editor.hasModel()) {\n            return Promise.resolve(undefined);\n        }\n        const notificationService = accessor.get(INotificationService);\n        const editorService = accessor.get(ICodeEditorService);\n        const progressService = accessor.get(IEditorProgressService);\n        const symbolNavService = accessor.get(ISymbolNavigationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async (references) => {\n            if (!references || cts.token.isCancellationRequested) {\n                return;\n            }\n            alert(references.ariaMessage);\n            let altAction;\n            if (references.referenceAt(model.uri, position)) {\n                const altActionId = this._getAlternativeCommand(editor);\n                if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n                    altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n                }\n            }\n            const referenceCount = references.references.length;\n            if (referenceCount === 0) {\n                // no result -> show message\n                if (!this.configuration.muteMessage) {\n                    const info = model.getWordAtPosition(position);\n                    MessageController.get(editor)?.showMessage(this._getNoResultFoundMessage(info), position);\n                }\n            }\n            else if (referenceCount === 1 && altAction) {\n                // already at the only result, run alternative\n                SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n                instaService.invokeFunction((accessor) => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n                    SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n                }));\n            }\n            else {\n                // normal results handling\n                return this._onResult(editorService, symbolNavService, editor, references, range);\n            }\n        }, (err) => {\n            // report an error\n            notificationService.error(err);\n        }).finally(() => {\n            cts.dispose();\n        });\n        progressService.showWhile(promise, 250);\n        return promise;\n    }\n    async _onResult(editorService, symbolNavService, editor, model, range) {\n        const gotoLocation = this._getGoToPreference(editor);\n        if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\n            this._openInPeek(editor, model, range);\n        }\n        else {\n            const next = model.firstReference();\n            const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n            const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n            if (peek && targetEditor) {\n                this._openInPeek(targetEditor, model, range);\n            }\n            else {\n                model.dispose();\n            }\n            // keep remaining locations around when using\n            // 'goto'-mode\n            if (gotoLocation === 'goto') {\n                symbolNavService.put(next);\n            }\n        }\n    }\n    async _openReference(editor, editorService, reference, sideBySide, highlight) {\n        // range is the target-selection-range when we have one\n        // and the fallback is the 'full' range\n        let range = undefined;\n        if (isLocationLink(reference)) {\n            range = reference.targetSelectionRange;\n        }\n        if (!range) {\n            range = reference.range;\n        }\n        if (!range) {\n            return undefined;\n        }\n        const targetEditor = await editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n                selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n            }\n        }, editor, sideBySide);\n        if (!targetEditor) {\n            return undefined;\n        }\n        if (highlight) {\n            const modelNow = targetEditor.getModel();\n            const decorations = targetEditor.createDecorationsCollection([{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\n            setTimeout(() => {\n                if (targetEditor.getModel() === modelNow) {\n                    decorations.clear();\n                }\n            }, 350);\n        }\n        return targetEditor;\n    }\n    _openInPeek(target, model, range) {\n        const controller = ReferencesController.get(target);\n        if (controller && target.hasModel()) {\n            controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n        }\n        else {\n            model.dispose();\n        }\n    }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\n            : nls.localize('generic.noResults', \"No definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n    }\n}\nregisterAction2(class GoToDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDefinitionAction.id,\n            title: {\n                ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\"),\n            },\n            precondition: EditorContextKeys.hasDefinitionProvider,\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }],\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.1\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 2,\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n    }\n});\nregisterAction2(class OpenDefinitionToSideAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinitionAside'; }\n    constructor() {\n        super({\n            openToSide: true,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: OpenDefinitionToSideAction.id,\n            title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n    }\n});\nregisterAction2(class PeekDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.peekDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekDefinitionAction.id,\n            title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 2\n            }\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n    }\n});\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n    }\n}\nregisterAction2(class GoToDeclarationAction extends DeclarationAction {\n    static { this.id = 'editor.action.revealDeclaration'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDeclarationAction.id,\n            title: {\n                ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.3\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }],\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n});\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.peekDeclaration',\n            title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 3\n            }\n        });\n    }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n    }\n}\nregisterAction2(class GoToTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.goToTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToTypeDefinitionAction.ID,\n            title: {\n                ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\"),\n            },\n            precondition: EditorContextKeys.hasTypeDefinitionProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.4\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.peekTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekTypeDefinitionAction.ID,\n            title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 4\n            }\n        });\n    }\n});\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n    }\n}\nregisterAction2(class GoToImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.goToImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToImplementationAction.ID,\n            title: {\n                ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\"),\n            },\n            precondition: EditorContextKeys.hasImplementationProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 4,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.peekImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekImplementationAction.ID,\n            title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 5\n            }\n        });\n    }\n});\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n    _getNoResultFoundMessage(info) {\n        return info\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\n            : nls.localize('references.noGeneric', \"No references found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: 'editor.action.goToReferences',\n            title: {\n                ...nls.localize2('goToReferences.label', \"Go to References\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 5,\n                }]\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n    }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.referenceSearch.trigger',\n            title: nls.localize2('references.action.label', \"Peek References\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 6\n            }\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n    }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n    constructor(config, _references, _gotoMultipleBehaviour) {\n        super(config, {\n            id: 'editor.action.goToLocation',\n            title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n        });\n        this._references = _references;\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n    }\n    async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n        return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n    }\n    _getGoToPreference(editor) {\n        return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n    _getAlternativeCommand() { return ''; }\n}\nCommandsRegistry.registerCommand({\n    id: 'editor.action.goToLocations',\n    metadata: {\n        description: 'Go to locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        assertType(Array.isArray(references));\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n        const editorService = accessor.get(ICodeEditorService);\n        const editor = await editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\n        if (isCodeEditor(editor)) {\n            editor.setPosition(position);\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n            return editor.invokeWithinContext(accessor => {\n                const command = new class extends GenericGoToLocationAction {\n                    _getNoResultFoundMessage(info) {\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\n                    }\n                }({\n                    muteMessage: !Boolean(noResultsMessage),\n                    openInPeek: Boolean(openInPeek),\n                    openToSide: false\n                }, references, multiple);\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n            });\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: 'editor.action.peekLocations',\n    metadata: {\n        description: 'Peek locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple) => {\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: (accessor, resource, position) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n            if (!isCodeEditor(control) || !control.hasModel()) {\n                return undefined;\n            }\n            const controller = ReferencesController.get(control);\n            if (!controller) {\n                return undefined;\n            }\n            const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            return Promise.resolve(controller.toggleWidget(range, references, false));\n        });\n    }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}