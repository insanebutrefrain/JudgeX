{"ast":null,"code":"var _StandaloneEditorProgressService, _StandaloneNotificationService, _StandaloneWorkspaceContextService;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport '../../common/services/semanticTokensStylingService.js';\nimport '../../common/services/languageFeaturesService.js';\nimport '../../browser/services/hoverService/hoverService.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyCodeChord, decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { LogService } from '../../../platform/log/common/logService.js';\nimport { getEditorFeatures } from '../../common/editorFeatures.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { ITreeSitterParserService } from '../../common/services/treeSitterParserService.js';\nimport { StandaloneTreeSitterParserService } from './standaloneTreeSitterService.js';\nclass SimpleModel {\n  constructor(model) {\n    this.disposed = false;\n    this.model = model;\n    this._onWillDispose = new Emitter();\n  }\n  get textEditorModel() {\n    return this.model;\n  }\n  dispose() {\n    this.disposed = true;\n    this._onWillDispose.fire();\n  }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n  constructor(modelService) {\n    this.modelService = modelService;\n  }\n  createModelReference(resource) {\n    const model = this.modelService.getModel(resource);\n    if (!model) {\n      return Promise.reject(new Error(`Model not found`));\n    }\n    return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n  }\n};\nStandaloneTextModelService = __decorate([__param(0, IModelService)], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n  show() {\n    return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n  }\n  async showWhile(promise, delay) {\n    await promise;\n  }\n}\n_StandaloneEditorProgressService = StandaloneEditorProgressService;\n_StandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n  done: () => {},\n  total: () => {},\n  worked: () => {}\n};\nclass StandaloneProgressService {\n  withProgress(_options, task, onDidCancel) {\n    return task({\n      report: () => {}\n    });\n  }\n}\nclass StandaloneEnvironmentService {\n  constructor() {\n    this.isExtensionDevelopment = false;\n    this.isBuilt = false;\n  }\n}\nclass StandaloneDialogService {\n  async confirm(confirmation) {\n    const confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n    return {\n      confirmed,\n      checkboxChecked: false // unsupported\n    };\n  }\n  doConfirm(message, detail) {\n    let messageText = message;\n    if (detail) {\n      messageText = messageText + '\\n\\n' + detail;\n    }\n    return mainWindow.confirm(messageText);\n  }\n  async prompt(prompt) {\n    let result = undefined;\n    const confirmed = this.doConfirm(prompt.message, prompt.detail);\n    if (confirmed) {\n      const promptButtons = [...(prompt.buttons ?? [])];\n      if (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n        promptButtons.push(prompt.cancelButton);\n      }\n      result = await promptButtons[0]?.run({\n        checkboxChecked: false\n      });\n    }\n    return {\n      result\n    };\n  }\n  async error(message, detail) {\n    await this.prompt({\n      type: Severity.Error,\n      message,\n      detail\n    });\n  }\n}\nexport class StandaloneNotificationService {\n  info(message) {\n    return this.notify({\n      severity: Severity.Info,\n      message\n    });\n  }\n  warn(message) {\n    return this.notify({\n      severity: Severity.Warning,\n      message\n    });\n  }\n  error(error) {\n    return this.notify({\n      severity: Severity.Error,\n      message: error\n    });\n  }\n  notify(notification) {\n    switch (notification.severity) {\n      case Severity.Error:\n        console.error(notification.message);\n        break;\n      case Severity.Warning:\n        console.warn(notification.message);\n        break;\n      default:\n        console.log(notification.message);\n        break;\n    }\n    return StandaloneNotificationService.NO_OP;\n  }\n  prompt(severity, message, choices, options) {\n    return StandaloneNotificationService.NO_OP;\n  }\n  status(message, options) {\n    return Disposable.None;\n  }\n}\n_StandaloneNotificationService = StandaloneNotificationService;\n_StandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n  constructor(instantiationService) {\n    this._onWillExecuteCommand = new Emitter();\n    this._onDidExecuteCommand = new Emitter();\n    this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n    this._instantiationService = instantiationService;\n  }\n  executeCommand(id, ...args) {\n    const command = CommandsRegistry.getCommand(id);\n    if (!command) {\n      return Promise.reject(new Error(`command '${id}' not found`));\n    }\n    try {\n      this._onWillExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n      this._onDidExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      return Promise.resolve(result);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n};\nStandaloneCommandService = __decorate([__param(0, IInstantiationService)], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n  constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n    super(contextKeyService, commandService, telemetryService, notificationService, logService);\n    this._cachedResolver = null;\n    this._dynamicKeybindings = [];\n    this._domNodeListeners = [];\n    const addContainer = domNode => {\n      const disposables = new DisposableStore();\n      // for standard keybindings\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n          keyEvent.stopPropagation();\n        }\n      }));\n      // for single modifier chord keybindings (e.g. shift shift)\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n        }\n      }));\n      this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n    };\n    const removeContainer = domNode => {\n      for (let i = 0; i < this._domNodeListeners.length; i++) {\n        const domNodeListeners = this._domNodeListeners[i];\n        if (domNodeListeners.domNode === domNode) {\n          this._domNodeListeners.splice(i, 1);\n          domNodeListeners.dispose();\n        }\n      }\n    };\n    const addCodeEditor = codeEditor => {\n      if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n        return;\n      }\n      addContainer(codeEditor.getContainerDomNode());\n    };\n    const removeCodeEditor = codeEditor => {\n      if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n        return;\n      }\n      removeContainer(codeEditor.getContainerDomNode());\n    };\n    this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n    this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n    codeEditorService.listCodeEditors().forEach(addCodeEditor);\n    const addDiffEditor = diffEditor => {\n      addContainer(diffEditor.getContainerDomNode());\n    };\n    const removeDiffEditor = diffEditor => {\n      removeContainer(diffEditor.getContainerDomNode());\n    };\n    this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n    this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n    codeEditorService.listDiffEditors().forEach(addDiffEditor);\n  }\n  addDynamicKeybinding(command, keybinding, handler, when) {\n    return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n      keybinding,\n      command,\n      when\n    }]));\n  }\n  addDynamicKeybindings(rules) {\n    const entries = rules.map(rule => {\n      const keybinding = decodeKeybinding(rule.keybinding, OS);\n      return {\n        keybinding,\n        command: rule.command ?? null,\n        commandArgs: rule.commandArgs,\n        when: rule.when,\n        weight1: 1000,\n        weight2: 0,\n        extensionId: null,\n        isBuiltinExtension: false\n      };\n    });\n    this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n    this.updateResolver();\n    return toDisposable(() => {\n      // Search the first entry and remove them all since they will be contiguous\n      for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n        if (this._dynamicKeybindings[i] === entries[0]) {\n          this._dynamicKeybindings.splice(i, entries.length);\n          this.updateResolver();\n          return;\n        }\n      }\n    });\n  }\n  updateResolver() {\n    this._cachedResolver = null;\n    this._onDidUpdateKeybindings.fire();\n  }\n  _getResolver() {\n    if (!this._cachedResolver) {\n      const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n      const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n      this._cachedResolver = new KeybindingResolver(defaults, overrides, str => this._log(str));\n    }\n    return this._cachedResolver;\n  }\n  _documentHasFocus() {\n    return mainWindow.document.hasFocus();\n  }\n  _toNormalizedKeybindingItems(items, isDefault) {\n    const result = [];\n    let resultLen = 0;\n    for (const item of items) {\n      const when = item.when || undefined;\n      const keybinding = item.keybinding;\n      if (!keybinding) {\n        // This might be a removal keybinding item in user settings => accept it\n        result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n      } else {\n        const resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n        for (const resolvedKeybinding of resolvedKeybindings) {\n          result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n        }\n      }\n    }\n    return result;\n  }\n  resolveKeyboardEvent(keyboardEvent) {\n    const chord = new KeyCodeChord(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode);\n    return new USLayoutResolvedKeybinding([chord], OS);\n  }\n};\nStandaloneKeybindingService = __decorate([__param(0, IContextKeyService), __param(1, ICommandService), __param(2, ITelemetryService), __param(3, INotificationService), __param(4, ILogService), __param(5, ICodeEditorService)], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n  constructor(domNode, disposables) {\n    super();\n    this.domNode = domNode;\n    this._register(disposables);\n  }\n}\nfunction isConfigurationOverrides(thing) {\n  return thing && typeof thing === 'object' && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string') && (!thing.resource || thing.resource instanceof URI);\n}\nlet StandaloneConfigurationService = class StandaloneConfigurationService {\n  constructor(logService) {\n    this.logService = logService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    const defaultConfiguration = new DefaultConfiguration(logService);\n    this._configuration = new Configuration(defaultConfiguration.reload(), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), logService);\n    defaultConfiguration.dispose();\n  }\n  getValue(arg1, arg2) {\n    const section = typeof arg1 === 'string' ? arg1 : undefined;\n    const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n    return this._configuration.getValue(section, overrides, undefined);\n  }\n  updateValues(values) {\n    const previous = {\n      data: this._configuration.toData()\n    };\n    const changedKeys = [];\n    for (const entry of values) {\n      const [key, value] = entry;\n      if (this.getValue(key) === value) {\n        continue;\n      }\n      this._configuration.updateValue(key, value);\n      changedKeys.push(key);\n    }\n    if (changedKeys.length > 0) {\n      const configurationChangeEvent = new ConfigurationChangeEvent({\n        keys: changedKeys,\n        overrides: []\n      }, previous, this._configuration, undefined, this.logService);\n      configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n      this._onDidChangeConfiguration.fire(configurationChangeEvent);\n    }\n    return Promise.resolve();\n  }\n  updateValue(key, value, arg3, arg4) {\n    return this.updateValues([[key, value]]);\n  }\n  inspect(key, options = {}) {\n    return this._configuration.inspect(key, options, undefined);\n  }\n};\nStandaloneConfigurationService = __decorate([__param(0, ILogService)], StandaloneConfigurationService);\nexport { StandaloneConfigurationService };\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n  constructor(configurationService, modelService, languageService) {\n    this.configurationService = configurationService;\n    this.modelService = modelService;\n    this.languageService = languageService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.configurationService.onDidChangeConfiguration(e => {\n      this._onDidChangeConfiguration.fire({\n        affectedKeys: e.affectedKeys,\n        affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration)\n      });\n    });\n  }\n  getValue(resource, arg2, arg3) {\n    const position = Pos.isIPosition(arg2) ? arg2 : null;\n    const section = position ? typeof arg3 === 'string' ? arg3 : undefined : typeof arg2 === 'string' ? arg2 : undefined;\n    const language = resource ? this.getLanguage(resource, position) : undefined;\n    if (typeof section === 'undefined') {\n      return this.configurationService.getValue({\n        resource,\n        overrideIdentifier: language\n      });\n    }\n    return this.configurationService.getValue(section, {\n      resource,\n      overrideIdentifier: language\n    });\n  }\n  getLanguage(resource, position) {\n    const model = this.modelService.getModel(resource);\n    if (model) {\n      return position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n    }\n    return this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n  }\n};\nStandaloneResourceConfigurationService = __decorate([__param(0, IConfigurationService), __param(1, IModelService), __param(2, ILanguageService)], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n  }\n  getEOL(resource, language) {\n    const eol = this.configurationService.getValue('files.eol', {\n      overrideIdentifier: language,\n      resource\n    });\n    if (eol && typeof eol === 'string' && eol !== 'auto') {\n      return eol;\n    }\n    return isLinux || isMacintosh ? '\\n' : '\\r\\n';\n  }\n};\nStandaloneResourcePropertiesService = __decorate([__param(0, IConfigurationService)], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n  publicLog2() {}\n}\nclass StandaloneWorkspaceContextService {\n  constructor() {\n    const resource = URI.from({\n      scheme: StandaloneWorkspaceContextService.SCHEME,\n      authority: 'model',\n      path: '/'\n    });\n    this.workspace = {\n      id: STANDALONE_EDITOR_WORKSPACE_ID,\n      folders: [new WorkspaceFolder({\n        uri: resource,\n        name: '',\n        index: 0\n      })]\n    };\n  }\n  getWorkspace() {\n    return this.workspace;\n  }\n  getWorkspaceFolder(resource) {\n    return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n  }\n}\n_StandaloneWorkspaceContextService = StandaloneWorkspaceContextService;\n_StandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n  if (!source) {\n    return;\n  }\n  if (!(configurationService instanceof StandaloneConfigurationService)) {\n    return;\n  }\n  const toUpdate = [];\n  Object.keys(source).forEach(key => {\n    if (isEditorConfigurationKey(key)) {\n      toUpdate.push([`editor.${key}`, source[key]]);\n    }\n    if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n      toUpdate.push([`diffEditor.${key}`, source[key]]);\n    }\n  });\n  if (toUpdate.length > 0) {\n    configurationService.updateValues(toUpdate);\n  }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n  constructor(_modelService) {\n    this._modelService = _modelService;\n    //\n  }\n  hasPreviewHandler() {\n    return false;\n  }\n  async apply(editsIn, _options) {\n    const edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n    const textEdits = new Map();\n    for (const edit of edits) {\n      if (!(edit instanceof ResourceTextEdit)) {\n        throw new Error('bad edit - only text edits are supported');\n      }\n      const model = this._modelService.getModel(edit.resource);\n      if (!model) {\n        throw new Error('bad edit - model not found');\n      }\n      if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n        throw new Error('bad state - model changed in the meantime');\n      }\n      let array = textEdits.get(model);\n      if (!array) {\n        array = [];\n        textEdits.set(model, array);\n      }\n      array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n    }\n    let totalEdits = 0;\n    let totalFiles = 0;\n    for (const [model, edits] of textEdits) {\n      model.pushStackElement();\n      model.pushEditOperations([], edits, () => []);\n      model.pushStackElement();\n      totalFiles += 1;\n      totalEdits += edits.length;\n    }\n    return {\n      ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n      isApplied: totalEdits > 0\n    };\n  }\n};\nStandaloneBulkEditService = __decorate([__param(0, IModelService)], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n  getUriLabel(resource, options) {\n    if (resource.scheme === 'file') {\n      return resource.fsPath;\n    }\n    return resource.path;\n  }\n  getUriBasenameLabel(resource) {\n    return basename(resource);\n  }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n  constructor(layoutService, _codeEditorService) {\n    super(layoutService);\n    this._codeEditorService = _codeEditorService;\n  }\n  showContextView(delegate, container, shadowRoot) {\n    if (!container) {\n      const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n      if (codeEditor) {\n        container = codeEditor.getContainerDomNode();\n      }\n    }\n    return super.showContextView(delegate, container, shadowRoot);\n  }\n};\nStandaloneContextViewService = __decorate([__param(0, ILayoutService), __param(1, ICodeEditorService)], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n  constructor() {\n    this._neverEmitter = new Emitter();\n    this.onDidChangeTrust = this._neverEmitter.event;\n  }\n  isWorkspaceTrusted() {\n    return true;\n  }\n}\nclass StandaloneLanguageService extends LanguageService {\n  constructor() {\n    super();\n  }\n}\nclass StandaloneLogService extends LogService {\n  constructor() {\n    super(new ConsoleLogger());\n  }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n  constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n    super(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n    this.configure({\n      blockMouse: false\n    }); // we do not want that in the standalone editor\n  }\n};\nStandaloneContextMenuService = __decorate([__param(0, ITelemetryService), __param(1, INotificationService), __param(2, IContextViewService), __param(3, IKeybindingService), __param(4, IMenuService), __param(5, IContextKeyService)], StandaloneContextMenuService);\nexport const standaloneEditorWorkerDescriptor = {\n  amdModuleId: 'vs/editor/common/services/editorSimpleWorker',\n  esmModuleLocation: undefined,\n  label: 'editorWorkerService'\n};\nlet StandaloneEditorWorkerService = class StandaloneEditorWorkerService extends EditorWorkerService {\n  constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n    super(standaloneEditorWorkerDescriptor, modelService, configurationService, logService, languageConfigurationService, languageFeaturesService);\n  }\n};\nStandaloneEditorWorkerService = __decorate([__param(0, IModelService), __param(1, ITextResourceConfigurationService), __param(2, ILogService), __param(3, ILanguageConfigurationService), __param(4, ILanguageFeaturesService)], StandaloneEditorWorkerService);\nclass StandaloneAccessbilitySignalService {\n  async playSignal(cue, options) {}\n}\nregisterSingleton(ILogService, StandaloneLogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILabelService, StandaloneUriLabelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IDialogService, StandaloneDialogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, 0 /* InstantiationType.Eager */);\nregisterSingleton(INotificationService, StandaloneNotificationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerService, MarkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILanguageService, StandaloneLanguageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IModelService, ModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextKeyService, ContextKeyService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IProgressService, StandaloneProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStorageService, InMemoryStorageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorWorkerService, StandaloneEditorWorkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextModelService, StandaloneTextModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilityService, AccessibilityService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IListService, ListService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ICommandService, StandaloneCommandService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextViewService, StandaloneContextViewService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IOpenerService, OpenerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IClipboardService, BrowserClipboardService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMenuService, MenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITreeSitterParserService, StandaloneTreeSitterParserService, 0 /* InstantiationType.Eager */);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n  const serviceCollection = new ServiceCollection();\n  for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n    serviceCollection.set(id, descriptor);\n  }\n  const instantiationService = new InstantiationService(serviceCollection, true);\n  serviceCollection.set(IInstantiationService, instantiationService);\n  function get(serviceId) {\n    if (!initialized) {\n      initialize({});\n    }\n    const r = serviceCollection.get(serviceId);\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n    if (r instanceof SyncDescriptor) {\n      return instantiationService.invokeFunction(accessor => accessor.get(serviceId));\n    } else {\n      return r;\n    }\n  }\n  StandaloneServices.get = get;\n  let initialized = false;\n  const onDidInitialize = new Emitter();\n  function initialize(overrides) {\n    if (initialized) {\n      return instantiationService;\n    }\n    initialized = true;\n    // Add singletons that were registered after this module loaded\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n      if (!serviceCollection.get(id)) {\n        serviceCollection.set(id, descriptor);\n      }\n    }\n    // Initialize the service collection with the overrides, but only if the\n    // service was not instantiated in the meantime.\n    for (const serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        const serviceIdentifier = createDecorator(serviceId);\n        const r = serviceCollection.get(serviceIdentifier);\n        if (r instanceof SyncDescriptor) {\n          serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n        }\n      }\n    }\n    // Instantiate all editor features\n    const editorFeatures = getEditorFeatures();\n    for (const feature of editorFeatures) {\n      try {\n        instantiationService.createInstance(feature);\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n    onDidInitialize.fire();\n    return instantiationService;\n  }\n  StandaloneServices.initialize = initialize;\n  /**\n   * Executes callback once services are initialized.\n   */\n  function withServices(callback) {\n    if (initialized) {\n      return callback();\n    }\n    const disposable = new DisposableStore();\n    const listener = disposable.add(onDidInitialize.event(() => {\n      listener.dispose();\n      disposable.add(callback());\n    }));\n    return disposable;\n  }\n  StandaloneServices.withServices = withServices;\n})(StandaloneServices || (StandaloneServices = {}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","strings","dom","StandardKeyboardEvent","Emitter","KeyCodeChord","decodeKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","combinedDisposable","OS","isLinux","isMacintosh","Severity","URI","IBulkEditService","ResourceEdit","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","ITextModelService","ITextResourceConfigurationService","ITextResourcePropertiesService","CommandsRegistry","ICommandService","IConfigurationService","Configuration","ConfigurationModel","ConfigurationChangeEvent","IContextKeyService","IDialogService","createDecorator","IInstantiationService","AbstractKeybindingService","IKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","ILabelService","INotificationService","NoOpNotification","IEditorProgressService","IProgressService","ITelemetryService","IWorkspaceContextService","WorkspaceFolder","STANDALONE_EDITOR_WORKSPACE_ID","ILayoutService","StandaloneServicesNLS","basename","ICodeEditorService","ConsoleLogger","ILogService","IWorkspaceTrustManagementService","IContextMenuService","IContextViewService","ContextViewService","LanguageService","ContextMenuService","getSingletonServiceDescriptors","registerSingleton","OpenerService","IEditorWorkerService","EditorWorkerService","ILanguageService","MarkerDecorationsService","IMarkerDecorationsService","ModelService","StandaloneQuickInputService","StandaloneThemeService","IStandaloneThemeService","AccessibilityService","IAccessibilityService","IMenuService","MenuService","BrowserClipboardService","IClipboardService","ContextKeyService","SyncDescriptor","InstantiationService","ServiceCollection","IListService","ListService","IMarkerService","MarkerService","IOpenerService","IQuickInputService","IStorageService","InMemoryStorageService","DefaultConfiguration","IAccessibilitySignalService","ILanguageFeaturesService","ILanguageConfigurationService","LogService","getEditorFeatures","onUnexpectedError","IEnvironmentService","mainWindow","ResourceMap","ITreeSitterParserService","StandaloneTreeSitterParserService","SimpleModel","constructor","model","disposed","_onWillDispose","textEditorModel","dispose","fire","StandaloneTextModelService","modelService","createModelReference","resource","getModel","Promise","reject","Error","resolve","StandaloneEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","_StandaloneEditorProgressService","done","total","worked","StandaloneProgressService","withProgress","_options","task","onDidCancel","report","StandaloneEnvironmentService","isExtensionDevelopment","isBuilt","StandaloneDialogService","confirm","confirmation","confirmed","doConfirm","message","detail","checkboxChecked","messageText","prompt","result","undefined","promptButtons","buttons","cancelButton","push","run","error","type","StandaloneNotificationService","info","notify","severity","Info","warn","Warning","notification","console","log","NO_OP","choices","options","status","None","_StandaloneNotificationService","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","onDidExecuteCommand","event","_instantiationService","executeCommand","id","args","command","getCommand","commandId","invokeFunction","apply","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","codeEditorService","_cachedResolver","_dynamicKeybindings","_domNodeListeners","addContainer","domNode","disposables","add","addDisposableListener","EventType","KEY_DOWN","e","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","DomNodeListeners","removeContainer","domNodeListeners","splice","addCodeEditor","codeEditor","getOption","getContainerDomNode","removeCodeEditor","_register","onCodeEditorAdd","onCodeEditorRemove","listCodeEditors","forEach","addDiffEditor","diffEditor","removeDiffEditor","onDiffEditorAdd","onDiffEditorRemove","listDiffEditors","addDynamicKeybinding","keybinding","when","registerCommand","addDynamicKeybindings","rules","entries","map","rule","commandArgs","weight1","weight2","extensionId","isBuiltinExtension","concat","updateResolver","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","_documentHasFocus","document","hasFocus","items","isDefault","resultLen","item","resolvedKeybindings","resolveKeybinding","resolvedKeybinding","resolveKeyboardEvent","keyboardEvent","chord","ctrlKey","shiftKey","altKey","metaKey","keyCode","isConfigurationOverrides","thing","overrideIdentifier","StandaloneConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","defaultConfiguration","_configuration","reload","createEmptyModel","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","value","updateValue","configurationChangeEvent","keys","source","arg3","arg4","inspect","StandaloneResourceConfigurationService","configurationService","languageService","affectedKeys","affectsConfiguration","configuration","position","isIPosition","language","getLanguage","getLanguageIdAtPosition","lineNumber","column","getLanguageId","guessLanguageIdByFilepathOrFirstLine","StandaloneResourcePropertiesService","getEOL","eol","StandaloneTelemetryService","publicLog2","StandaloneWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","uri","name","index","getWorkspace","getWorkspaceFolder","_StandaloneWorkspaceContextService","updateConfigurationService","isDiffEditor","toUpdate","StandaloneBulkEditService","_modelService","hasPreviewHandler","editsIn","edits","Array","isArray","convert","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","isApplied","StandaloneUriLabelService","getUriLabel","fsPath","getUriBasenameLabel","StandaloneContextViewService","layoutService","_codeEditorService","showContextView","delegate","container","shadowRoot","getFocusedCodeEditor","getActiveCodeEditor","StandaloneWorkspaceTrustManagementService","_neverEmitter","onDidChangeTrust","isWorkspaceTrusted","StandaloneLanguageService","StandaloneLogService","StandaloneContextMenuService","contextViewService","keybindingService","menuService","configure","blockMouse","standaloneEditorWorkerDescriptor","amdModuleId","esmModuleLocation","label","StandaloneEditorWorkerService","languageConfigurationService","languageFeaturesService","StandaloneAccessbilitySignalService","playSignal","cue","StandaloneServices","serviceCollection","descriptor","serviceId","initialized","initialize","accessor","onDidInitialize","hasOwnProperty","serviceIdentifier","editorFeatures","feature","createInstance","withServices","callback","disposable","listener"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport '../../common/services/semanticTokensStylingService.js';\nimport '../../common/services/languageFeaturesService.js';\nimport '../../browser/services/hoverService/hoverService.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyCodeChord, decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { LogService } from '../../../platform/log/common/logService.js';\nimport { getEditorFeatures } from '../../common/editorFeatures.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { ITreeSitterParserService } from '../../common/services/treeSitterParserService.js';\nimport { StandaloneTreeSitterParserService } from './standaloneTreeSitterService.js';\nclass SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    createModelReference(resource) {\n        const model = this.modelService.getModel(resource);\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n};\nStandaloneTextModelService = __decorate([\n    __param(0, IModelService)\n], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n    static { this.NULL_PROGRESS_RUNNER = {\n        done: () => { },\n        total: () => { },\n        worked: () => { }\n    }; }\n    show() {\n        return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    async showWhile(promise, delay) {\n        await promise;\n    }\n}\nclass StandaloneProgressService {\n    withProgress(_options, task, onDidCancel) {\n        return task({\n            report: () => { },\n        });\n    }\n}\nclass StandaloneEnvironmentService {\n    constructor() {\n        this.isExtensionDevelopment = false;\n        this.isBuilt = false;\n    }\n}\nclass StandaloneDialogService {\n    async confirm(confirmation) {\n        const confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n        return {\n            confirmed,\n            checkboxChecked: false // unsupported\n        };\n    }\n    doConfirm(message, detail) {\n        let messageText = message;\n        if (detail) {\n            messageText = messageText + '\\n\\n' + detail;\n        }\n        return mainWindow.confirm(messageText);\n    }\n    async prompt(prompt) {\n        let result = undefined;\n        const confirmed = this.doConfirm(prompt.message, prompt.detail);\n        if (confirmed) {\n            const promptButtons = [...(prompt.buttons ?? [])];\n            if (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n                promptButtons.push(prompt.cancelButton);\n            }\n            result = await promptButtons[0]?.run({ checkboxChecked: false });\n        }\n        return { result };\n    }\n    async error(message, detail) {\n        await this.prompt({ type: Severity.Error, message, detail });\n    }\n}\nexport class StandaloneNotificationService {\n    static { this.NO_OP = new NoOpNotification(); }\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return StandaloneNotificationService.NO_OP;\n    }\n    prompt(severity, message, choices, options) {\n        return StandaloneNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nlet StandaloneCommandService = class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\nStandaloneCommandService = __decorate([\n    __param(0, IInstantiationService)\n], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        this._domNodeListeners = [];\n        const addContainer = (domNode) => {\n            const disposables = new DisposableStore();\n            // for standard keybindings\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                    keyEvent.stopPropagation();\n                }\n            }));\n            // for single modifier chord keybindings (e.g. shift shift)\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n            }));\n            this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n        };\n        const removeContainer = (domNode) => {\n            for (let i = 0; i < this._domNodeListeners.length; i++) {\n                const domNodeListeners = this._domNodeListeners[i];\n                if (domNodeListeners.domNode === domNode) {\n                    this._domNodeListeners.splice(i, 1);\n                    domNodeListeners.dispose();\n                }\n            }\n        };\n        const addCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            addContainer(codeEditor.getContainerDomNode());\n        };\n        const removeCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            removeContainer(codeEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n        this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n        codeEditorService.listCodeEditors().forEach(addCodeEditor);\n        const addDiffEditor = (diffEditor) => {\n            addContainer(diffEditor.getContainerDomNode());\n        };\n        const removeDiffEditor = (diffEditor) => {\n            removeContainer(diffEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n        this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n        codeEditorService.listDiffEditors().forEach(addDiffEditor);\n    }\n    addDynamicKeybinding(command, keybinding, handler, when) {\n        return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n                keybinding,\n                command,\n                when\n            }]));\n    }\n    addDynamicKeybindings(rules) {\n        const entries = rules.map((rule) => {\n            const keybinding = decodeKeybinding(rule.keybinding, OS);\n            return {\n                keybinding,\n                command: rule.command ?? null,\n                commandArgs: rule.commandArgs,\n                when: rule.when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            };\n        });\n        this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n        this.updateResolver();\n        return toDisposable(() => {\n            // Search the first entry and remove them all since they will be contiguous\n            for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                if (this._dynamicKeybindings[i] === entries[0]) {\n                    this._dynamicKeybindings.splice(i, entries.length);\n                    this.updateResolver();\n                    return;\n                }\n            }\n        });\n    }\n    updateResolver() {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire();\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return mainWindow.document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        const result = [];\n        let resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const chord = new KeyCodeChord(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode);\n        return new USLayoutResolvedKeybinding([chord], OS);\n    }\n};\nStandaloneKeybindingService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICommandService),\n    __param(2, ITelemetryService),\n    __param(3, INotificationService),\n    __param(4, ILogService),\n    __param(5, ICodeEditorService)\n], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n    constructor(domNode, disposables) {\n        super();\n        this.domNode = domNode;\n        this._register(disposables);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nlet StandaloneConfigurationService = class StandaloneConfigurationService {\n    constructor(logService) {\n        this.logService = logService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        const defaultConfiguration = new DefaultConfiguration(logService);\n        this._configuration = new Configuration(defaultConfiguration.reload(), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), logService);\n        defaultConfiguration.dispose();\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        const changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration, undefined, this.logService);\n            configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n    updateValue(key, value, arg3, arg4) {\n        return this.updateValues([[key, value]]);\n    }\n    inspect(key, options = {}) {\n        return this._configuration.inspect(key, options, undefined);\n    }\n};\nStandaloneConfigurationService = __decorate([\n    __param(0, ILogService)\n], StandaloneConfigurationService);\nexport { StandaloneConfigurationService };\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n    constructor(configurationService, modelService, languageService) {\n        this.configurationService = configurationService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        const language = resource ? this.getLanguage(resource, position) : undefined;\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue({\n                resource,\n                overrideIdentifier: language\n            });\n        }\n        return this.configurationService.getValue(section, {\n            resource,\n            overrideIdentifier: language\n        });\n    }\n    getLanguage(resource, position) {\n        const model = this.modelService.getModel(resource);\n        if (model) {\n            return position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n        }\n        return this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n    }\n};\nStandaloneResourceConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, IModelService),\n    __param(2, ILanguageService)\n], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nStandaloneResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n    publicLog2() { }\n}\nclass StandaloneWorkspaceContextService {\n    static { this.SCHEME = 'inmemory'; }\n    constructor() {\n        const resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: STANDALONE_EDITOR_WORKSPACE_ID, folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n    getWorkspaceFolder(resource) {\n        return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n    }\n}\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof StandaloneConfigurationService)) {\n        return;\n    }\n    const toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    async apply(editsIn, _options) {\n        const edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n        const textEdits = new Map();\n        for (const edit of edits) {\n            if (!(edit instanceof ResourceTextEdit)) {\n                throw new Error('bad edit - only text edits are supported');\n            }\n            const model = this._modelService.getModel(edit.resource);\n            if (!model) {\n                throw new Error('bad edit - model not found');\n            }\n            if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                throw new Error('bad state - model changed in the meantime');\n            }\n            let array = textEdits.get(model);\n            if (!array) {\n                array = [];\n                textEdits.set(model, array);\n            }\n            array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n        }\n        let totalEdits = 0;\n        let totalFiles = 0;\n        for (const [model, edits] of textEdits) {\n            model.pushStackElement();\n            model.pushEditOperations([], edits, () => []);\n            model.pushStackElement();\n            totalFiles += 1;\n            totalEdits += edits.length;\n        }\n        return {\n            ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n            isApplied: totalEdits > 0\n        };\n    }\n};\nStandaloneBulkEditService = __decorate([\n    __param(0, IModelService)\n], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n    getUriBasenameLabel(resource) {\n        return basename(resource);\n    }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n    constructor(layoutService, _codeEditorService) {\n        super(layoutService);\n        this._codeEditorService = _codeEditorService;\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (!container) {\n            const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n            if (codeEditor) {\n                container = codeEditor.getContainerDomNode();\n            }\n        }\n        return super.showContextView(delegate, container, shadowRoot);\n    }\n};\nStandaloneContextViewService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ICodeEditorService)\n], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n    constructor() {\n        this._neverEmitter = new Emitter();\n        this.onDidChangeTrust = this._neverEmitter.event;\n    }\n    isWorkspaceTrusted() {\n        return true;\n    }\n}\nclass StandaloneLanguageService extends LanguageService {\n    constructor() {\n        super();\n    }\n}\nclass StandaloneLogService extends LogService {\n    constructor() {\n        super(new ConsoleLogger());\n    }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n        this.configure({ blockMouse: false }); // we do not want that in the standalone editor\n    }\n};\nStandaloneContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], StandaloneContextMenuService);\nexport const standaloneEditorWorkerDescriptor = {\n    amdModuleId: 'vs/editor/common/services/editorSimpleWorker',\n    esmModuleLocation: undefined,\n    label: 'editorWorkerService'\n};\nlet StandaloneEditorWorkerService = class StandaloneEditorWorkerService extends EditorWorkerService {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super(standaloneEditorWorkerDescriptor, modelService, configurationService, logService, languageConfigurationService, languageFeaturesService);\n    }\n};\nStandaloneEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], StandaloneEditorWorkerService);\nclass StandaloneAccessbilitySignalService {\n    async playSignal(cue, options) {\n    }\n}\nregisterSingleton(ILogService, StandaloneLogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILabelService, StandaloneUriLabelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IDialogService, StandaloneDialogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, 0 /* InstantiationType.Eager */);\nregisterSingleton(INotificationService, StandaloneNotificationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerService, MarkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILanguageService, StandaloneLanguageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IModelService, ModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextKeyService, ContextKeyService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IProgressService, StandaloneProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStorageService, InMemoryStorageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorWorkerService, StandaloneEditorWorkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextModelService, StandaloneTextModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilityService, AccessibilityService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IListService, ListService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ICommandService, StandaloneCommandService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextViewService, StandaloneContextViewService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IOpenerService, OpenerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IClipboardService, BrowserClipboardService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMenuService, MenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITreeSitterParserService, StandaloneTreeSitterParserService, 0 /* InstantiationType.Eager */);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n    const serviceCollection = new ServiceCollection();\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n        serviceCollection.set(id, descriptor);\n    }\n    const instantiationService = new InstantiationService(serviceCollection, true);\n    serviceCollection.set(IInstantiationService, instantiationService);\n    function get(serviceId) {\n        if (!initialized) {\n            initialize({});\n        }\n        const r = serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        if (r instanceof SyncDescriptor) {\n            return instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n        }\n        else {\n            return r;\n        }\n    }\n    StandaloneServices.get = get;\n    let initialized = false;\n    const onDidInitialize = new Emitter();\n    function initialize(overrides) {\n        if (initialized) {\n            return instantiationService;\n        }\n        initialized = true;\n        // Add singletons that were registered after this module loaded\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            if (!serviceCollection.get(id)) {\n                serviceCollection.set(id, descriptor);\n            }\n        }\n        // Initialize the service collection with the overrides, but only if the\n        // service was not instantiated in the meantime.\n        for (const serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                const serviceIdentifier = createDecorator(serviceId);\n                const r = serviceCollection.get(serviceIdentifier);\n                if (r instanceof SyncDescriptor) {\n                    serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n                }\n            }\n        }\n        // Instantiate all editor features\n        const editorFeatures = getEditorFeatures();\n        for (const feature of editorFeatures) {\n            try {\n                instantiationService.createInstance(feature);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        onDidInitialize.fire();\n        return instantiationService;\n    }\n    StandaloneServices.initialize = initialize;\n    /**\n     * Executes callback once services are initialized.\n     */\n    function withServices(callback) {\n        if (initialized) {\n            return callback();\n        }\n        const disposable = new DisposableStore();\n        const listener = disposable.add(onDidInitialize.event(() => {\n            listener.dispose();\n            disposable.add(callback());\n        }));\n        return disposable;\n    }\n    StandaloneServices.withServices = withServices;\n})(StandaloneServices || (StandaloneServices = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}