{"ast":null,"code":"var _FileAccessImpl;\nimport \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\nexport var Schemas;\n(function (Schemas) {\n  /**\n   * A schema that is used for models that exist in memory\n   * only and that have no correspondence on a server or such.\n   */\n  Schemas.inMemory = 'inmemory';\n  /**\n   * A schema that is used for setting files\n   */\n  Schemas.vscode = 'vscode';\n  /**\n   * A schema that is used for internal private files\n   */\n  Schemas.internal = 'private';\n  /**\n   * A walk-through document.\n   */\n  Schemas.walkThrough = 'walkThrough';\n  /**\n   * An embedded code snippet.\n   */\n  Schemas.walkThroughSnippet = 'walkThroughSnippet';\n  Schemas.http = 'http';\n  Schemas.https = 'https';\n  Schemas.file = 'file';\n  Schemas.mailto = 'mailto';\n  Schemas.untitled = 'untitled';\n  Schemas.data = 'data';\n  Schemas.command = 'command';\n  Schemas.vscodeRemote = 'vscode-remote';\n  Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n  Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n  Schemas.vscodeUserData = 'vscode-userdata';\n  Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n  Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n  Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n  Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n  Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n  Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n  Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n  Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n  Schemas.vscodeSettings = 'vscode-settings';\n  Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n  Schemas.vscodeTerminal = 'vscode-terminal';\n  /** Scheme used for code blocks in chat. */\n  Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n  /** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n  Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n  /** Scheme used for the chat input editor. */\n  Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n  /**\n   * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n   */\n  Schemas.webviewPanel = 'webview-panel';\n  /**\n   * Scheme used for loading the wrapper html and script in webviews.\n   */\n  Schemas.vscodeWebview = 'vscode-webview';\n  /**\n   * Scheme used for extension pages\n   */\n  Schemas.extension = 'extension';\n  /**\n   * Scheme used as a replacement of `file` scheme to load\n   * files with our custom protocol handler (desktop only).\n   */\n  Schemas.vscodeFileResource = 'vscode-file';\n  /**\n   * Scheme used for temporary resources\n   */\n  Schemas.tmp = 'tmp';\n  /**\n   * Scheme used vs live share\n   */\n  Schemas.vsls = 'vsls';\n  /**\n   * Scheme used for the Source Control commit input's text document\n   */\n  Schemas.vscodeSourceControl = 'vscode-scm';\n  /**\n   * Scheme used for input box for creating comments.\n   */\n  Schemas.commentsInput = 'comment';\n  /**\n   * Scheme used for special rendering of settings in the release notes\n   */\n  Schemas.codeSetting = 'code-setting';\n  /**\n   * Scheme used for output panel resources\n   */\n  Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {}));\nexport function matchesScheme(target, scheme) {\n  if (URI.isUri(target)) {\n    return equalsIgnoreCase(target.scheme, scheme);\n  } else {\n    return startsWithIgnoreCase(target, scheme + ':');\n  }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n  return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n  constructor() {\n    this._hosts = Object.create(null);\n    this._ports = Object.create(null);\n    this._connectionTokens = Object.create(null);\n    this._preferredWebSchema = 'http';\n    this._delegate = null;\n    this._serverRootPath = '/';\n  }\n  setPreferredWebSchema(schema) {\n    this._preferredWebSchema = schema;\n  }\n  get _remoteResourcesPath() {\n    return paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n  }\n  rewrite(uri) {\n    if (this._delegate) {\n      try {\n        return this._delegate(uri);\n      } catch (err) {\n        errors.onUnexpectedError(err);\n        return uri;\n      }\n    }\n    const authority = uri.authority;\n    let host = this._hosts[authority];\n    if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n      host = `[${host}]`;\n    }\n    const port = this._ports[authority];\n    const connectionToken = this._connectionTokens[authority];\n    let query = `path=${encodeURIComponent(uri.path)}`;\n    if (typeof connectionToken === 'string') {\n      query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n    }\n    return URI.from({\n      scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n      authority: `${host}:${port}`,\n      path: this._remoteResourcesPath,\n      query\n    });\n  }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n  /**\n   * Returns a URI to use in contexts where the browser is responsible\n   * for loading (e.g. fetch()) or when used within the DOM.\n   *\n   * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n   */\n  asBrowserUri(resourcePath) {\n    // ESM-comment-begin\n    // \t\tconst uri = this.toUri(resourcePath, require);\n    // ESM-comment-end\n    // ESM-uncomment-begin\n    const uri = this.toUri(resourcePath);\n    // ESM-uncomment-end\n    return this.uriToBrowserUri(uri);\n  }\n  /**\n   * Returns a URI to use in contexts where the browser is responsible\n   * for loading (e.g. fetch()) or when used within the DOM.\n   *\n   * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n   */\n  uriToBrowserUri(uri) {\n    // Handle remote URIs via `RemoteAuthorities`\n    if (uri.scheme === Schemas.vscodeRemote) {\n      return RemoteAuthorities.rewrite(uri);\n    }\n    // Convert to `vscode-file` resource..\n    if (\n    // ...only ever for `file` resources\n    uri.scheme === Schemas.file && (\n    // ...and we run in native environments\n    platform.isNative ||\n    // ...or web worker extensions on desktop\n    platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)) {\n      return uri.with({\n        scheme: Schemas.vscodeFileResource,\n        // We need to provide an authority here so that it can serve\n        // as origin for network and loading matters in chromium.\n        // If the URI is not coming with an authority already, we\n        // add our own\n        authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n        query: null,\n        fragment: null\n      });\n    }\n    return uri;\n  }\n  toUri(uriOrModule, moduleIdToUrl) {\n    if (URI.isUri(uriOrModule)) {\n      return uriOrModule;\n    }\n    if (globalThis._VSCODE_FILE_ROOT) {\n      const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n      // File URL (with scheme)\n      if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n        return URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n      }\n      // File Path (no scheme)\n      const modulePath = paths.join(rootUriOrPath, uriOrModule);\n      return URI.file(modulePath);\n    }\n    return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n  }\n}\n_FileAccessImpl = FileAccessImpl;\n_FileAccessImpl.FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n  const coiHeaders = new Map([['1', {\n    'Cross-Origin-Opener-Policy': 'same-origin'\n  }], ['2', {\n    'Cross-Origin-Embedder-Policy': 'require-corp'\n  }], ['3', {\n    'Cross-Origin-Opener-Policy': 'same-origin',\n    'Cross-Origin-Embedder-Policy': 'require-corp'\n  }]]);\n  COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n  const coiSearchParamName = 'vscode-coi';\n  /**\n   * Extract desired headers from `vscode-coi` invocation\n   */\n  function getHeadersFromQuery(url) {\n    let params;\n    if (typeof url === 'string') {\n      params = new URL(url).searchParams;\n    } else if (url instanceof URL) {\n      params = url.searchParams;\n    } else if (URI.isUri(url)) {\n      params = new URL(url.toString(true)).searchParams;\n    }\n    const value = params?.get(coiSearchParamName);\n    if (!value) {\n      return undefined;\n    }\n    return coiHeaders.get(value);\n  }\n  COI.getHeadersFromQuery = getHeadersFromQuery;\n  /**\n   * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n   * isn't enabled the current context\n   */\n  function addSearchParam(urlOrSearch, coop, coep) {\n    if (!globalThis.crossOriginIsolated) {\n      // depends on the current context being COI\n      return;\n    }\n    const value = coop && coep ? '3' : coep ? '2' : '1';\n    if (urlOrSearch instanceof URLSearchParams) {\n      urlOrSearch.set(coiSearchParamName, value);\n    } else {\n      urlOrSearch[coiSearchParamName] = value;\n    }\n  }\n  COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));","map":{"version":3,"names":["errors","platform","equalsIgnoreCase","startsWithIgnoreCase","URI","paths","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellMetadataDiff","vscodeNotebookCellOutput","vscodeNotebookCellOutputDiff","vscodeNotebookMetadata","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatCodeBlock","vscodeChatCodeCompareBlock","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","commentsInput","codeSetting","outputChannel","matchesScheme","target","scheme","isUri","matchesSomeScheme","schemes","some","connectionTokenQueryName","RemoteAuthoritiesImpl","constructor","_hosts","Object","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","_serverRootPath","setPreferredWebSchema","schema","_remoteResourcesPath","posix","join","rewrite","uri","err","onUnexpectedError","authority","host","indexOf","port","connectionToken","query","encodeURIComponent","path","from","isWeb","RemoteAuthorities","VSCODE_AUTHORITY","FileAccessImpl","asBrowserUri","resourcePath","toUri","uriToBrowserUri","isNative","webWorkerOrigin","FALLBACK_AUTHORITY","with","fragment","uriOrModule","moduleIdToUrl","globalThis","_VSCODE_FILE_ROOT","rootUriOrPath","test","joinPath","parse","modulePath","toUrl","_FileAccessImpl","FileAccess","COI","coiHeaders","Map","CoopAndCoep","freeze","get","coiSearchParamName","getHeadersFromQuery","url","params","URL","searchParams","toString","value","undefined","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","set"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/base/common/network.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /** Scheme used for code blocks in chat. */\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    /** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    /** Scheme used for the chat input editor. */\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    /**\n     * Scheme used for input box for creating comments.\n     */\n    Schemas.commentsInput = 'comment';\n    /**\n     * Scheme used for special rendering of settings in the release notes\n     */\n    Schemas.codeSetting = 'code-setting';\n    /**\n     * Scheme used for output panel resources\n     */\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {}));\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    get _remoteResourcesPath() {\n        return paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    asBrowserUri(resourcePath) {\n        // ESM-comment-begin\n        // \t\tconst uri = this.toUri(resourcePath, require);\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        const uri = this.toUri(resourcePath);\n        // ESM-uncomment-end\n        return this.uriToBrowserUri(uri);\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            // File URL (with scheme)\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n            }\n            // File Path (no scheme)\n            const modulePath = paths.join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}