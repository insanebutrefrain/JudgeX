{"ast":null,"code":"var _RenameCandidateView;\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { getBaseLayerHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { renderIcon } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { DeferredPromise, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isDefined } from '../../../../base/common/types.js';\nimport './renameWidget.css';\nimport * as domFontInfo from '../../../browser/config/domFontInfo.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { NewSymbolNameTag, NewSymbolNameTriggerKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { getListStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorWidgetBackground, inputBackground, inputBorder, inputForeground, quickInputListFocusBackground, quickInputListFocusForeground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\n/** for debugging */\nconst _sticky = false;\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, nls.localize('renameInputVisible', \"Whether the rename input widget is visible\"));\nexport const CONTEXT_RENAME_INPUT_FOCUSED = new RawContextKey('renameInputFocused', false, nls.localize('renameInputFocused', \"Whether the rename input widget is focused\"));\nlet RenameWidget = class RenameWidget {\n  constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService, _logService) {\n    this._editor = _editor;\n    this._acceptKeybindings = _acceptKeybindings;\n    this._themeService = _themeService;\n    this._keybindingService = _keybindingService;\n    this._logService = _logService;\n    // implement IContentWidget\n    this.allowEditorOverflow = true;\n    this._disposables = new DisposableStore();\n    this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n    this._isEditingRenameCandidate = false;\n    this._nRenameSuggestionsInvocations = 0;\n    this._hadAutomaticRenameSuggestionsInvocation = false;\n    this._candidates = new Set();\n    this._beforeFirstInputFieldEditSW = new StopWatch();\n    this._inputWithButton = new InputWithButton();\n    this._disposables.add(this._inputWithButton);\n    this._editor.addContentWidget(this);\n    this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n        this._updateFont();\n      }\n    }));\n    this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\n  }\n  dispose() {\n    this._disposables.dispose();\n    this._editor.removeContentWidget(this);\n  }\n  getId() {\n    return '__renameInputWidget';\n  }\n  getDomNode() {\n    if (!this._domNode) {\n      this._domNode = document.createElement('div');\n      this._domNode.className = 'monaco-editor rename-box';\n      this._domNode.appendChild(this._inputWithButton.domNode);\n      this._renameCandidateListView = this._disposables.add(new RenameCandidateListView(this._domNode, {\n        fontInfo: this._editor.getOption(50 /* EditorOption.fontInfo */),\n        onFocusChange: newSymbolName => {\n          this._inputWithButton.input.value = newSymbolName;\n          this._isEditingRenameCandidate = false; // @ulugbekna: reset\n        },\n        onSelectionChange: () => {\n          this._isEditingRenameCandidate = false; // @ulugbekna: because user picked a rename suggestion\n          this.acceptInput(false); // we don't allow preview with mouse click for now\n        }\n      }));\n      this._disposables.add(this._inputWithButton.onDidInputChange(() => {\n        if (this._renameCandidateListView?.focusedCandidate !== undefined) {\n          this._isEditingRenameCandidate = true;\n        }\n        this._timeBeforeFirstInputFieldEdit ??= this._beforeFirstInputFieldEditSW.elapsed();\n        if (this._renameCandidateProvidersCts?.token.isCancellationRequested === false) {\n          this._renameCandidateProvidersCts.cancel();\n        }\n        this._renameCandidateListView?.clearFocus();\n      }));\n      this._label = document.createElement('div');\n      this._label.className = 'rename-label';\n      this._domNode.appendChild(this._label);\n      this._updateFont();\n      this._updateStyles(this._themeService.getColorTheme());\n    }\n    return this._domNode;\n  }\n  _updateStyles(theme) {\n    if (!this._domNode) {\n      return;\n    }\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    const widgetBorderColor = theme.getColor(widgetBorder);\n    this._domNode.style.backgroundColor = String(theme.getColor(editorWidgetBackground) ?? '');\n    this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\n    this._domNode.style.border = widgetBorderColor ? `1px solid ${widgetBorderColor}` : '';\n    this._domNode.style.color = String(theme.getColor(inputForeground) ?? '');\n    const border = theme.getColor(inputBorder);\n    this._inputWithButton.domNode.style.backgroundColor = String(theme.getColor(inputBackground) ?? '');\n    this._inputWithButton.input.style.backgroundColor = String(theme.getColor(inputBackground) ?? '');\n    this._inputWithButton.domNode.style.borderWidth = border ? '1px' : '0px';\n    this._inputWithButton.domNode.style.borderStyle = border ? 'solid' : 'none';\n    this._inputWithButton.domNode.style.borderColor = border?.toString() ?? 'none';\n  }\n  _updateFont() {\n    if (this._domNode === undefined) {\n      return;\n    }\n    assertType(this._label !== undefined, 'RenameWidget#_updateFont: _label must not be undefined given _domNode is defined');\n    this._editor.applyFontInfo(this._inputWithButton.input);\n    const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n    this._label.style.fontSize = `${this._computeLabelFontSize(fontInfo.fontSize)}px`;\n  }\n  _computeLabelFontSize(editorFontSize) {\n    return editorFontSize * 0.8;\n  }\n  getPosition() {\n    if (!this._visible) {\n      return null;\n    }\n    if (!this._editor.hasModel() ||\n    // @ulugbekna: shouldn't happen\n    !this._editor.getDomNode() // @ulugbekna: can happen during tests based on suggestWidget's similar predicate check\n    ) {\n      return null;\n    }\n    const bodyBox = dom.getClientArea(this.getDomNode().ownerDocument.body);\n    const editorBox = dom.getDomNodePagePosition(this._editor.getDomNode());\n    const cursorBoxTop = this._getTopForPosition();\n    this._nPxAvailableAbove = cursorBoxTop + editorBox.top;\n    this._nPxAvailableBelow = bodyBox.height - this._nPxAvailableAbove;\n    const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n    const {\n      totalHeight: candidateViewHeight\n    } = RenameCandidateView.getLayoutInfo({\n      lineHeight\n    });\n    const positionPreference = this._nPxAvailableBelow > candidateViewHeight * 6 /* approximate # of candidates to fit in (inclusive of rename input box & rename label) */ ? [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */] : [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */];\n    return {\n      position: this._position,\n      preference: positionPreference\n    };\n  }\n  beforeRender() {\n    const [accept, preview] = this._acceptKeybindings;\n    this._label.innerText = nls.localize({\n      key: 'label',\n      comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"']\n    }, \"{0} to Rename, {1} to Preview\", this._keybindingService.lookupKeybinding(accept)?.getLabel(), this._keybindingService.lookupKeybinding(preview)?.getLabel());\n    this._domNode.style.minWidth = `200px`; // to prevent from widening when candidates come in\n    return null;\n  }\n  afterRender(position) {\n    // FIXME@ulugbekna: commenting trace log out until we start unmounting the widget from editor properly - https://github.com/microsoft/vscode/issues/226975\n    // this._trace('invoking afterRender, position: ', position ? 'not null' : 'null');\n    if (position === null) {\n      // cancel rename when input widget isn't rendered anymore\n      this.cancelInput(true, 'afterRender (because position is null)');\n      return;\n    }\n    if (!this._editor.hasModel() ||\n    // shouldn't happen\n    !this._editor.getDomNode() // can happen during tests based on suggestWidget's similar predicate check\n    ) {\n      return;\n    }\n    assertType(this._renameCandidateListView);\n    assertType(this._nPxAvailableAbove !== undefined);\n    assertType(this._nPxAvailableBelow !== undefined);\n    const inputBoxHeight = dom.getTotalHeight(this._inputWithButton.domNode);\n    const labelHeight = dom.getTotalHeight(this._label);\n    let totalHeightAvailable;\n    if (position === 2 /* ContentWidgetPositionPreference.BELOW */) {\n      totalHeightAvailable = this._nPxAvailableBelow;\n    } else {\n      totalHeightAvailable = this._nPxAvailableAbove;\n    }\n    this._renameCandidateListView.layout({\n      height: totalHeightAvailable - labelHeight - inputBoxHeight,\n      width: dom.getTotalWidth(this._inputWithButton.domNode)\n    });\n  }\n  acceptInput(wantsPreview) {\n    this._trace(`invoking acceptInput`);\n    this._currentAcceptInput?.(wantsPreview);\n  }\n  cancelInput(focusEditor, caller) {\n    // this._trace(`invoking cancelInput, caller: ${caller}, _currentCancelInput: ${this._currentAcceptInput ? 'not undefined' : 'undefined'}`);\n    this._currentCancelInput?.(focusEditor);\n  }\n  focusNextRenameSuggestion() {\n    if (!this._renameCandidateListView?.focusNext()) {\n      this._inputWithButton.input.value = this._currentName;\n    }\n  }\n  focusPreviousRenameSuggestion() {\n    if (!this._renameCandidateListView?.focusPrevious()) {\n      this._inputWithButton.input.value = this._currentName;\n    }\n  }\n  /**\n   * @param requestRenameCandidates is `undefined` when there are no rename suggestion providers\n   */\n  getInput(where, currentName, supportPreview, requestRenameCandidates, cts) {\n    const {\n      start: selectionStart,\n      end: selectionEnd\n    } = this._getSelection(where, currentName);\n    this._renameCts = cts;\n    const disposeOnDone = new DisposableStore();\n    this._nRenameSuggestionsInvocations = 0;\n    this._hadAutomaticRenameSuggestionsInvocation = false;\n    if (requestRenameCandidates === undefined) {\n      this._inputWithButton.button.style.display = 'none';\n    } else {\n      this._inputWithButton.button.style.display = 'flex';\n      this._requestRenameCandidatesOnce = requestRenameCandidates;\n      this._requestRenameCandidates(currentName, false);\n      disposeOnDone.add(dom.addDisposableListener(this._inputWithButton.button, 'click', () => this._requestRenameCandidates(currentName, true)));\n      disposeOnDone.add(dom.addDisposableListener(this._inputWithButton.button, dom.EventType.KEY_DOWN, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        if (keyEvent.equals(3 /* KeyCode.Enter */) || keyEvent.equals(10 /* KeyCode.Space */)) {\n          keyEvent.stopPropagation();\n          keyEvent.preventDefault();\n          this._requestRenameCandidates(currentName, true);\n        }\n      }));\n    }\n    this._isEditingRenameCandidate = false;\n    this._domNode.classList.toggle('preview', supportPreview);\n    this._position = new Position(where.startLineNumber, where.startColumn);\n    this._currentName = currentName;\n    this._inputWithButton.input.value = currentName;\n    this._inputWithButton.input.setAttribute('selectionStart', selectionStart.toString());\n    this._inputWithButton.input.setAttribute('selectionEnd', selectionEnd.toString());\n    this._inputWithButton.input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20); // determines width\n    this._beforeFirstInputFieldEditSW.reset();\n    disposeOnDone.add(toDisposable(() => {\n      this._renameCts = undefined;\n      cts.dispose(true);\n    })); // @ulugbekna: this may result in `this.cancelInput` being called twice, but it should be safe since we set it to undefined after 1st call\n    disposeOnDone.add(toDisposable(() => {\n      if (this._renameCandidateProvidersCts !== undefined) {\n        this._renameCandidateProvidersCts.dispose(true);\n        this._renameCandidateProvidersCts = undefined;\n      }\n    }));\n    disposeOnDone.add(toDisposable(() => this._candidates.clear()));\n    const inputResult = new DeferredPromise();\n    inputResult.p.finally(() => {\n      disposeOnDone.dispose();\n      this._hide();\n    });\n    this._currentCancelInput = focusEditor => {\n      this._trace('invoking _currentCancelInput');\n      this._currentAcceptInput = undefined;\n      this._currentCancelInput = undefined;\n      // fixme session cleanup\n      this._renameCandidateListView?.clearCandidates();\n      inputResult.complete(focusEditor);\n      return true;\n    };\n    this._currentAcceptInput = wantsPreview => {\n      this._trace('invoking _currentAcceptInput');\n      assertType(this._renameCandidateListView !== undefined);\n      const nRenameSuggestions = this._renameCandidateListView.nCandidates;\n      let newName;\n      let source;\n      const focusedCandidate = this._renameCandidateListView.focusedCandidate;\n      if (focusedCandidate !== undefined) {\n        this._trace('using new name from renameSuggestion');\n        newName = focusedCandidate;\n        source = {\n          k: 'renameSuggestion'\n        };\n      } else {\n        this._trace('using new name from inputField');\n        newName = this._inputWithButton.input.value;\n        source = this._isEditingRenameCandidate ? {\n          k: 'userEditedRenameSuggestion'\n        } : {\n          k: 'inputField'\n        };\n      }\n      if (newName === currentName || newName.trim().length === 0 /* is just whitespace */) {\n        this.cancelInput(true, '_currentAcceptInput (because newName === value || newName.trim().length === 0)');\n        return;\n      }\n      this._currentAcceptInput = undefined;\n      this._currentCancelInput = undefined;\n      this._renameCandidateListView.clearCandidates();\n      // fixme session cleanup\n      inputResult.complete({\n        newName,\n        wantsPreview: supportPreview && wantsPreview,\n        stats: {\n          source,\n          nRenameSuggestions,\n          timeBeforeFirstInputFieldEdit: this._timeBeforeFirstInputFieldEdit,\n          nRenameSuggestionsInvocations: this._nRenameSuggestionsInvocations,\n          hadAutomaticRenameSuggestionsInvocation: this._hadAutomaticRenameSuggestionsInvocation\n        }\n      });\n    };\n    disposeOnDone.add(cts.token.onCancellationRequested(() => this.cancelInput(true, 'cts.token.onCancellationRequested')));\n    if (!_sticky) {\n      disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(!this._domNode?.ownerDocument.hasFocus(), 'editor.onDidBlurEditorWidget')));\n    }\n    this._show();\n    return inputResult.p;\n  }\n  _requestRenameCandidates(currentName, isManuallyTriggered) {\n    if (this._requestRenameCandidatesOnce === undefined) {\n      return;\n    }\n    if (this._renameCandidateProvidersCts !== undefined) {\n      this._renameCandidateProvidersCts.dispose(true);\n    }\n    assertType(this._renameCts);\n    if (this._inputWithButton.buttonState !== 'stop') {\n      this._renameCandidateProvidersCts = new CancellationTokenSource();\n      const triggerKind = isManuallyTriggered ? NewSymbolNameTriggerKind.Invoke : NewSymbolNameTriggerKind.Automatic;\n      const candidates = this._requestRenameCandidatesOnce(triggerKind, this._renameCandidateProvidersCts.token);\n      if (candidates.length === 0) {\n        this._inputWithButton.setSparkleButton();\n        return;\n      }\n      if (!isManuallyTriggered) {\n        this._hadAutomaticRenameSuggestionsInvocation = true;\n      }\n      this._nRenameSuggestionsInvocations += 1;\n      this._inputWithButton.setStopButton();\n      this._updateRenameCandidates(candidates, currentName, this._renameCts.token);\n    }\n  }\n  /**\n   * This allows selecting only part of the symbol name in the input field based on the selection in the editor\n   */\n  _getSelection(where, currentName) {\n    assertType(this._editor.hasModel());\n    const selection = this._editor.getSelection();\n    let start = 0;\n    let end = currentName.length;\n    if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(where, selection)) {\n      start = Math.max(0, selection.startColumn - where.startColumn);\n      end = Math.min(where.endColumn, selection.endColumn) - where.startColumn;\n    }\n    return {\n      start,\n      end\n    };\n  }\n  _show() {\n    this._trace('invoking _show');\n    this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* ScrollType.Smooth */);\n    this._visible = true;\n    this._visibleContextKey.set(true);\n    this._editor.layoutContentWidget(this);\n    // TODO@ulugbekna: could this be simply run in `afterRender`?\n    setTimeout(() => {\n      this._inputWithButton.input.focus();\n      this._inputWithButton.input.setSelectionRange(parseInt(this._inputWithButton.input.getAttribute('selectionStart')), parseInt(this._inputWithButton.input.getAttribute('selectionEnd')));\n    }, 100);\n  }\n  async _updateRenameCandidates(candidates, currentName, token) {\n    const trace = (...args) => this._trace('_updateRenameCandidates', ...args);\n    trace('start');\n    const namesListResults = await raceCancellation(Promise.allSettled(candidates), token);\n    this._inputWithButton.setSparkleButton();\n    if (namesListResults === undefined) {\n      trace('returning early - received updateRenameCandidates results - undefined');\n      return;\n    }\n    const newNames = namesListResults.flatMap(namesListResult => namesListResult.status === 'fulfilled' && isDefined(namesListResult.value) ? namesListResult.value : []);\n    trace(`received updateRenameCandidates results - total (unfiltered) ${newNames.length} candidates.`);\n    // deduplicate and filter out the current value\n    const distinctNames = arrays.distinct(newNames, v => v.newSymbolName);\n    trace(`distinct candidates - ${distinctNames.length} candidates.`);\n    const validDistinctNames = distinctNames.filter(({\n      newSymbolName\n    }) => newSymbolName.trim().length > 0 && newSymbolName !== this._inputWithButton.input.value && newSymbolName !== currentName && !this._candidates.has(newSymbolName));\n    trace(`valid distinct candidates - ${newNames.length} candidates.`);\n    validDistinctNames.forEach(n => this._candidates.add(n.newSymbolName));\n    if (validDistinctNames.length < 1) {\n      trace('returning early - no valid distinct candidates');\n      return;\n    }\n    // show the candidates\n    trace('setting candidates');\n    this._renameCandidateListView.setCandidates(validDistinctNames);\n    // ask editor to re-layout given that the widget is now of a different size after rendering rename candidates\n    trace('asking editor to re-layout');\n    this._editor.layoutContentWidget(this);\n  }\n  _hide() {\n    this._trace('invoked _hide');\n    this._visible = false;\n    this._visibleContextKey.reset();\n    this._editor.layoutContentWidget(this);\n  }\n  _getTopForPosition() {\n    const visibleRanges = this._editor.getVisibleRanges();\n    let firstLineInViewport;\n    if (visibleRanges.length > 0) {\n      firstLineInViewport = visibleRanges[0].startLineNumber;\n    } else {\n      this._logService.warn('RenameWidget#_getTopForPosition: this should not happen - visibleRanges is empty');\n      firstLineInViewport = Math.max(1, this._position.lineNumber - 5); // @ulugbekna: fallback to current line minus 5\n    }\n    return this._editor.getTopForLineNumber(this._position.lineNumber) - this._editor.getTopForLineNumber(firstLineInViewport);\n  }\n  _trace(...args) {\n    this._logService.trace('RenameWidget', ...args);\n  }\n};\nRenameWidget = __decorate([__param(2, IThemeService), __param(3, IKeybindingService), __param(4, IContextKeyService), __param(5, ILogService)], RenameWidget);\nexport { RenameWidget };\nclass RenameCandidateListView {\n  // FIXME@ulugbekna: rewrite using event emitters\n  constructor(parent, opts) {\n    this._disposables = new DisposableStore();\n    this._availableHeight = 0;\n    this._minimumWidth = 0;\n    this._lineHeight = opts.fontInfo.lineHeight;\n    this._typicalHalfwidthCharacterWidth = opts.fontInfo.typicalHalfwidthCharacterWidth;\n    this._listContainer = document.createElement('div');\n    this._listContainer.className = 'rename-box rename-candidate-list-container';\n    parent.appendChild(this._listContainer);\n    this._listWidget = RenameCandidateListView._createListWidget(this._listContainer, this._candidateViewHeight, opts.fontInfo);\n    this._listWidget.onDidChangeFocus(e => {\n      if (e.elements.length === 1) {\n        opts.onFocusChange(e.elements[0].newSymbolName);\n      }\n    }, this._disposables);\n    this._listWidget.onDidChangeSelection(e => {\n      if (e.elements.length === 1) {\n        opts.onSelectionChange();\n      }\n    }, this._disposables);\n    this._disposables.add(this._listWidget.onDidBlur(e => {\n      this._listWidget.setFocus([]);\n    }));\n    this._listWidget.style(getListStyles({\n      listInactiveFocusForeground: quickInputListFocusForeground,\n      listInactiveFocusBackground: quickInputListFocusBackground\n    }));\n  }\n  dispose() {\n    this._listWidget.dispose();\n    this._disposables.dispose();\n  }\n  // height - max height allowed by parent element\n  layout({\n    height,\n    width\n  }) {\n    this._availableHeight = height;\n    this._minimumWidth = width;\n  }\n  setCandidates(candidates) {\n    // insert candidates into list widget\n    this._listWidget.splice(0, 0, candidates);\n    // adjust list widget layout\n    const height = this._pickListHeight(this._listWidget.length);\n    const width = this._pickListWidth(candidates);\n    this._listWidget.layout(height, width);\n    // adjust list container layout\n    this._listContainer.style.height = `${height}px`;\n    this._listContainer.style.width = `${width}px`;\n    aria.status(nls.localize('renameSuggestionsReceivedAria', \"Received {0} rename suggestions\", candidates.length));\n  }\n  clearCandidates() {\n    this._listContainer.style.height = '0px';\n    this._listContainer.style.width = '0px';\n    this._listWidget.splice(0, this._listWidget.length, []);\n  }\n  get nCandidates() {\n    return this._listWidget.length;\n  }\n  get focusedCandidate() {\n    if (this._listWidget.length === 0) {\n      return;\n    }\n    const selectedElement = this._listWidget.getSelectedElements()[0];\n    if (selectedElement !== undefined) {\n      return selectedElement.newSymbolName;\n    }\n    const focusedElement = this._listWidget.getFocusedElements()[0];\n    if (focusedElement !== undefined) {\n      return focusedElement.newSymbolName;\n    }\n    return;\n  }\n  focusNext() {\n    if (this._listWidget.length === 0) {\n      return false;\n    }\n    const focusedIxs = this._listWidget.getFocus();\n    if (focusedIxs.length === 0) {\n      this._listWidget.focusFirst();\n      this._listWidget.reveal(0);\n      return true;\n    } else {\n      if (focusedIxs[0] === this._listWidget.length - 1) {\n        this._listWidget.setFocus([]);\n        this._listWidget.reveal(0); // @ulugbekna: without this, it seems like focused element is obstructed\n        return false;\n      } else {\n        this._listWidget.focusNext();\n        const focused = this._listWidget.getFocus()[0];\n        this._listWidget.reveal(focused);\n        return true;\n      }\n    }\n  }\n  /**\n   * @returns true if focus is moved to previous element\n   */\n  focusPrevious() {\n    if (this._listWidget.length === 0) {\n      return false;\n    }\n    const focusedIxs = this._listWidget.getFocus();\n    if (focusedIxs.length === 0) {\n      this._listWidget.focusLast();\n      const focused = this._listWidget.getFocus()[0];\n      this._listWidget.reveal(focused);\n      return true;\n    } else {\n      if (focusedIxs[0] === 0) {\n        this._listWidget.setFocus([]);\n        return false;\n      } else {\n        this._listWidget.focusPrevious();\n        const focused = this._listWidget.getFocus()[0];\n        this._listWidget.reveal(focused);\n        return true;\n      }\n    }\n  }\n  clearFocus() {\n    this._listWidget.setFocus([]);\n  }\n  get _candidateViewHeight() {\n    const {\n      totalHeight\n    } = RenameCandidateView.getLayoutInfo({\n      lineHeight: this._lineHeight\n    });\n    return totalHeight;\n  }\n  _pickListHeight(nCandidates) {\n    const heightToFitAllCandidates = this._candidateViewHeight * nCandidates;\n    const MAX_N_CANDIDATES = 7; // @ulugbekna: max # of candidates we want to show at once\n    const height = Math.min(heightToFitAllCandidates, this._availableHeight, this._candidateViewHeight * MAX_N_CANDIDATES);\n    return height;\n  }\n  _pickListWidth(candidates) {\n    const longestCandidateWidth = Math.ceil(Math.max(...candidates.map(c => c.newSymbolName.length)) * this._typicalHalfwidthCharacterWidth);\n    const width = Math.max(this._minimumWidth, 4 /* padding */ + 16 /* sparkle icon */ + 5 /* margin-left */ + longestCandidateWidth + 10 /* (possibly visible) scrollbar width */ // TODO@ulugbekna: approximate calc - clean this up\n    );\n    return width;\n  }\n  static _createListWidget(container, candidateViewHeight, fontInfo) {\n    const virtualDelegate = new class {\n      getTemplateId(element) {\n        return 'candidate';\n      }\n      getHeight(element) {\n        return candidateViewHeight;\n      }\n    }();\n    const renderer = new class {\n      constructor() {\n        this.templateId = 'candidate';\n      }\n      renderTemplate(container) {\n        return new RenameCandidateView(container, fontInfo);\n      }\n      renderElement(candidate, index, templateData) {\n        templateData.populate(candidate);\n      }\n      disposeTemplate(templateData) {\n        templateData.dispose();\n      }\n    }();\n    return new List('NewSymbolNameCandidates', container, virtualDelegate, [renderer], {\n      keyboardSupport: false,\n      // @ulugbekna: because we handle keyboard events through proper commands & keybinding service, see `rename.ts`\n      mouseSupport: true,\n      multipleSelectionSupport: false\n    });\n  }\n}\nclass InputWithButton {\n  constructor() {\n    this._onDidInputChange = new Emitter();\n    this.onDidInputChange = this._onDidInputChange.event;\n    this._disposables = new DisposableStore();\n  }\n  get domNode() {\n    if (!this._domNode) {\n      this._domNode = document.createElement('div');\n      this._domNode.className = 'rename-input-with-button';\n      this._domNode.style.display = 'flex';\n      this._domNode.style.flexDirection = 'row';\n      this._domNode.style.alignItems = 'center';\n      this._inputNode = document.createElement('input');\n      this._inputNode.className = 'rename-input';\n      this._inputNode.type = 'text';\n      this._inputNode.style.border = 'none';\n      this._inputNode.setAttribute('aria-label', nls.localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n      this._domNode.appendChild(this._inputNode);\n      this._buttonNode = document.createElement('div');\n      this._buttonNode.className = 'rename-suggestions-button';\n      this._buttonNode.setAttribute('tabindex', '0');\n      this._buttonGenHoverText = nls.localize('generateRenameSuggestionsButton', \"Generate new name suggestions\");\n      this._buttonCancelHoverText = nls.localize('cancelRenameSuggestionsButton', \"Cancel\");\n      this._buttonHover = getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('element'), this._buttonNode, this._buttonGenHoverText);\n      this._disposables.add(this._buttonHover);\n      this._domNode.appendChild(this._buttonNode);\n      // notify if selection changes to cancel request to rename-suggestion providers\n      this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.INPUT, () => this._onDidInputChange.fire()));\n      this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.KEY_DOWN, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        if (keyEvent.keyCode === 15 /* KeyCode.LeftArrow */ || keyEvent.keyCode === 17 /* KeyCode.RightArrow */) {\n          this._onDidInputChange.fire();\n        }\n      }));\n      this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.CLICK, () => this._onDidInputChange.fire()));\n      // focus \"container\" border instead of input box\n      this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.FOCUS, () => {\n        this.domNode.style.outlineWidth = '1px';\n        this.domNode.style.outlineStyle = 'solid';\n        this.domNode.style.outlineOffset = '-1px';\n        this.domNode.style.outlineColor = 'var(--vscode-focusBorder)';\n      }));\n      this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.BLUR, () => {\n        this.domNode.style.outline = 'none';\n      }));\n    }\n    return this._domNode;\n  }\n  get input() {\n    assertType(this._inputNode);\n    return this._inputNode;\n  }\n  get button() {\n    assertType(this._buttonNode);\n    return this._buttonNode;\n  }\n  get buttonState() {\n    return this._buttonState;\n  }\n  setSparkleButton() {\n    this._buttonState = 'sparkle';\n    this._sparkleIcon ??= renderIcon(Codicon.sparkle);\n    dom.clearNode(this.button);\n    this.button.appendChild(this._sparkleIcon);\n    this.button.setAttribute('aria-label', 'Generating new name suggestions');\n    this._buttonHover?.update(this._buttonGenHoverText);\n    this.input.focus();\n  }\n  setStopButton() {\n    this._buttonState = 'stop';\n    this._stopIcon ??= renderIcon(Codicon.primitiveSquare);\n    dom.clearNode(this.button);\n    this.button.appendChild(this._stopIcon);\n    this.button.setAttribute('aria-label', 'Cancel generating new name suggestions');\n    this._buttonHover?.update(this._buttonCancelHoverText);\n    this.input.focus();\n  }\n  dispose() {\n    this._disposables.dispose();\n  }\n}\nclass RenameCandidateView {\n  constructor(parent, fontInfo) {\n    this._domNode = document.createElement('div');\n    this._domNode.className = 'rename-box rename-candidate';\n    this._domNode.style.display = `flex`;\n    this._domNode.style.columnGap = `5px`;\n    this._domNode.style.alignItems = `center`;\n    this._domNode.style.height = `${fontInfo.lineHeight}px`;\n    this._domNode.style.padding = `${RenameCandidateView._PADDING}px`;\n    // @ulugbekna: needed to keep space when the `icon.style.display` is set to `none`\n    const iconContainer = document.createElement('div');\n    iconContainer.style.display = `flex`;\n    iconContainer.style.alignItems = `center`;\n    iconContainer.style.width = iconContainer.style.height = `${fontInfo.lineHeight * 0.8}px`;\n    this._domNode.appendChild(iconContainer);\n    this._icon = renderIcon(Codicon.sparkle);\n    this._icon.style.display = `none`;\n    iconContainer.appendChild(this._icon);\n    this._label = document.createElement('div');\n    domFontInfo.applyFontInfo(this._label, fontInfo);\n    this._domNode.appendChild(this._label);\n    parent.appendChild(this._domNode);\n  }\n  populate(value) {\n    this._updateIcon(value);\n    this._updateLabel(value);\n  }\n  _updateIcon(value) {\n    const isAIGenerated = !!value.tags?.includes(NewSymbolNameTag.AIGenerated);\n    this._icon.style.display = isAIGenerated ? 'inherit' : 'none';\n  }\n  _updateLabel(value) {\n    this._label.innerText = value.newSymbolName;\n  }\n  static getLayoutInfo({\n    lineHeight\n  }) {\n    const totalHeight = lineHeight + RenameCandidateView._PADDING * 2 /* top & bottom padding */;\n    return {\n      totalHeight\n    };\n  }\n  dispose() {}\n}\n_RenameCandidateView = RenameCandidateView;\n_RenameCandidateView._PADDING = 2;","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","StandardKeyboardEvent","aria","getBaseLayerHoverDelegate","getDefaultHoverDelegate","renderIcon","List","arrays","DeferredPromise","raceCancellation","CancellationTokenSource","Codicon","Emitter","DisposableStore","toDisposable","StopWatch","assertType","isDefined","domFontInfo","Position","Range","NewSymbolNameTag","NewSymbolNameTriggerKind","nls","IContextKeyService","RawContextKey","IKeybindingService","ILogService","getListStyles","editorWidgetBackground","inputBackground","inputBorder","inputForeground","quickInputListFocusBackground","quickInputListFocusForeground","widgetBorder","widgetShadow","IThemeService","_sticky","CONTEXT_RENAME_INPUT_VISIBLE","localize","CONTEXT_RENAME_INPUT_FOCUSED","RenameWidget","constructor","_editor","_acceptKeybindings","_themeService","_keybindingService","contextKeyService","_logService","allowEditorOverflow","_disposables","_visibleContextKey","bindTo","_isEditingRenameCandidate","_nRenameSuggestionsInvocations","_hadAutomaticRenameSuggestionsInvocation","_candidates","Set","_beforeFirstInputFieldEditSW","_inputWithButton","InputWithButton","add","addContentWidget","onDidChangeConfiguration","e","hasChanged","_updateFont","onDidColorThemeChange","_updateStyles","dispose","removeContentWidget","getId","getDomNode","_domNode","document","createElement","className","appendChild","domNode","_renameCandidateListView","RenameCandidateListView","fontInfo","getOption","onFocusChange","newSymbolName","input","value","onSelectionChange","acceptInput","onDidInputChange","focusedCandidate","undefined","_timeBeforeFirstInputFieldEdit","elapsed","_renameCandidateProvidersCts","token","isCancellationRequested","cancel","clearFocus","_label","getColorTheme","theme","widgetShadowColor","getColor","widgetBorderColor","style","backgroundColor","String","boxShadow","border","color","borderWidth","borderStyle","borderColor","toString","applyFontInfo","fontSize","_computeLabelFontSize","editorFontSize","getPosition","_visible","hasModel","bodyBox","getClientArea","ownerDocument","body","editorBox","getDomNodePagePosition","cursorBoxTop","_getTopForPosition","_nPxAvailableAbove","top","_nPxAvailableBelow","height","lineHeight","totalHeight","candidateViewHeight","RenameCandidateView","getLayoutInfo","positionPreference","position","_position","preference","beforeRender","accept","preview","innerText","comment","lookupKeybinding","getLabel","minWidth","afterRender","cancelInput","inputBoxHeight","getTotalHeight","labelHeight","totalHeightAvailable","layout","width","getTotalWidth","wantsPreview","_trace","_currentAcceptInput","focusEditor","caller","_currentCancelInput","focusNextRenameSuggestion","focusNext","_currentName","focusPreviousRenameSuggestion","focusPrevious","getInput","where","currentName","supportPreview","requestRenameCandidates","cts","start","selectionStart","end","selectionEnd","_getSelection","_renameCts","disposeOnDone","button","display","_requestRenameCandidatesOnce","_requestRenameCandidates","addDisposableListener","EventType","KEY_DOWN","keyEvent","equals","stopPropagation","preventDefault","classList","toggle","startLineNumber","startColumn","setAttribute","size","Math","max","endColumn","reset","clear","inputResult","p","finally","_hide","clearCandidates","complete","nRenameSuggestions","nCandidates","newName","source","k","trim","stats","timeBeforeFirstInputFieldEdit","nRenameSuggestionsInvocations","hadAutomaticRenameSuggestionsInvocation","onCancellationRequested","onDidBlurEditorWidget","hasFocus","_show","isManuallyTriggered","buttonState","triggerKind","Invoke","Automatic","candidates","setSparkleButton","setStopButton","_updateRenameCandidates","selection","getSelection","isEmpty","spansMultipleLines","containsRange","min","revealLineInCenterIfOutsideViewport","lineNumber","set","layoutContentWidget","setTimeout","focus","setSelectionRange","parseInt","getAttribute","trace","args","namesListResults","Promise","allSettled","newNames","flatMap","namesListResult","status","distinctNames","distinct","v","validDistinctNames","filter","has","forEach","n","setCandidates","visibleRanges","getVisibleRanges","firstLineInViewport","warn","getTopForLineNumber","parent","opts","_availableHeight","_minimumWidth","_lineHeight","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_listContainer","_listWidget","_createListWidget","_candidateViewHeight","onDidChangeFocus","elements","onDidChangeSelection","onDidBlur","setFocus","listInactiveFocusForeground","listInactiveFocusBackground","splice","_pickListHeight","_pickListWidth","selectedElement","getSelectedElements","focusedElement","getFocusedElements","focusedIxs","getFocus","focusFirst","reveal","focused","focusLast","heightToFitAllCandidates","MAX_N_CANDIDATES","longestCandidateWidth","ceil","map","container","virtualDelegate","getTemplateId","element","getHeight","renderer","templateId","renderTemplate","renderElement","candidate","index","templateData","populate","disposeTemplate","keyboardSupport","mouseSupport","multipleSelectionSupport","_onDidInputChange","event","flexDirection","alignItems","_inputNode","type","_buttonNode","_buttonGenHoverText","_buttonCancelHoverText","_buttonHover","setupManagedHover","INPUT","fire","keyCode","CLICK","FOCUS","outlineWidth","outlineStyle","outlineOffset","outlineColor","BLUR","outline","_buttonState","_sparkleIcon","sparkle","clearNode","update","_stopIcon","primitiveSquare","columnGap","padding","_PADDING","iconContainer","_icon","_updateIcon","_updateLabel","isAIGenerated","tags","includes","AIGenerated","_RenameCandidateView"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/renameWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { getBaseLayerHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { renderIcon } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { DeferredPromise, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isDefined } from '../../../../base/common/types.js';\nimport './renameWidget.css';\nimport * as domFontInfo from '../../../browser/config/domFontInfo.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { NewSymbolNameTag, NewSymbolNameTriggerKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { getListStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorWidgetBackground, inputBackground, inputBorder, inputForeground, quickInputListFocusBackground, quickInputListFocusForeground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\n/** for debugging */\nconst _sticky = false;\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, nls.localize('renameInputVisible', \"Whether the rename input widget is visible\"));\nexport const CONTEXT_RENAME_INPUT_FOCUSED = new RawContextKey('renameInputFocused', false, nls.localize('renameInputFocused', \"Whether the rename input widget is focused\"));\nlet RenameWidget = class RenameWidget {\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService, _logService) {\n        this._editor = _editor;\n        this._acceptKeybindings = _acceptKeybindings;\n        this._themeService = _themeService;\n        this._keybindingService = _keybindingService;\n        this._logService = _logService;\n        // implement IContentWidget\n        this.allowEditorOverflow = true;\n        this._disposables = new DisposableStore();\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._isEditingRenameCandidate = false;\n        this._nRenameSuggestionsInvocations = 0;\n        this._hadAutomaticRenameSuggestionsInvocation = false;\n        this._candidates = new Set();\n        this._beforeFirstInputFieldEditSW = new StopWatch();\n        this._inputWithButton = new InputWithButton();\n        this._disposables.add(this._inputWithButton);\n        this._editor.addContentWidget(this);\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return '__renameInputWidget';\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            this._domNode = document.createElement('div');\n            this._domNode.className = 'monaco-editor rename-box';\n            this._domNode.appendChild(this._inputWithButton.domNode);\n            this._renameCandidateListView = this._disposables.add(new RenameCandidateListView(this._domNode, {\n                fontInfo: this._editor.getOption(50 /* EditorOption.fontInfo */),\n                onFocusChange: (newSymbolName) => {\n                    this._inputWithButton.input.value = newSymbolName;\n                    this._isEditingRenameCandidate = false; // @ulugbekna: reset\n                },\n                onSelectionChange: () => {\n                    this._isEditingRenameCandidate = false; // @ulugbekna: because user picked a rename suggestion\n                    this.acceptInput(false); // we don't allow preview with mouse click for now\n                }\n            }));\n            this._disposables.add(this._inputWithButton.onDidInputChange(() => {\n                if (this._renameCandidateListView?.focusedCandidate !== undefined) {\n                    this._isEditingRenameCandidate = true;\n                }\n                this._timeBeforeFirstInputFieldEdit ??= this._beforeFirstInputFieldEditSW.elapsed();\n                if (this._renameCandidateProvidersCts?.token.isCancellationRequested === false) {\n                    this._renameCandidateProvidersCts.cancel();\n                }\n                this._renameCandidateListView?.clearFocus();\n            }));\n            this._label = document.createElement('div');\n            this._label.className = 'rename-label';\n            this._domNode.appendChild(this._label);\n            this._updateFont();\n            this._updateStyles(this._themeService.getColorTheme());\n        }\n        return this._domNode;\n    }\n    _updateStyles(theme) {\n        if (!this._domNode) {\n            return;\n        }\n        const widgetShadowColor = theme.getColor(widgetShadow);\n        const widgetBorderColor = theme.getColor(widgetBorder);\n        this._domNode.style.backgroundColor = String(theme.getColor(editorWidgetBackground) ?? '');\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\n        this._domNode.style.border = widgetBorderColor ? `1px solid ${widgetBorderColor}` : '';\n        this._domNode.style.color = String(theme.getColor(inputForeground) ?? '');\n        const border = theme.getColor(inputBorder);\n        this._inputWithButton.domNode.style.backgroundColor = String(theme.getColor(inputBackground) ?? '');\n        this._inputWithButton.input.style.backgroundColor = String(theme.getColor(inputBackground) ?? '');\n        this._inputWithButton.domNode.style.borderWidth = border ? '1px' : '0px';\n        this._inputWithButton.domNode.style.borderStyle = border ? 'solid' : 'none';\n        this._inputWithButton.domNode.style.borderColor = border?.toString() ?? 'none';\n    }\n    _updateFont() {\n        if (this._domNode === undefined) {\n            return;\n        }\n        assertType(this._label !== undefined, 'RenameWidget#_updateFont: _label must not be undefined given _domNode is defined');\n        this._editor.applyFontInfo(this._inputWithButton.input);\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._label.style.fontSize = `${this._computeLabelFontSize(fontInfo.fontSize)}px`;\n    }\n    _computeLabelFontSize(editorFontSize) {\n        return editorFontSize * 0.8;\n    }\n    getPosition() {\n        if (!this._visible) {\n            return null;\n        }\n        if (!this._editor.hasModel() || // @ulugbekna: shouldn't happen\n            !this._editor.getDomNode() // @ulugbekna: can happen during tests based on suggestWidget's similar predicate check\n        ) {\n            return null;\n        }\n        const bodyBox = dom.getClientArea(this.getDomNode().ownerDocument.body);\n        const editorBox = dom.getDomNodePagePosition(this._editor.getDomNode());\n        const cursorBoxTop = this._getTopForPosition();\n        this._nPxAvailableAbove = cursorBoxTop + editorBox.top;\n        this._nPxAvailableBelow = bodyBox.height - this._nPxAvailableAbove;\n        const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        const { totalHeight: candidateViewHeight } = RenameCandidateView.getLayoutInfo({ lineHeight });\n        const positionPreference = this._nPxAvailableBelow > candidateViewHeight * 6 /* approximate # of candidates to fit in (inclusive of rename input box & rename label) */\n            ? [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]\n            : [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */];\n        return {\n            position: this._position,\n            preference: positionPreference,\n        };\n    }\n    beforeRender() {\n        const [accept, preview] = this._acceptKeybindings;\n        this._label.innerText = nls.localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", this._keybindingService.lookupKeybinding(accept)?.getLabel(), this._keybindingService.lookupKeybinding(preview)?.getLabel());\n        this._domNode.style.minWidth = `200px`; // to prevent from widening when candidates come in\n        return null;\n    }\n    afterRender(position) {\n        // FIXME@ulugbekna: commenting trace log out until we start unmounting the widget from editor properly - https://github.com/microsoft/vscode/issues/226975\n        // this._trace('invoking afterRender, position: ', position ? 'not null' : 'null');\n        if (position === null) {\n            // cancel rename when input widget isn't rendered anymore\n            this.cancelInput(true, 'afterRender (because position is null)');\n            return;\n        }\n        if (!this._editor.hasModel() || // shouldn't happen\n            !this._editor.getDomNode() // can happen during tests based on suggestWidget's similar predicate check\n        ) {\n            return;\n        }\n        assertType(this._renameCandidateListView);\n        assertType(this._nPxAvailableAbove !== undefined);\n        assertType(this._nPxAvailableBelow !== undefined);\n        const inputBoxHeight = dom.getTotalHeight(this._inputWithButton.domNode);\n        const labelHeight = dom.getTotalHeight(this._label);\n        let totalHeightAvailable;\n        if (position === 2 /* ContentWidgetPositionPreference.BELOW */) {\n            totalHeightAvailable = this._nPxAvailableBelow;\n        }\n        else {\n            totalHeightAvailable = this._nPxAvailableAbove;\n        }\n        this._renameCandidateListView.layout({\n            height: totalHeightAvailable - labelHeight - inputBoxHeight,\n            width: dom.getTotalWidth(this._inputWithButton.domNode),\n        });\n    }\n    acceptInput(wantsPreview) {\n        this._trace(`invoking acceptInput`);\n        this._currentAcceptInput?.(wantsPreview);\n    }\n    cancelInput(focusEditor, caller) {\n        // this._trace(`invoking cancelInput, caller: ${caller}, _currentCancelInput: ${this._currentAcceptInput ? 'not undefined' : 'undefined'}`);\n        this._currentCancelInput?.(focusEditor);\n    }\n    focusNextRenameSuggestion() {\n        if (!this._renameCandidateListView?.focusNext()) {\n            this._inputWithButton.input.value = this._currentName;\n        }\n    }\n    focusPreviousRenameSuggestion() {\n        if (!this._renameCandidateListView?.focusPrevious()) {\n            this._inputWithButton.input.value = this._currentName;\n        }\n    }\n    /**\n     * @param requestRenameCandidates is `undefined` when there are no rename suggestion providers\n     */\n    getInput(where, currentName, supportPreview, requestRenameCandidates, cts) {\n        const { start: selectionStart, end: selectionEnd } = this._getSelection(where, currentName);\n        this._renameCts = cts;\n        const disposeOnDone = new DisposableStore();\n        this._nRenameSuggestionsInvocations = 0;\n        this._hadAutomaticRenameSuggestionsInvocation = false;\n        if (requestRenameCandidates === undefined) {\n            this._inputWithButton.button.style.display = 'none';\n        }\n        else {\n            this._inputWithButton.button.style.display = 'flex';\n            this._requestRenameCandidatesOnce = requestRenameCandidates;\n            this._requestRenameCandidates(currentName, false);\n            disposeOnDone.add(dom.addDisposableListener(this._inputWithButton.button, 'click', () => this._requestRenameCandidates(currentName, true)));\n            disposeOnDone.add(dom.addDisposableListener(this._inputWithButton.button, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                if (keyEvent.equals(3 /* KeyCode.Enter */) || keyEvent.equals(10 /* KeyCode.Space */)) {\n                    keyEvent.stopPropagation();\n                    keyEvent.preventDefault();\n                    this._requestRenameCandidates(currentName, true);\n                }\n            }));\n        }\n        this._isEditingRenameCandidate = false;\n        this._domNode.classList.toggle('preview', supportPreview);\n        this._position = new Position(where.startLineNumber, where.startColumn);\n        this._currentName = currentName;\n        this._inputWithButton.input.value = currentName;\n        this._inputWithButton.input.setAttribute('selectionStart', selectionStart.toString());\n        this._inputWithButton.input.setAttribute('selectionEnd', selectionEnd.toString());\n        this._inputWithButton.input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20); // determines width\n        this._beforeFirstInputFieldEditSW.reset();\n        disposeOnDone.add(toDisposable(() => {\n            this._renameCts = undefined;\n            cts.dispose(true);\n        })); // @ulugbekna: this may result in `this.cancelInput` being called twice, but it should be safe since we set it to undefined after 1st call\n        disposeOnDone.add(toDisposable(() => {\n            if (this._renameCandidateProvidersCts !== undefined) {\n                this._renameCandidateProvidersCts.dispose(true);\n                this._renameCandidateProvidersCts = undefined;\n            }\n        }));\n        disposeOnDone.add(toDisposable(() => this._candidates.clear()));\n        const inputResult = new DeferredPromise();\n        inputResult.p.finally(() => {\n            disposeOnDone.dispose();\n            this._hide();\n        });\n        this._currentCancelInput = (focusEditor) => {\n            this._trace('invoking _currentCancelInput');\n            this._currentAcceptInput = undefined;\n            this._currentCancelInput = undefined;\n            // fixme session cleanup\n            this._renameCandidateListView?.clearCandidates();\n            inputResult.complete(focusEditor);\n            return true;\n        };\n        this._currentAcceptInput = (wantsPreview) => {\n            this._trace('invoking _currentAcceptInput');\n            assertType(this._renameCandidateListView !== undefined);\n            const nRenameSuggestions = this._renameCandidateListView.nCandidates;\n            let newName;\n            let source;\n            const focusedCandidate = this._renameCandidateListView.focusedCandidate;\n            if (focusedCandidate !== undefined) {\n                this._trace('using new name from renameSuggestion');\n                newName = focusedCandidate;\n                source = { k: 'renameSuggestion' };\n            }\n            else {\n                this._trace('using new name from inputField');\n                newName = this._inputWithButton.input.value;\n                source = this._isEditingRenameCandidate ? { k: 'userEditedRenameSuggestion' } : { k: 'inputField' };\n            }\n            if (newName === currentName || newName.trim().length === 0 /* is just whitespace */) {\n                this.cancelInput(true, '_currentAcceptInput (because newName === value || newName.trim().length === 0)');\n                return;\n            }\n            this._currentAcceptInput = undefined;\n            this._currentCancelInput = undefined;\n            this._renameCandidateListView.clearCandidates();\n            // fixme session cleanup\n            inputResult.complete({\n                newName,\n                wantsPreview: supportPreview && wantsPreview,\n                stats: {\n                    source,\n                    nRenameSuggestions,\n                    timeBeforeFirstInputFieldEdit: this._timeBeforeFirstInputFieldEdit,\n                    nRenameSuggestionsInvocations: this._nRenameSuggestionsInvocations,\n                    hadAutomaticRenameSuggestionsInvocation: this._hadAutomaticRenameSuggestionsInvocation,\n                }\n            });\n        };\n        disposeOnDone.add(cts.token.onCancellationRequested(() => this.cancelInput(true, 'cts.token.onCancellationRequested')));\n        if (!_sticky) {\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(!this._domNode?.ownerDocument.hasFocus(), 'editor.onDidBlurEditorWidget')));\n        }\n        this._show();\n        return inputResult.p;\n    }\n    _requestRenameCandidates(currentName, isManuallyTriggered) {\n        if (this._requestRenameCandidatesOnce === undefined) {\n            return;\n        }\n        if (this._renameCandidateProvidersCts !== undefined) {\n            this._renameCandidateProvidersCts.dispose(true);\n        }\n        assertType(this._renameCts);\n        if (this._inputWithButton.buttonState !== 'stop') {\n            this._renameCandidateProvidersCts = new CancellationTokenSource();\n            const triggerKind = isManuallyTriggered ? NewSymbolNameTriggerKind.Invoke : NewSymbolNameTriggerKind.Automatic;\n            const candidates = this._requestRenameCandidatesOnce(triggerKind, this._renameCandidateProvidersCts.token);\n            if (candidates.length === 0) {\n                this._inputWithButton.setSparkleButton();\n                return;\n            }\n            if (!isManuallyTriggered) {\n                this._hadAutomaticRenameSuggestionsInvocation = true;\n            }\n            this._nRenameSuggestionsInvocations += 1;\n            this._inputWithButton.setStopButton();\n            this._updateRenameCandidates(candidates, currentName, this._renameCts.token);\n        }\n    }\n    /**\n     * This allows selecting only part of the symbol name in the input field based on the selection in the editor\n     */\n    _getSelection(where, currentName) {\n        assertType(this._editor.hasModel());\n        const selection = this._editor.getSelection();\n        let start = 0;\n        let end = currentName.length;\n        if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(where, selection)) {\n            start = Math.max(0, selection.startColumn - where.startColumn);\n            end = Math.min(where.endColumn, selection.endColumn) - where.startColumn;\n        }\n        return { start, end };\n    }\n    _show() {\n        this._trace('invoking _show');\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* ScrollType.Smooth */);\n        this._visible = true;\n        this._visibleContextKey.set(true);\n        this._editor.layoutContentWidget(this);\n        // TODO@ulugbekna: could this be simply run in `afterRender`?\n        setTimeout(() => {\n            this._inputWithButton.input.focus();\n            this._inputWithButton.input.setSelectionRange(parseInt(this._inputWithButton.input.getAttribute('selectionStart')), parseInt(this._inputWithButton.input.getAttribute('selectionEnd')));\n        }, 100);\n    }\n    async _updateRenameCandidates(candidates, currentName, token) {\n        const trace = (...args) => this._trace('_updateRenameCandidates', ...args);\n        trace('start');\n        const namesListResults = await raceCancellation(Promise.allSettled(candidates), token);\n        this._inputWithButton.setSparkleButton();\n        if (namesListResults === undefined) {\n            trace('returning early - received updateRenameCandidates results - undefined');\n            return;\n        }\n        const newNames = namesListResults.flatMap(namesListResult => namesListResult.status === 'fulfilled' && isDefined(namesListResult.value)\n            ? namesListResult.value\n            : []);\n        trace(`received updateRenameCandidates results - total (unfiltered) ${newNames.length} candidates.`);\n        // deduplicate and filter out the current value\n        const distinctNames = arrays.distinct(newNames, v => v.newSymbolName);\n        trace(`distinct candidates - ${distinctNames.length} candidates.`);\n        const validDistinctNames = distinctNames.filter(({ newSymbolName }) => newSymbolName.trim().length > 0 && newSymbolName !== this._inputWithButton.input.value && newSymbolName !== currentName && !this._candidates.has(newSymbolName));\n        trace(`valid distinct candidates - ${newNames.length} candidates.`);\n        validDistinctNames.forEach(n => this._candidates.add(n.newSymbolName));\n        if (validDistinctNames.length < 1) {\n            trace('returning early - no valid distinct candidates');\n            return;\n        }\n        // show the candidates\n        trace('setting candidates');\n        this._renameCandidateListView.setCandidates(validDistinctNames);\n        // ask editor to re-layout given that the widget is now of a different size after rendering rename candidates\n        trace('asking editor to re-layout');\n        this._editor.layoutContentWidget(this);\n    }\n    _hide() {\n        this._trace('invoked _hide');\n        this._visible = false;\n        this._visibleContextKey.reset();\n        this._editor.layoutContentWidget(this);\n    }\n    _getTopForPosition() {\n        const visibleRanges = this._editor.getVisibleRanges();\n        let firstLineInViewport;\n        if (visibleRanges.length > 0) {\n            firstLineInViewport = visibleRanges[0].startLineNumber;\n        }\n        else {\n            this._logService.warn('RenameWidget#_getTopForPosition: this should not happen - visibleRanges is empty');\n            firstLineInViewport = Math.max(1, this._position.lineNumber - 5); // @ulugbekna: fallback to current line minus 5\n        }\n        return this._editor.getTopForLineNumber(this._position.lineNumber) - this._editor.getTopForLineNumber(firstLineInViewport);\n    }\n    _trace(...args) {\n        this._logService.trace('RenameWidget', ...args);\n    }\n};\nRenameWidget = __decorate([\n    __param(2, IThemeService),\n    __param(3, IKeybindingService),\n    __param(4, IContextKeyService),\n    __param(5, ILogService)\n], RenameWidget);\nexport { RenameWidget };\nclass RenameCandidateListView {\n    // FIXME@ulugbekna: rewrite using event emitters\n    constructor(parent, opts) {\n        this._disposables = new DisposableStore();\n        this._availableHeight = 0;\n        this._minimumWidth = 0;\n        this._lineHeight = opts.fontInfo.lineHeight;\n        this._typicalHalfwidthCharacterWidth = opts.fontInfo.typicalHalfwidthCharacterWidth;\n        this._listContainer = document.createElement('div');\n        this._listContainer.className = 'rename-box rename-candidate-list-container';\n        parent.appendChild(this._listContainer);\n        this._listWidget = RenameCandidateListView._createListWidget(this._listContainer, this._candidateViewHeight, opts.fontInfo);\n        this._listWidget.onDidChangeFocus(e => {\n            if (e.elements.length === 1) {\n                opts.onFocusChange(e.elements[0].newSymbolName);\n            }\n        }, this._disposables);\n        this._listWidget.onDidChangeSelection(e => {\n            if (e.elements.length === 1) {\n                opts.onSelectionChange();\n            }\n        }, this._disposables);\n        this._disposables.add(this._listWidget.onDidBlur(e => {\n            this._listWidget.setFocus([]);\n        }));\n        this._listWidget.style(getListStyles({\n            listInactiveFocusForeground: quickInputListFocusForeground,\n            listInactiveFocusBackground: quickInputListFocusBackground,\n        }));\n    }\n    dispose() {\n        this._listWidget.dispose();\n        this._disposables.dispose();\n    }\n    // height - max height allowed by parent element\n    layout({ height, width }) {\n        this._availableHeight = height;\n        this._minimumWidth = width;\n    }\n    setCandidates(candidates) {\n        // insert candidates into list widget\n        this._listWidget.splice(0, 0, candidates);\n        // adjust list widget layout\n        const height = this._pickListHeight(this._listWidget.length);\n        const width = this._pickListWidth(candidates);\n        this._listWidget.layout(height, width);\n        // adjust list container layout\n        this._listContainer.style.height = `${height}px`;\n        this._listContainer.style.width = `${width}px`;\n        aria.status(nls.localize('renameSuggestionsReceivedAria', \"Received {0} rename suggestions\", candidates.length));\n    }\n    clearCandidates() {\n        this._listContainer.style.height = '0px';\n        this._listContainer.style.width = '0px';\n        this._listWidget.splice(0, this._listWidget.length, []);\n    }\n    get nCandidates() {\n        return this._listWidget.length;\n    }\n    get focusedCandidate() {\n        if (this._listWidget.length === 0) {\n            return;\n        }\n        const selectedElement = this._listWidget.getSelectedElements()[0];\n        if (selectedElement !== undefined) {\n            return selectedElement.newSymbolName;\n        }\n        const focusedElement = this._listWidget.getFocusedElements()[0];\n        if (focusedElement !== undefined) {\n            return focusedElement.newSymbolName;\n        }\n        return;\n    }\n    focusNext() {\n        if (this._listWidget.length === 0) {\n            return false;\n        }\n        const focusedIxs = this._listWidget.getFocus();\n        if (focusedIxs.length === 0) {\n            this._listWidget.focusFirst();\n            this._listWidget.reveal(0);\n            return true;\n        }\n        else {\n            if (focusedIxs[0] === this._listWidget.length - 1) {\n                this._listWidget.setFocus([]);\n                this._listWidget.reveal(0); // @ulugbekna: without this, it seems like focused element is obstructed\n                return false;\n            }\n            else {\n                this._listWidget.focusNext();\n                const focused = this._listWidget.getFocus()[0];\n                this._listWidget.reveal(focused);\n                return true;\n            }\n        }\n    }\n    /**\n     * @returns true if focus is moved to previous element\n     */\n    focusPrevious() {\n        if (this._listWidget.length === 0) {\n            return false;\n        }\n        const focusedIxs = this._listWidget.getFocus();\n        if (focusedIxs.length === 0) {\n            this._listWidget.focusLast();\n            const focused = this._listWidget.getFocus()[0];\n            this._listWidget.reveal(focused);\n            return true;\n        }\n        else {\n            if (focusedIxs[0] === 0) {\n                this._listWidget.setFocus([]);\n                return false;\n            }\n            else {\n                this._listWidget.focusPrevious();\n                const focused = this._listWidget.getFocus()[0];\n                this._listWidget.reveal(focused);\n                return true;\n            }\n        }\n    }\n    clearFocus() {\n        this._listWidget.setFocus([]);\n    }\n    get _candidateViewHeight() {\n        const { totalHeight } = RenameCandidateView.getLayoutInfo({ lineHeight: this._lineHeight });\n        return totalHeight;\n    }\n    _pickListHeight(nCandidates) {\n        const heightToFitAllCandidates = this._candidateViewHeight * nCandidates;\n        const MAX_N_CANDIDATES = 7; // @ulugbekna: max # of candidates we want to show at once\n        const height = Math.min(heightToFitAllCandidates, this._availableHeight, this._candidateViewHeight * MAX_N_CANDIDATES);\n        return height;\n    }\n    _pickListWidth(candidates) {\n        const longestCandidateWidth = Math.ceil(Math.max(...candidates.map(c => c.newSymbolName.length)) * this._typicalHalfwidthCharacterWidth);\n        const width = Math.max(this._minimumWidth, 4 /* padding */ + 16 /* sparkle icon */ + 5 /* margin-left */ + longestCandidateWidth + 10 /* (possibly visible) scrollbar width */ // TODO@ulugbekna: approximate calc - clean this up\n        );\n        return width;\n    }\n    static _createListWidget(container, candidateViewHeight, fontInfo) {\n        const virtualDelegate = new class {\n            getTemplateId(element) {\n                return 'candidate';\n            }\n            getHeight(element) {\n                return candidateViewHeight;\n            }\n        };\n        const renderer = new class {\n            constructor() {\n                this.templateId = 'candidate';\n            }\n            renderTemplate(container) {\n                return new RenameCandidateView(container, fontInfo);\n            }\n            renderElement(candidate, index, templateData) {\n                templateData.populate(candidate);\n            }\n            disposeTemplate(templateData) {\n                templateData.dispose();\n            }\n        };\n        return new List('NewSymbolNameCandidates', container, virtualDelegate, [renderer], {\n            keyboardSupport: false, // @ulugbekna: because we handle keyboard events through proper commands & keybinding service, see `rename.ts`\n            mouseSupport: true,\n            multipleSelectionSupport: false,\n        });\n    }\n}\nclass InputWithButton {\n    constructor() {\n        this._onDidInputChange = new Emitter();\n        this.onDidInputChange = this._onDidInputChange.event;\n        this._disposables = new DisposableStore();\n    }\n    get domNode() {\n        if (!this._domNode) {\n            this._domNode = document.createElement('div');\n            this._domNode.className = 'rename-input-with-button';\n            this._domNode.style.display = 'flex';\n            this._domNode.style.flexDirection = 'row';\n            this._domNode.style.alignItems = 'center';\n            this._inputNode = document.createElement('input');\n            this._inputNode.className = 'rename-input';\n            this._inputNode.type = 'text';\n            this._inputNode.style.border = 'none';\n            this._inputNode.setAttribute('aria-label', nls.localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n            this._domNode.appendChild(this._inputNode);\n            this._buttonNode = document.createElement('div');\n            this._buttonNode.className = 'rename-suggestions-button';\n            this._buttonNode.setAttribute('tabindex', '0');\n            this._buttonGenHoverText = nls.localize('generateRenameSuggestionsButton', \"Generate new name suggestions\");\n            this._buttonCancelHoverText = nls.localize('cancelRenameSuggestionsButton', \"Cancel\");\n            this._buttonHover = getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('element'), this._buttonNode, this._buttonGenHoverText);\n            this._disposables.add(this._buttonHover);\n            this._domNode.appendChild(this._buttonNode);\n            // notify if selection changes to cancel request to rename-suggestion providers\n            this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.INPUT, () => this._onDidInputChange.fire()));\n            this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                if (keyEvent.keyCode === 15 /* KeyCode.LeftArrow */ || keyEvent.keyCode === 17 /* KeyCode.RightArrow */) {\n                    this._onDidInputChange.fire();\n                }\n            }));\n            this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.CLICK, () => this._onDidInputChange.fire()));\n            // focus \"container\" border instead of input box\n            this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.FOCUS, () => {\n                this.domNode.style.outlineWidth = '1px';\n                this.domNode.style.outlineStyle = 'solid';\n                this.domNode.style.outlineOffset = '-1px';\n                this.domNode.style.outlineColor = 'var(--vscode-focusBorder)';\n            }));\n            this._disposables.add(dom.addDisposableListener(this.input, dom.EventType.BLUR, () => {\n                this.domNode.style.outline = 'none';\n            }));\n        }\n        return this._domNode;\n    }\n    get input() {\n        assertType(this._inputNode);\n        return this._inputNode;\n    }\n    get button() {\n        assertType(this._buttonNode);\n        return this._buttonNode;\n    }\n    get buttonState() {\n        return this._buttonState;\n    }\n    setSparkleButton() {\n        this._buttonState = 'sparkle';\n        this._sparkleIcon ??= renderIcon(Codicon.sparkle);\n        dom.clearNode(this.button);\n        this.button.appendChild(this._sparkleIcon);\n        this.button.setAttribute('aria-label', 'Generating new name suggestions');\n        this._buttonHover?.update(this._buttonGenHoverText);\n        this.input.focus();\n    }\n    setStopButton() {\n        this._buttonState = 'stop';\n        this._stopIcon ??= renderIcon(Codicon.primitiveSquare);\n        dom.clearNode(this.button);\n        this.button.appendChild(this._stopIcon);\n        this.button.setAttribute('aria-label', 'Cancel generating new name suggestions');\n        this._buttonHover?.update(this._buttonCancelHoverText);\n        this.input.focus();\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\nclass RenameCandidateView {\n    static { this._PADDING = 2; }\n    constructor(parent, fontInfo) {\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'rename-box rename-candidate';\n        this._domNode.style.display = `flex`;\n        this._domNode.style.columnGap = `5px`;\n        this._domNode.style.alignItems = `center`;\n        this._domNode.style.height = `${fontInfo.lineHeight}px`;\n        this._domNode.style.padding = `${RenameCandidateView._PADDING}px`;\n        // @ulugbekna: needed to keep space when the `icon.style.display` is set to `none`\n        const iconContainer = document.createElement('div');\n        iconContainer.style.display = `flex`;\n        iconContainer.style.alignItems = `center`;\n        iconContainer.style.width = iconContainer.style.height = `${fontInfo.lineHeight * 0.8}px`;\n        this._domNode.appendChild(iconContainer);\n        this._icon = renderIcon(Codicon.sparkle);\n        this._icon.style.display = `none`;\n        iconContainer.appendChild(this._icon);\n        this._label = document.createElement('div');\n        domFontInfo.applyFontInfo(this._label, fontInfo);\n        this._domNode.appendChild(this._label);\n        parent.appendChild(this._domNode);\n    }\n    populate(value) {\n        this._updateIcon(value);\n        this._updateLabel(value);\n    }\n    _updateIcon(value) {\n        const isAIGenerated = !!value.tags?.includes(NewSymbolNameTag.AIGenerated);\n        this._icon.style.display = isAIGenerated ? 'inherit' : 'none';\n    }\n    _updateLabel(value) {\n        this._label.innerText = value.newSymbolName;\n    }\n    static getLayoutInfo({ lineHeight }) {\n        const totalHeight = lineHeight + RenameCandidateView._PADDING * 2 /* top & bottom padding */;\n        return { totalHeight };\n    }\n    dispose() {\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}