{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { reactive, render, ref, createVNode } from \"vue\";\nimport { MESSAGE_TYPES } from \"../_utils/constant.js\";\nimport { getOverlay } from \"../_utils/dom.js\";\nimport { isString, isUndefined, isFunction } from \"../_utils/is.js\";\nimport MessageList from \"./message-list.js\";\nclass MessageManger {\n  constructor(config, appContext) {\n    this.messageCount = 0;\n    this.add = config2 => {\n      var _a;\n      this.messageCount++;\n      const id = (_a = config2.id) != null ? _a : `__arco_message_${this.messageCount}`;\n      if (this.messageIds.has(id)) {\n        return this.update(id, config2);\n      }\n      const message2 = reactive({\n        id,\n        ...config2\n      });\n      this.messages.value.push(message2);\n      this.messageIds.add(id);\n      return {\n        close: () => this.remove(id)\n      };\n    };\n    this.update = (id, config2) => {\n      for (let i = 0; i < this.messages.value.length; i++) {\n        if (this.messages.value[i].id === id) {\n          const resetOnUpdate = !isUndefined(config2.duration);\n          Object.assign(this.messages.value[i], {\n            ...config2,\n            id,\n            resetOnUpdate\n          });\n          break;\n        }\n      }\n      return {\n        close: () => this.remove(id)\n      };\n    };\n    this.remove = id => {\n      for (let i = 0; i < this.messages.value.length; i++) {\n        const item = this.messages.value[i];\n        if (item.id === id) {\n          if (isFunction(item.onClose)) {\n            item.onClose(id);\n          }\n          this.messages.value.splice(i, 1);\n          this.messageIds.delete(id);\n          break;\n        }\n      }\n    };\n    this.clear = () => {\n      this.messages.value.splice(0);\n    };\n    this.destroy = () => {\n      if (this.messages.value.length === 0 && this.container) {\n        render(null, this.container);\n        document.body.removeChild(this.container);\n        this.container = null;\n        messageInstance[this.position] = void 0;\n      }\n    };\n    const {\n      position = \"top\"\n    } = config;\n    this.container = getOverlay(\"message\");\n    this.messageIds = /* @__PURE__ */new Set();\n    this.messages = ref([]);\n    this.position = position;\n    const vm = createVNode(MessageList, {\n      messages: this.messages.value,\n      position,\n      onClose: this.remove,\n      onAfterClose: this.destroy\n    });\n    if (appContext != null ? appContext : Message._context) {\n      vm.appContext = appContext != null ? appContext : Message._context;\n    }\n    render(vm, this.container);\n    document.body.appendChild(this.container);\n  }\n}\nconst messageInstance = {};\nconst types = [...MESSAGE_TYPES, \"loading\", \"normal\"];\nconst message = types.reduce((pre, value) => {\n  pre[value] = (config, appContext) => {\n    if (isString(config)) {\n      config = {\n        content: config\n      };\n    }\n    const _config = {\n      type: value,\n      ...config\n    };\n    const {\n      position = \"top\"\n    } = _config;\n    if (!messageInstance[position]) {\n      messageInstance[position] = new MessageManger(_config, appContext);\n    }\n    return messageInstance[position].add(_config);\n  };\n  return pre;\n}, {});\nmessage.clear = position => {\n  var _a;\n  if (position) {\n    (_a = messageInstance[position]) == null ? void 0 : _a.clear();\n  } else {\n    Object.values(messageInstance).forEach(item => item == null ? void 0 : item.clear());\n  }\n};\nconst Message = {\n  ...message,\n  install: app => {\n    const _message = {\n      clear: message.clear\n    };\n    for (const key of types) {\n      _message[key] = (config, appContext = app._context) => message[key](config, appContext);\n    }\n    app.config.globalProperties.$message = _message;\n  },\n  _context: null\n};\nexport { Message as default };","map":{"version":3,"names":["reactive","render","ref","createVNode","MESSAGE_TYPES","getOverlay","isString","isUndefined","isFunction","MessageList","MessageManger","constructor","config","appContext","messageCount","add","config2","_a","id","messageIds","has","update","message2","messages","value","push","close","remove","i","length","resetOnUpdate","duration","Object","assign","item","onClose","splice","delete","clear","destroy","container","document","body","removeChild","messageInstance","position","Set","vm","onAfterClose","Message","_context","appendChild","types","message","reduce","pre","content","_config","type","values","forEach","install","app","_message","key","globalProperties","$message","default"],"sources":["P:/VSCode/Web/judgex_front/node_modules/@arco-design/web-vue/es/message/index.js"],"sourcesContent":["import { reactive, render, ref, createVNode } from \"vue\";\nimport { MESSAGE_TYPES } from \"../_utils/constant.js\";\nimport { getOverlay } from \"../_utils/dom.js\";\nimport { isString, isUndefined, isFunction } from \"../_utils/is.js\";\nimport MessageList from \"./message-list.js\";\nclass MessageManger {\n  constructor(config, appContext) {\n    this.messageCount = 0;\n    this.add = (config2) => {\n      var _a;\n      this.messageCount++;\n      const id = (_a = config2.id) != null ? _a : `__arco_message_${this.messageCount}`;\n      if (this.messageIds.has(id)) {\n        return this.update(id, config2);\n      }\n      const message2 = reactive({ id, ...config2 });\n      this.messages.value.push(message2);\n      this.messageIds.add(id);\n      return {\n        close: () => this.remove(id)\n      };\n    };\n    this.update = (id, config2) => {\n      for (let i = 0; i < this.messages.value.length; i++) {\n        if (this.messages.value[i].id === id) {\n          const resetOnUpdate = !isUndefined(config2.duration);\n          Object.assign(this.messages.value[i], { ...config2, id, resetOnUpdate });\n          break;\n        }\n      }\n      return {\n        close: () => this.remove(id)\n      };\n    };\n    this.remove = (id) => {\n      for (let i = 0; i < this.messages.value.length; i++) {\n        const item = this.messages.value[i];\n        if (item.id === id) {\n          if (isFunction(item.onClose)) {\n            item.onClose(id);\n          }\n          this.messages.value.splice(i, 1);\n          this.messageIds.delete(id);\n          break;\n        }\n      }\n    };\n    this.clear = () => {\n      this.messages.value.splice(0);\n    };\n    this.destroy = () => {\n      if (this.messages.value.length === 0 && this.container) {\n        render(null, this.container);\n        document.body.removeChild(this.container);\n        this.container = null;\n        messageInstance[this.position] = void 0;\n      }\n    };\n    const { position = \"top\" } = config;\n    this.container = getOverlay(\"message\");\n    this.messageIds = /* @__PURE__ */ new Set();\n    this.messages = ref([]);\n    this.position = position;\n    const vm = createVNode(MessageList, {\n      messages: this.messages.value,\n      position,\n      onClose: this.remove,\n      onAfterClose: this.destroy\n    });\n    if (appContext != null ? appContext : Message._context) {\n      vm.appContext = appContext != null ? appContext : Message._context;\n    }\n    render(vm, this.container);\n    document.body.appendChild(this.container);\n  }\n}\nconst messageInstance = {};\nconst types = [...MESSAGE_TYPES, \"loading\", \"normal\"];\nconst message = types.reduce((pre, value) => {\n  pre[value] = (config, appContext) => {\n    if (isString(config)) {\n      config = { content: config };\n    }\n    const _config = { type: value, ...config };\n    const { position = \"top\" } = _config;\n    if (!messageInstance[position]) {\n      messageInstance[position] = new MessageManger(_config, appContext);\n    }\n    return messageInstance[position].add(_config);\n  };\n  return pre;\n}, {});\nmessage.clear = (position) => {\n  var _a;\n  if (position) {\n    (_a = messageInstance[position]) == null ? void 0 : _a.clear();\n  } else {\n    Object.values(messageInstance).forEach((item) => item == null ? void 0 : item.clear());\n  }\n};\nconst Message = {\n  ...message,\n  install: (app) => {\n    const _message = {\n      clear: message.clear\n    };\n    for (const key of types) {\n      _message[key] = (config, appContext = app._context) => message[key](config, appContext);\n    }\n    app.config.globalProperties.$message = _message;\n  },\n  _context: null\n};\nexport { Message as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}