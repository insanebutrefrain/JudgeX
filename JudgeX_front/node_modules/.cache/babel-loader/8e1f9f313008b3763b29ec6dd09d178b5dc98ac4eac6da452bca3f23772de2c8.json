{"ast":null,"code":"import _defineProperty from \"P:/IDEA/JudgeX/JudgeX_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/language/json/json.worker.ts\nimport * as worker from \"../../editor/editor.worker.js\";\n\n// node_modules/jsonc-parser/lib/esm/impl/scanner.js\nfunction createScanner(text, ignoreTrivia = false) {\n  const len = text.length;\n  let pos = 0,\n    value = \"\",\n    tokenOffset = 0,\n    token = 16,\n    lineNumber = 0,\n    lineStartOffset = 0,\n    tokenLineStartOffset = 0,\n    prevTokenLineStartOffset = 0,\n    scanError = 0;\n  function scanHexDigits(count, exact) {\n    let digits = 0;\n    let value2 = 0;\n    while (digits < count || !exact) {\n      let ch = text.charCodeAt(pos);\n      if (ch >= 48 && ch <= 57) {\n        value2 = value2 * 16 + ch - 48;\n      } else if (ch >= 65 && ch <= 70) {\n        value2 = value2 * 16 + ch - 65 + 10;\n      } else if (ch >= 97 && ch <= 102) {\n        value2 = value2 * 16 + ch - 97 + 10;\n      } else {\n        break;\n      }\n      pos++;\n      digits++;\n    }\n    if (digits < count) {\n      value2 = -1;\n    }\n    return value2;\n  }\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = \"\";\n    tokenOffset = 0;\n    token = 16;\n    scanError = 0;\n  }\n  function scanNumber() {\n    let start = pos;\n    if (text.charCodeAt(pos) === 48) {\n      pos++;\n    } else {\n      pos++;\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n    if (pos < text.length && text.charCodeAt(pos) === 46) {\n      pos++;\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n      } else {\n        scanError = 3;\n        return text.substring(start, pos);\n      }\n    }\n    let end = pos;\n    if (pos < text.length && (text.charCodeAt(pos) === 69 || text.charCodeAt(pos) === 101)) {\n      pos++;\n      if (pos < text.length && text.charCodeAt(pos) === 43 || text.charCodeAt(pos) === 45) {\n        pos++;\n      }\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n        end = pos;\n      } else {\n        scanError = 3;\n      }\n    }\n    return text.substring(start, end);\n  }\n  function scanString() {\n    let result = \"\",\n      start = pos;\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2;\n        break;\n      }\n      const ch = text.charCodeAt(pos);\n      if (ch === 34) {\n        result += text.substring(start, pos);\n        pos++;\n        break;\n      }\n      if (ch === 92) {\n        result += text.substring(start, pos);\n        pos++;\n        if (pos >= len) {\n          scanError = 2;\n          break;\n        }\n        const ch2 = text.charCodeAt(pos++);\n        switch (ch2) {\n          case 34:\n            result += '\"';\n            break;\n          case 92:\n            result += \"\\\\\";\n            break;\n          case 47:\n            result += \"/\";\n            break;\n          case 98:\n            result += \"\\b\";\n            break;\n          case 102:\n            result += \"\\f\";\n            break;\n          case 110:\n            result += \"\\n\";\n            break;\n          case 114:\n            result += \"\\r\";\n            break;\n          case 116:\n            result += \"\t\";\n            break;\n          case 117:\n            const ch3 = scanHexDigits(4, true);\n            if (ch3 >= 0) {\n              result += String.fromCharCode(ch3);\n            } else {\n              scanError = 4;\n            }\n            break;\n          default:\n            scanError = 5;\n        }\n        start = pos;\n        continue;\n      }\n      if (ch >= 0 && ch <= 31) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2;\n          break;\n        } else {\n          scanError = 6;\n        }\n      }\n      pos++;\n    }\n    return result;\n  }\n  function scanNext() {\n    value = \"\";\n    scanError = 0;\n    tokenOffset = pos;\n    lineStartOffset = lineNumber;\n    prevTokenLineStartOffset = tokenLineStartOffset;\n    if (pos >= len) {\n      tokenOffset = len;\n      return token = 17;\n    }\n    let code = text.charCodeAt(pos);\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n      return token = 15;\n    }\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n      if (code === 13 && text.charCodeAt(pos) === 10) {\n        pos++;\n        value += \"\\n\";\n      }\n      lineNumber++;\n      tokenLineStartOffset = pos;\n      return token = 14;\n    }\n    switch (code) {\n      case 123:\n        pos++;\n        return token = 1;\n      case 125:\n        pos++;\n        return token = 2;\n      case 91:\n        pos++;\n        return token = 3;\n      case 93:\n        pos++;\n        return token = 4;\n      case 58:\n        pos++;\n        return token = 6;\n      case 44:\n        pos++;\n        return token = 5;\n      case 34:\n        pos++;\n        value = scanString();\n        return token = 10;\n      case 47:\n        const start = pos - 1;\n        if (text.charCodeAt(pos + 1) === 47) {\n          pos += 2;\n          while (pos < len) {\n            if (isLineBreak(text.charCodeAt(pos))) {\n              break;\n            }\n            pos++;\n          }\n          value = text.substring(start, pos);\n          return token = 12;\n        }\n        if (text.charCodeAt(pos + 1) === 42) {\n          pos += 2;\n          const safeLength = len - 1;\n          let commentClosed = false;\n          while (pos < safeLength) {\n            const ch = text.charCodeAt(pos);\n            if (ch === 42 && text.charCodeAt(pos + 1) === 47) {\n              pos += 2;\n              commentClosed = true;\n              break;\n            }\n            pos++;\n            if (isLineBreak(ch)) {\n              if (ch === 13 && text.charCodeAt(pos) === 10) {\n                pos++;\n              }\n              lineNumber++;\n              tokenLineStartOffset = pos;\n            }\n          }\n          if (!commentClosed) {\n            pos++;\n            scanError = 1;\n          }\n          value = text.substring(start, pos);\n          return token = 13;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n      case 45:\n        value += String.fromCharCode(code);\n        pos++;\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16;\n        }\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        value += scanNumber();\n        return token = 11;\n      default:\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos);\n          switch (value) {\n            case \"true\":\n              return token = 8;\n            case \"false\":\n              return token = 9;\n            case \"null\":\n              return token = 7;\n          }\n          return token = 16;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n    }\n  }\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n    switch (code) {\n      case 125:\n      case 93:\n      case 123:\n      case 91:\n      case 34:\n      case 58:\n      case 44:\n      case 47:\n        return false;\n    }\n    return true;\n  }\n  function scanNextNonTrivia() {\n    let result;\n    do {\n      result = scanNext();\n    } while (result >= 12 && result <= 15);\n    return result;\n  }\n  return {\n    setPosition,\n    getPosition: () => pos,\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: () => token,\n    getTokenValue: () => value,\n    getTokenOffset: () => tokenOffset,\n    getTokenLength: () => pos - tokenOffset,\n    getTokenStartLine: () => lineStartOffset,\n    getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n    getTokenError: () => scanError\n  };\n}\nfunction isWhiteSpace(ch) {\n  return ch === 32 || ch === 9;\n}\nfunction isLineBreak(ch) {\n  return ch === 10 || ch === 13;\n}\nfunction isDigit(ch) {\n  return ch >= 48 && ch <= 57;\n}\nvar CharacterCodes;\n(function (CharacterCodes2) {\n  CharacterCodes2[CharacterCodes2[\"lineFeed\"] = 10] = \"lineFeed\";\n  CharacterCodes2[CharacterCodes2[\"carriageReturn\"] = 13] = \"carriageReturn\";\n  CharacterCodes2[CharacterCodes2[\"space\"] = 32] = \"space\";\n  CharacterCodes2[CharacterCodes2[\"_0\"] = 48] = \"_0\";\n  CharacterCodes2[CharacterCodes2[\"_1\"] = 49] = \"_1\";\n  CharacterCodes2[CharacterCodes2[\"_2\"] = 50] = \"_2\";\n  CharacterCodes2[CharacterCodes2[\"_3\"] = 51] = \"_3\";\n  CharacterCodes2[CharacterCodes2[\"_4\"] = 52] = \"_4\";\n  CharacterCodes2[CharacterCodes2[\"_5\"] = 53] = \"_5\";\n  CharacterCodes2[CharacterCodes2[\"_6\"] = 54] = \"_6\";\n  CharacterCodes2[CharacterCodes2[\"_7\"] = 55] = \"_7\";\n  CharacterCodes2[CharacterCodes2[\"_8\"] = 56] = \"_8\";\n  CharacterCodes2[CharacterCodes2[\"_9\"] = 57] = \"_9\";\n  CharacterCodes2[CharacterCodes2[\"a\"] = 97] = \"a\";\n  CharacterCodes2[CharacterCodes2[\"b\"] = 98] = \"b\";\n  CharacterCodes2[CharacterCodes2[\"c\"] = 99] = \"c\";\n  CharacterCodes2[CharacterCodes2[\"d\"] = 100] = \"d\";\n  CharacterCodes2[CharacterCodes2[\"e\"] = 101] = \"e\";\n  CharacterCodes2[CharacterCodes2[\"f\"] = 102] = \"f\";\n  CharacterCodes2[CharacterCodes2[\"g\"] = 103] = \"g\";\n  CharacterCodes2[CharacterCodes2[\"h\"] = 104] = \"h\";\n  CharacterCodes2[CharacterCodes2[\"i\"] = 105] = \"i\";\n  CharacterCodes2[CharacterCodes2[\"j\"] = 106] = \"j\";\n  CharacterCodes2[CharacterCodes2[\"k\"] = 107] = \"k\";\n  CharacterCodes2[CharacterCodes2[\"l\"] = 108] = \"l\";\n  CharacterCodes2[CharacterCodes2[\"m\"] = 109] = \"m\";\n  CharacterCodes2[CharacterCodes2[\"n\"] = 110] = \"n\";\n  CharacterCodes2[CharacterCodes2[\"o\"] = 111] = \"o\";\n  CharacterCodes2[CharacterCodes2[\"p\"] = 112] = \"p\";\n  CharacterCodes2[CharacterCodes2[\"q\"] = 113] = \"q\";\n  CharacterCodes2[CharacterCodes2[\"r\"] = 114] = \"r\";\n  CharacterCodes2[CharacterCodes2[\"s\"] = 115] = \"s\";\n  CharacterCodes2[CharacterCodes2[\"t\"] = 116] = \"t\";\n  CharacterCodes2[CharacterCodes2[\"u\"] = 117] = \"u\";\n  CharacterCodes2[CharacterCodes2[\"v\"] = 118] = \"v\";\n  CharacterCodes2[CharacterCodes2[\"w\"] = 119] = \"w\";\n  CharacterCodes2[CharacterCodes2[\"x\"] = 120] = \"x\";\n  CharacterCodes2[CharacterCodes2[\"y\"] = 121] = \"y\";\n  CharacterCodes2[CharacterCodes2[\"z\"] = 122] = \"z\";\n  CharacterCodes2[CharacterCodes2[\"A\"] = 65] = \"A\";\n  CharacterCodes2[CharacterCodes2[\"B\"] = 66] = \"B\";\n  CharacterCodes2[CharacterCodes2[\"C\"] = 67] = \"C\";\n  CharacterCodes2[CharacterCodes2[\"D\"] = 68] = \"D\";\n  CharacterCodes2[CharacterCodes2[\"E\"] = 69] = \"E\";\n  CharacterCodes2[CharacterCodes2[\"F\"] = 70] = \"F\";\n  CharacterCodes2[CharacterCodes2[\"G\"] = 71] = \"G\";\n  CharacterCodes2[CharacterCodes2[\"H\"] = 72] = \"H\";\n  CharacterCodes2[CharacterCodes2[\"I\"] = 73] = \"I\";\n  CharacterCodes2[CharacterCodes2[\"J\"] = 74] = \"J\";\n  CharacterCodes2[CharacterCodes2[\"K\"] = 75] = \"K\";\n  CharacterCodes2[CharacterCodes2[\"L\"] = 76] = \"L\";\n  CharacterCodes2[CharacterCodes2[\"M\"] = 77] = \"M\";\n  CharacterCodes2[CharacterCodes2[\"N\"] = 78] = \"N\";\n  CharacterCodes2[CharacterCodes2[\"O\"] = 79] = \"O\";\n  CharacterCodes2[CharacterCodes2[\"P\"] = 80] = \"P\";\n  CharacterCodes2[CharacterCodes2[\"Q\"] = 81] = \"Q\";\n  CharacterCodes2[CharacterCodes2[\"R\"] = 82] = \"R\";\n  CharacterCodes2[CharacterCodes2[\"S\"] = 83] = \"S\";\n  CharacterCodes2[CharacterCodes2[\"T\"] = 84] = \"T\";\n  CharacterCodes2[CharacterCodes2[\"U\"] = 85] = \"U\";\n  CharacterCodes2[CharacterCodes2[\"V\"] = 86] = \"V\";\n  CharacterCodes2[CharacterCodes2[\"W\"] = 87] = \"W\";\n  CharacterCodes2[CharacterCodes2[\"X\"] = 88] = \"X\";\n  CharacterCodes2[CharacterCodes2[\"Y\"] = 89] = \"Y\";\n  CharacterCodes2[CharacterCodes2[\"Z\"] = 90] = \"Z\";\n  CharacterCodes2[CharacterCodes2[\"asterisk\"] = 42] = \"asterisk\";\n  CharacterCodes2[CharacterCodes2[\"backslash\"] = 92] = \"backslash\";\n  CharacterCodes2[CharacterCodes2[\"closeBrace\"] = 125] = \"closeBrace\";\n  CharacterCodes2[CharacterCodes2[\"closeBracket\"] = 93] = \"closeBracket\";\n  CharacterCodes2[CharacterCodes2[\"colon\"] = 58] = \"colon\";\n  CharacterCodes2[CharacterCodes2[\"comma\"] = 44] = \"comma\";\n  CharacterCodes2[CharacterCodes2[\"dot\"] = 46] = \"dot\";\n  CharacterCodes2[CharacterCodes2[\"doubleQuote\"] = 34] = \"doubleQuote\";\n  CharacterCodes2[CharacterCodes2[\"minus\"] = 45] = \"minus\";\n  CharacterCodes2[CharacterCodes2[\"openBrace\"] = 123] = \"openBrace\";\n  CharacterCodes2[CharacterCodes2[\"openBracket\"] = 91] = \"openBracket\";\n  CharacterCodes2[CharacterCodes2[\"plus\"] = 43] = \"plus\";\n  CharacterCodes2[CharacterCodes2[\"slash\"] = 47] = \"slash\";\n  CharacterCodes2[CharacterCodes2[\"formFeed\"] = 12] = \"formFeed\";\n  CharacterCodes2[CharacterCodes2[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n\n// node_modules/jsonc-parser/lib/esm/impl/string-intern.js\nvar cachedSpaces = new Array(20).fill(0).map((_, index) => {\n  return \" \".repeat(index);\n});\nvar maxCachedValues = 200;\nvar cachedBreakLinesWithSpaces = {\n  \" \": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \" \".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \" \".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \" \".repeat(index);\n    })\n  },\n  \"\t\": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \"\t\".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \"\t\".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \"\t\".repeat(index);\n    })\n  }\n};\nvar supportedEols = [\"\\n\", \"\\r\", \"\\r\\n\"];\n\n// node_modules/jsonc-parser/lib/esm/impl/format.js\nfunction format(documentText, range, options) {\n  let initialIndentLevel;\n  let formatText;\n  let formatTextStart;\n  let rangeStart;\n  let rangeEnd;\n  if (range) {\n    rangeStart = range.offset;\n    rangeEnd = rangeStart + range.length;\n    formatTextStart = rangeStart;\n    while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n      formatTextStart--;\n    }\n    let endOffset = rangeEnd;\n    while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n      endOffset++;\n    }\n    formatText = documentText.substring(formatTextStart, endOffset);\n    initialIndentLevel = computeIndentLevel(formatText, options);\n  } else {\n    formatText = documentText;\n    initialIndentLevel = 0;\n    formatTextStart = 0;\n    rangeStart = 0;\n    rangeEnd = documentText.length;\n  }\n  const eol = getEOL(options, documentText);\n  const eolFastPathSupported = supportedEols.includes(eol);\n  let numberLineBreaks = 0;\n  let indentLevel = 0;\n  let indentValue;\n  if (options.insertSpaces) {\n    indentValue = cachedSpaces[options.tabSize || 4] ?? repeat(cachedSpaces[1], options.tabSize || 4);\n  } else {\n    indentValue = \"\t\";\n  }\n  const indentType = indentValue === \"\t\" ? \"\t\" : \" \";\n  let scanner = createScanner(formatText, false);\n  let hasError = false;\n  function newLinesAndIndent() {\n    if (numberLineBreaks > 1) {\n      return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    const amountOfSpaces = indentValue.length * (initialIndentLevel + indentLevel);\n    if (!eolFastPathSupported || amountOfSpaces > cachedBreakLinesWithSpaces[indentType][eol].length) {\n      return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    if (amountOfSpaces <= 0) {\n      return eol;\n    }\n    return cachedBreakLinesWithSpaces[indentType][eol][amountOfSpaces];\n  }\n  function scanNext() {\n    let token = scanner.scan();\n    numberLineBreaks = 0;\n    while (token === 15 || token === 14) {\n      if (token === 14 && options.keepLines) {\n        numberLineBreaks += 1;\n      } else if (token === 14) {\n        numberLineBreaks = 1;\n      }\n      token = scanner.scan();\n    }\n    hasError = token === 16 || scanner.getTokenError() !== 0;\n    return token;\n  }\n  const editOperations = [];\n  function addEdit(text, startOffset, endOffset) {\n    if (!hasError && (!range || startOffset < rangeEnd && endOffset > rangeStart) && documentText.substring(startOffset, endOffset) !== text) {\n      editOperations.push({\n        offset: startOffset,\n        length: endOffset - startOffset,\n        content: text\n      });\n    }\n  }\n  let firstToken = scanNext();\n  if (options.keepLines && numberLineBreaks > 0) {\n    addEdit(repeat(eol, numberLineBreaks), 0, 0);\n  }\n  if (firstToken !== 17) {\n    let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n    let initialIndent = indentValue.length * initialIndentLevel < 20 && options.insertSpaces ? cachedSpaces[indentValue.length * initialIndentLevel] : repeat(indentValue, initialIndentLevel);\n    addEdit(initialIndent, formatTextStart, firstTokenStart);\n  }\n  while (firstToken !== 17) {\n    let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n    let secondToken = scanNext();\n    let replaceContent = \"\";\n    let needsLineBreak = false;\n    while (numberLineBreaks === 0 && (secondToken === 12 || secondToken === 13)) {\n      let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n      addEdit(cachedSpaces[1], firstTokenEnd, commentTokenStart);\n      firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n      needsLineBreak = secondToken === 12;\n      replaceContent = needsLineBreak ? newLinesAndIndent() : \"\";\n      secondToken = scanNext();\n    }\n    if (secondToken === 2) {\n      if (firstToken !== 1) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else if (secondToken === 4) {\n      if (firstToken !== 3) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else {\n      switch (firstToken) {\n        case 3:\n        case 1:\n          indentLevel++;\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 5:\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 12:\n          replaceContent = newLinesAndIndent();\n          break;\n        case 13:\n          if (numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 6:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 10:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (secondToken === 6 && !needsLineBreak) {\n            replaceContent = \"\";\n          }\n          break;\n        case 7:\n        case 8:\n        case 9:\n        case 11:\n        case 2:\n        case 4:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            if ((secondToken === 12 || secondToken === 13) && !needsLineBreak) {\n              replaceContent = cachedSpaces[1];\n            } else if (secondToken !== 5 && secondToken !== 17) {\n              hasError = true;\n            }\n          }\n          break;\n        case 16:\n          hasError = true;\n          break;\n      }\n      if (numberLineBreaks > 0 && (secondToken === 12 || secondToken === 13)) {\n        replaceContent = newLinesAndIndent();\n      }\n    }\n    if (secondToken === 17) {\n      if (options.keepLines && numberLineBreaks > 0) {\n        replaceContent = newLinesAndIndent();\n      } else {\n        replaceContent = options.insertFinalNewline ? eol : \"\";\n      }\n    }\n    const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n    addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n    firstToken = secondToken;\n  }\n  return editOperations;\n}\nfunction repeat(s, count) {\n  let result = \"\";\n  for (let i = 0; i < count; i++) {\n    result += s;\n  }\n  return result;\n}\nfunction computeIndentLevel(content, options) {\n  let i = 0;\n  let nChars = 0;\n  const tabSize = options.tabSize || 4;\n  while (i < content.length) {\n    let ch = content.charAt(i);\n    if (ch === cachedSpaces[1]) {\n      nChars++;\n    } else if (ch === \"\t\") {\n      nChars += tabSize;\n    } else {\n      break;\n    }\n    i++;\n  }\n  return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n  for (let i = 0; i < text.length; i++) {\n    const ch = text.charAt(i);\n    if (ch === \"\\r\") {\n      if (i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n        return \"\\r\\n\";\n      }\n      return \"\\r\";\n    } else if (ch === \"\\n\") {\n      return \"\\n\";\n    }\n  }\n  return options && options.eol || \"\\n\";\n}\nfunction isEOL(text, offset) {\n  return \"\\r\\n\".indexOf(text.charAt(offset)) !== -1;\n}\n\n// node_modules/jsonc-parser/lib/esm/impl/parser.js\nvar ParseOptions;\n(function (ParseOptions2) {\n  ParseOptions2.DEFAULT = {\n    allowTrailingComma: false\n  };\n})(ParseOptions || (ParseOptions = {}));\nfunction parse(text, errors = [], options = ParseOptions.DEFAULT) {\n  let currentProperty = null;\n  let currentParent = [];\n  const previousParents = [];\n  function onValue(value) {\n    if (Array.isArray(currentParent)) {\n      currentParent.push(value);\n    } else if (currentProperty !== null) {\n      currentParent[currentProperty] = value;\n    }\n  }\n  const visitor = {\n    onObjectBegin: () => {\n      const object = {};\n      onValue(object);\n      previousParents.push(currentParent);\n      currentParent = object;\n      currentProperty = null;\n    },\n    onObjectProperty: name => {\n      currentProperty = name;\n    },\n    onObjectEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onArrayBegin: () => {\n      const array = [];\n      onValue(array);\n      previousParents.push(currentParent);\n      currentParent = array;\n      currentProperty = null;\n    },\n    onArrayEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onLiteralValue: onValue,\n    onError: (error, offset, length) => {\n      errors.push({\n        error,\n        offset,\n        length\n      });\n    }\n  };\n  visit(text, visitor, options);\n  return currentParent[0];\n}\nfunction getNodePath(node) {\n  if (!node.parent || !node.parent.children) {\n    return [];\n  }\n  const path = getNodePath(node.parent);\n  if (node.parent.type === \"property\") {\n    const key = node.parent.children[0].value;\n    path.push(key);\n  } else if (node.parent.type === \"array\") {\n    const index = node.parent.children.indexOf(node);\n    if (index !== -1) {\n      path.push(index);\n    }\n  }\n  return path;\n}\nfunction getNodeValue(node) {\n  switch (node.type) {\n    case \"array\":\n      return node.children.map(getNodeValue);\n    case \"object\":\n      const obj = /* @__PURE__ */Object.create(null);\n      for (let prop of node.children) {\n        const valueNode = prop.children[1];\n        if (valueNode) {\n          obj[prop.children[0].value] = getNodeValue(valueNode);\n        }\n      }\n      return obj;\n    case \"null\":\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return node.value;\n    default:\n      return void 0;\n  }\n}\nfunction contains(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nfunction findNodeAtOffset(node, offset, includeRightBound = false) {\n  if (contains(node, offset, includeRightBound)) {\n    const children = node.children;\n    if (Array.isArray(children)) {\n      for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n        const item = findNodeAtOffset(children[i], offset, includeRightBound);\n        if (item) {\n          return item;\n        }\n      }\n    }\n    return node;\n  }\n  return void 0;\n}\nfunction visit(text, visitor, options = ParseOptions.DEFAULT) {\n  const _scanner = createScanner(text, false);\n  const _jsonPath = [];\n  function toNoArgVisit(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toNoArgVisitWithPath(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  function toOneArgVisit(visitFunction) {\n    return visitFunction ? arg => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toOneArgVisitWithPath(visitFunction) {\n    return visitFunction ? arg => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin),\n    onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty),\n    onObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n    onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin),\n    onArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n    onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue),\n    onSeparator = toOneArgVisit(visitor.onSeparator),\n    onComment = toNoArgVisit(visitor.onComment),\n    onError = toOneArgVisit(visitor.onError);\n  const disallowComments = options && options.disallowComments;\n  const allowTrailingComma = options && options.allowTrailingComma;\n  function scanNext() {\n    while (true) {\n      const token = _scanner.scan();\n      switch (_scanner.getTokenError()) {\n        case 4:\n          handleError(14\n          /* ParseErrorCode.InvalidUnicode */);\n          break;\n        case 5:\n          handleError(15\n          /* ParseErrorCode.InvalidEscapeCharacter */);\n          break;\n        case 3:\n          handleError(13\n          /* ParseErrorCode.UnexpectedEndOfNumber */);\n          break;\n        case 1:\n          if (!disallowComments) {\n            handleError(11\n            /* ParseErrorCode.UnexpectedEndOfComment */);\n          }\n          break;\n        case 2:\n          handleError(12\n          /* ParseErrorCode.UnexpectedEndOfString */);\n          break;\n        case 6:\n          handleError(16\n          /* ParseErrorCode.InvalidCharacter */);\n          break;\n      }\n      switch (token) {\n        case 12:\n        case 13:\n          if (disallowComments) {\n            handleError(10\n            /* ParseErrorCode.InvalidCommentToken */);\n          } else {\n            onComment();\n          }\n          break;\n        case 16:\n          handleError(1\n          /* ParseErrorCode.InvalidSymbol */);\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token;\n      }\n    }\n  }\n  function handleError(error, skipUntilAfter = [], skipUntil = []) {\n    onError(error);\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token = _scanner.getToken();\n      while (token !== 17) {\n        if (skipUntilAfter.indexOf(token) !== -1) {\n          scanNext();\n          break;\n        } else if (skipUntil.indexOf(token) !== -1) {\n          break;\n        }\n        token = scanNext();\n      }\n    }\n  }\n  function parseString(isValue) {\n    const value = _scanner.getTokenValue();\n    if (isValue) {\n      onLiteralValue(value);\n    } else {\n      onObjectProperty(value);\n      _jsonPath.push(value);\n    }\n    scanNext();\n    return true;\n  }\n  function parseLiteral() {\n    switch (_scanner.getToken()) {\n      case 11:\n        const tokenValue = _scanner.getTokenValue();\n        let value = Number(tokenValue);\n        if (isNaN(value)) {\n          handleError(2\n          /* ParseErrorCode.InvalidNumberFormat */);\n          value = 0;\n        }\n        onLiteralValue(value);\n        break;\n      case 7:\n        onLiteralValue(null);\n        break;\n      case 8:\n        onLiteralValue(true);\n        break;\n      case 9:\n        onLiteralValue(false);\n        break;\n      default:\n        return false;\n    }\n    scanNext();\n    return true;\n  }\n  function parseProperty() {\n    if (_scanner.getToken() !== 10) {\n      handleError(3, [], [2, 5\n      /* SyntaxKind.CommaToken */]);\n      return false;\n    }\n    parseString(false);\n    if (_scanner.getToken() === 6) {\n      onSeparator(\":\");\n      scanNext();\n      if (!parseValue()) {\n        handleError(4, [], [2, 5\n        /* SyntaxKind.CommaToken */]);\n      }\n    } else {\n      handleError(5, [], [2, 5\n      /* SyntaxKind.CommaToken */]);\n    }\n    _jsonPath.pop();\n    return true;\n  }\n  function parseObject() {\n    onObjectBegin();\n    scanNext();\n    let needsComma = false;\n    while (_scanner.getToken() !== 2 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 2 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (!parseProperty()) {\n        handleError(4, [], [2, 5\n        /* SyntaxKind.CommaToken */]);\n      }\n      needsComma = true;\n    }\n    onObjectEnd();\n    if (_scanner.getToken() !== 2) {\n      handleError(7, [2\n      /* SyntaxKind.CloseBraceToken */], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseArray() {\n    onArrayBegin();\n    scanNext();\n    let isFirstElement = true;\n    let needsComma = false;\n    while (_scanner.getToken() !== 4 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 4 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (isFirstElement) {\n        _jsonPath.push(0);\n        isFirstElement = false;\n      } else {\n        _jsonPath[_jsonPath.length - 1]++;\n      }\n      if (!parseValue()) {\n        handleError(4, [], [4, 5\n        /* SyntaxKind.CommaToken */]);\n      }\n      needsComma = true;\n    }\n    onArrayEnd();\n    if (!isFirstElement) {\n      _jsonPath.pop();\n    }\n    if (_scanner.getToken() !== 4) {\n      handleError(8, [4\n      /* SyntaxKind.CloseBracketToken */], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseValue() {\n    switch (_scanner.getToken()) {\n      case 3:\n        return parseArray();\n      case 1:\n        return parseObject();\n      case 10:\n        return parseString(true);\n      default:\n        return parseLiteral();\n    }\n  }\n  scanNext();\n  if (_scanner.getToken() === 17) {\n    if (options.allowEmptyContent) {\n      return true;\n    }\n    handleError(4, [], []);\n    return false;\n  }\n  if (!parseValue()) {\n    handleError(4, [], []);\n    return false;\n  }\n  if (_scanner.getToken() !== 17) {\n    handleError(9, [], []);\n  }\n  return true;\n}\n\n// node_modules/jsonc-parser/lib/esm/main.js\nvar createScanner2 = createScanner;\nvar ScanError;\n(function (ScanError2) {\n  ScanError2[ScanError2[\"None\"] = 0] = \"None\";\n  ScanError2[ScanError2[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n  ScanError2[ScanError2[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n  ScanError2[ScanError2[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n  ScanError2[ScanError2[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n  ScanError2[ScanError2[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n  ScanError2[ScanError2[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nvar SyntaxKind;\n(function (SyntaxKind2) {\n  SyntaxKind2[SyntaxKind2[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CommaToken\"] = 5] = \"CommaToken\";\n  SyntaxKind2[SyntaxKind2[\"ColonToken\"] = 6] = \"ColonToken\";\n  SyntaxKind2[SyntaxKind2[\"NullKeyword\"] = 7] = \"NullKeyword\";\n  SyntaxKind2[SyntaxKind2[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n  SyntaxKind2[SyntaxKind2[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n  SyntaxKind2[SyntaxKind2[\"StringLiteral\"] = 10] = \"StringLiteral\";\n  SyntaxKind2[SyntaxKind2[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n  SyntaxKind2[SyntaxKind2[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n  SyntaxKind2[SyntaxKind2[\"Trivia\"] = 15] = \"Trivia\";\n  SyntaxKind2[SyntaxKind2[\"Unknown\"] = 16] = \"Unknown\";\n  SyntaxKind2[SyntaxKind2[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\nvar parse2 = parse;\nvar findNodeAtOffset2 = findNodeAtOffset;\nvar getNodePath2 = getNodePath;\nvar getNodeValue2 = getNodeValue;\nvar ParseErrorCode;\n(function (ParseErrorCode2) {\n  ParseErrorCode2[ParseErrorCode2[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n  ParseErrorCode2[ParseErrorCode2[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ValueExpected\"] = 4] = \"ValueExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ColonExpected\"] = 5] = \"ColonExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CommaExpected\"] = 6] = \"CommaExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nfunction format2(documentText, range, options) {\n  return format(documentText, range, options);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/objects.js\nfunction equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === void 0 || other === null || other === void 0) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i, key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction isNumber(val) {\n  return typeof val === \"number\";\n}\nfunction isDefined(val) {\n  return typeof val !== \"undefined\";\n}\nfunction isBoolean(val) {\n  return typeof val === \"boolean\";\n}\nfunction isString(val) {\n  return typeof val === \"string\";\n}\nfunction isObject(val) {\n  return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/strings.js\nfunction startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (let i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction endsWith(haystack, needle) {\n  const diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nfunction extendedRegExp(pattern) {\n  let flags = \"\";\n  if (startsWith(pattern, \"(?i)\")) {\n    pattern = pattern.substring(4);\n    flags = \"i\";\n  }\n  try {\n    return new RegExp(pattern, flags + \"u\");\n  } catch (e) {\n    try {\n      return new RegExp(pattern, flags);\n    } catch (e2) {\n      return void 0;\n    }\n  }\n}\nfunction stringLength(str) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    count++;\n    const code = str.charCodeAt(i);\n    if (55296 <= code && code <= 56319) {\n      i++;\n    }\n  }\n  return count;\n}\n\n// node_modules/vscode-languageserver-types/lib/esm/main.js\nvar DocumentUri;\n(function (DocumentUri2) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  DocumentUri2.is = is;\n})(DocumentUri || (DocumentUri = {}));\nvar URI;\n(function (URI3) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  URI3.is = is;\n})(URI || (URI = {}));\nvar integer;\n(function (integer2) {\n  integer2.MIN_VALUE = -2147483648;\n  integer2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\n  }\n  integer2.is = is;\n})(integer || (integer = {}));\nvar uinteger;\n(function (uinteger2) {\n  uinteger2.MIN_VALUE = 0;\n  uinteger2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\n  }\n  uinteger2.is = is;\n})(uinteger || (uinteger = {}));\nvar Position;\n(function (Position2) {\n  function create(line, character) {\n    if (line === Number.MAX_VALUE) {\n      line = uinteger.MAX_VALUE;\n    }\n    if (character === Number.MAX_VALUE) {\n      character = uinteger.MAX_VALUE;\n    }\n    return {\n      line,\n      character\n    };\n  }\n  Position2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n  }\n  Position2.is = is;\n})(Position || (Position = {}));\nvar Range;\n(function (Range2) {\n  function create(one, two, three, four) {\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n    }\n  }\n  Range2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n  Range2.is = is;\n})(Range || (Range = {}));\nvar Location;\n(function (Location2) {\n  function create(uri, range) {\n    return {\n      uri,\n      range\n    };\n  }\n  Location2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n  Location2.is = is;\n})(Location || (Location = {}));\nvar LocationLink;\n(function (LocationLink2) {\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n    return {\n      targetUri,\n      targetRange,\n      targetSelectionRange,\n      originSelectionRange\n    };\n  }\n  LocationLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n  }\n  LocationLink2.is = is;\n})(LocationLink || (LocationLink = {}));\nvar Color;\n(function (Color2) {\n  function create(red, green, blue, alpha) {\n    return {\n      red,\n      green,\n      blue,\n      alpha\n    };\n  }\n  Color2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\n  }\n  Color2.is = is;\n})(Color || (Color = {}));\nvar ColorInformation;\n(function (ColorInformation2) {\n  function create(range, color) {\n    return {\n      range,\n      color\n    };\n  }\n  ColorInformation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n  }\n  ColorInformation2.is = is;\n})(ColorInformation || (ColorInformation = {}));\nvar ColorPresentation;\n(function (ColorPresentation2) {\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label,\n      textEdit,\n      additionalTextEdits\n    };\n  }\n  ColorPresentation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n  ColorPresentation2.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\nvar FoldingRangeKind;\n(function (FoldingRangeKind2) {\n  FoldingRangeKind2.Comment = \"comment\";\n  FoldingRangeKind2.Imports = \"imports\";\n  FoldingRangeKind2.Region = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\nvar FoldingRange;\n(function (FoldingRange2) {\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n    const result = {\n      startLine,\n      endLine\n    };\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n    if (Is.defined(collapsedText)) {\n      result.collapsedText = collapsedText;\n    }\n    return result;\n  }\n  FoldingRange2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n  FoldingRange2.is = is;\n})(FoldingRange || (FoldingRange = {}));\nvar DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation2) {\n  function create(location, message) {\n    return {\n      location,\n      message\n    };\n  }\n  DiagnosticRelatedInformation2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n  DiagnosticRelatedInformation2.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity2) {\n  DiagnosticSeverity2.Error = 1;\n  DiagnosticSeverity2.Warning = 2;\n  DiagnosticSeverity2.Information = 3;\n  DiagnosticSeverity2.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\nvar DiagnosticTag;\n(function (DiagnosticTag2) {\n  DiagnosticTag2.Unnecessary = 1;\n  DiagnosticTag2.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\nvar CodeDescription;\n(function (CodeDescription2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\n  }\n  CodeDescription2.is = is;\n})(CodeDescription || (CodeDescription = {}));\nvar Diagnostic;\n(function (Diagnostic2) {\n  function create(range, message, severity, code, source, relatedInformation) {\n    let result = {\n      range,\n      message\n    };\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n    return result;\n  }\n  Diagnostic2.create = create;\n  function is(value) {\n    var _a;\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n  Diagnostic2.is = is;\n})(Diagnostic || (Diagnostic = {}));\nvar Command;\n(function (Command2) {\n  function create(title, command, ...args) {\n    let result = {\n      title,\n      command\n    };\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n    return result;\n  }\n  Command2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n  Command2.is = is;\n})(Command || (Command = {}));\nvar TextEdit;\n(function (TextEdit2) {\n  function replace(range, newText) {\n    return {\n      range,\n      newText\n    };\n  }\n  TextEdit2.replace = replace;\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText\n    };\n  }\n  TextEdit2.insert = insert;\n  function del(range) {\n    return {\n      range,\n      newText: \"\"\n    };\n  }\n  TextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n  TextEdit2.is = is;\n})(TextEdit || (TextEdit = {}));\nvar ChangeAnnotation;\n(function (ChangeAnnotation2) {\n  function create(label, needsConfirmation, description) {\n    const result = {\n      label\n    };\n    if (needsConfirmation !== void 0) {\n      result.needsConfirmation = needsConfirmation;\n    }\n    if (description !== void 0) {\n      result.description = description;\n    }\n    return result;\n  }\n  ChangeAnnotation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  ChangeAnnotation2.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nvar ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier2) {\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate);\n  }\n  ChangeAnnotationIdentifier2.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nvar AnnotatedTextEdit;\n(function (AnnotatedTextEdit2) {\n  function replace(range, newText, annotation) {\n    return {\n      range,\n      newText,\n      annotationId: annotation\n    };\n  }\n  AnnotatedTextEdit2.replace = replace;\n  function insert(position, newText, annotation) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText,\n      annotationId: annotation\n    };\n  }\n  AnnotatedTextEdit2.insert = insert;\n  function del(range, annotation) {\n    return {\n      range,\n      newText: \"\",\n      annotationId: annotation\n    };\n  }\n  AnnotatedTextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  AnnotatedTextEdit2.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\nvar TextDocumentEdit;\n(function (TextDocumentEdit2) {\n  function create(textDocument, edits) {\n    return {\n      textDocument,\n      edits\n    };\n  }\n  TextDocumentEdit2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n  TextDocumentEdit2.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function (CreateFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"create\",\n      uri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  CreateFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  CreateFile2.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function (RenameFile2) {\n  function create(oldUri, newUri, options, annotation) {\n    let result = {\n      kind: \"rename\",\n      oldUri,\n      newUri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  RenameFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  RenameFile2.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function (DeleteFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"delete\",\n      uri\n    };\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  DeleteFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  DeleteFile2.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function (WorkspaceEdit2) {\n  function is(value) {\n    let candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every(change => {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n  WorkspaceEdit2.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier2) {\n  function create(uri) {\n    return {\n      uri\n    };\n  }\n  TextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n  TextDocumentIdentifier2.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return {\n      uri,\n      version\n    };\n  }\n  VersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n  }\n  VersionedTextDocumentIdentifier2.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\nvar OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return {\n      uri,\n      version\n    };\n  }\n  OptionalVersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n  }\n  OptionalVersionedTextDocumentIdentifier2.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\nvar TextDocumentItem;\n(function (TextDocumentItem2) {\n  function create(uri, languageId, version, text) {\n    return {\n      uri,\n      languageId,\n      version,\n      text\n    };\n  }\n  TextDocumentItem2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n  }\n  TextDocumentItem2.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\nvar MarkupKind;\n(function (MarkupKind2) {\n  MarkupKind2.PlainText = \"plaintext\";\n  MarkupKind2.Markdown = \"markdown\";\n  function is(value) {\n    const candidate = value;\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\n  }\n  MarkupKind2.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function (MarkupContent2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n  MarkupContent2.is = is;\n})(MarkupContent || (MarkupContent = {}));\nvar CompletionItemKind;\n(function (CompletionItemKind2) {\n  CompletionItemKind2.Text = 1;\n  CompletionItemKind2.Method = 2;\n  CompletionItemKind2.Function = 3;\n  CompletionItemKind2.Constructor = 4;\n  CompletionItemKind2.Field = 5;\n  CompletionItemKind2.Variable = 6;\n  CompletionItemKind2.Class = 7;\n  CompletionItemKind2.Interface = 8;\n  CompletionItemKind2.Module = 9;\n  CompletionItemKind2.Property = 10;\n  CompletionItemKind2.Unit = 11;\n  CompletionItemKind2.Value = 12;\n  CompletionItemKind2.Enum = 13;\n  CompletionItemKind2.Keyword = 14;\n  CompletionItemKind2.Snippet = 15;\n  CompletionItemKind2.Color = 16;\n  CompletionItemKind2.File = 17;\n  CompletionItemKind2.Reference = 18;\n  CompletionItemKind2.Folder = 19;\n  CompletionItemKind2.EnumMember = 20;\n  CompletionItemKind2.Constant = 21;\n  CompletionItemKind2.Struct = 22;\n  CompletionItemKind2.Event = 23;\n  CompletionItemKind2.Operator = 24;\n  CompletionItemKind2.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar InsertTextFormat;\n(function (InsertTextFormat2) {\n  InsertTextFormat2.PlainText = 1;\n  InsertTextFormat2.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\nvar CompletionItemTag;\n(function (CompletionItemTag2) {\n  CompletionItemTag2.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar InsertReplaceEdit;\n(function (InsertReplaceEdit2) {\n  function create(newText, insert, replace) {\n    return {\n      newText,\n      insert,\n      replace\n    };\n  }\n  InsertReplaceEdit2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n  }\n  InsertReplaceEdit2.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\nvar InsertTextMode;\n(function (InsertTextMode2) {\n  InsertTextMode2.asIs = 1;\n  InsertTextMode2.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nvar CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails2) {\n  function is(value) {\n    const candidate = value;\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  CompletionItemLabelDetails2.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\nvar CompletionItem;\n(function (CompletionItem2) {\n  function create(label) {\n    return {\n      label\n    };\n  }\n  CompletionItem2.create = create;\n})(CompletionItem || (CompletionItem = {}));\nvar CompletionList;\n(function (CompletionList2) {\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n  CompletionList2.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString2) {\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  MarkedString2.fromPlainText = fromPlainText;\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  MarkedString2.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function (Hover2) {\n  function is(value) {\n    let candidate = value;\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n  Hover2.is = is;\n})(Hover || (Hover = {}));\nvar ParameterInformation;\n(function (ParameterInformation2) {\n  function create(label, documentation) {\n    return documentation ? {\n      label,\n      documentation\n    } : {\n      label\n    };\n  }\n  ParameterInformation2.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\nvar SignatureInformation;\n(function (SignatureInformation2) {\n  function create(label, documentation, ...parameters) {\n    let result = {\n      label\n    };\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n    return result;\n  }\n  SignatureInformation2.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind2) {\n  DocumentHighlightKind2.Text = 1;\n  DocumentHighlightKind2.Read = 2;\n  DocumentHighlightKind2.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nvar DocumentHighlight;\n(function (DocumentHighlight2) {\n  function create(range, kind) {\n    let result = {\n      range\n    };\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  DocumentHighlight2.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\nvar SymbolKind;\n(function (SymbolKind2) {\n  SymbolKind2.File = 1;\n  SymbolKind2.Module = 2;\n  SymbolKind2.Namespace = 3;\n  SymbolKind2.Package = 4;\n  SymbolKind2.Class = 5;\n  SymbolKind2.Method = 6;\n  SymbolKind2.Property = 7;\n  SymbolKind2.Field = 8;\n  SymbolKind2.Constructor = 9;\n  SymbolKind2.Enum = 10;\n  SymbolKind2.Interface = 11;\n  SymbolKind2.Function = 12;\n  SymbolKind2.Variable = 13;\n  SymbolKind2.Constant = 14;\n  SymbolKind2.String = 15;\n  SymbolKind2.Number = 16;\n  SymbolKind2.Boolean = 17;\n  SymbolKind2.Array = 18;\n  SymbolKind2.Object = 19;\n  SymbolKind2.Key = 20;\n  SymbolKind2.Null = 21;\n  SymbolKind2.EnumMember = 22;\n  SymbolKind2.Struct = 23;\n  SymbolKind2.Event = 24;\n  SymbolKind2.Operator = 25;\n  SymbolKind2.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolTag;\n(function (SymbolTag2) {\n  SymbolTag2.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function (SymbolInformation2) {\n  function create(name, kind, range, uri, containerName) {\n    let result = {\n      name,\n      kind,\n      location: {\n        uri,\n        range\n      }\n    };\n    if (containerName) {\n      result.containerName = containerName;\n    }\n    return result;\n  }\n  SymbolInformation2.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar WorkspaceSymbol;\n(function (WorkspaceSymbol2) {\n  function create(name, kind, uri, range) {\n    return range !== void 0 ? {\n      name,\n      kind,\n      location: {\n        uri,\n        range\n      }\n    } : {\n      name,\n      kind,\n      location: {\n        uri\n      }\n    };\n  }\n  WorkspaceSymbol2.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nvar DocumentSymbol;\n(function (DocumentSymbol2) {\n  function create(name, detail, kind, range, selectionRange, children) {\n    let result = {\n      name,\n      detail,\n      kind,\n      range,\n      selectionRange\n    };\n    if (children !== void 0) {\n      result.children = children;\n    }\n    return result;\n  }\n  DocumentSymbol2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\n  }\n  DocumentSymbol2.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\nvar CodeActionKind;\n(function (CodeActionKind2) {\n  CodeActionKind2.Empty = \"\";\n  CodeActionKind2.QuickFix = \"quickfix\";\n  CodeActionKind2.Refactor = \"refactor\";\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\n  CodeActionKind2.Source = \"source\";\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\n})(CodeActionKind || (CodeActionKind = {}));\nvar CodeActionTriggerKind;\n(function (CodeActionTriggerKind2) {\n  CodeActionTriggerKind2.Invoked = 1;\n  CodeActionTriggerKind2.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\nvar CodeActionContext;\n(function (CodeActionContext2) {\n  function create(diagnostics, only, triggerKind) {\n    let result = {\n      diagnostics\n    };\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n    if (triggerKind !== void 0 && triggerKind !== null) {\n      result.triggerKind = triggerKind;\n    }\n    return result;\n  }\n  CodeActionContext2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n  }\n  CodeActionContext2.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function (CodeAction2) {\n  function create(title, kindOrCommandOrEdit, kind) {\n    let result = {\n      title\n    };\n    let checkKind = true;\n    if (typeof kindOrCommandOrEdit === \"string\") {\n      checkKind = false;\n      result.kind = kindOrCommandOrEdit;\n    } else if (Command.is(kindOrCommandOrEdit)) {\n      result.command = kindOrCommandOrEdit;\n    } else {\n      result.edit = kindOrCommandOrEdit;\n    }\n    if (checkKind && kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  CodeAction2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n  CodeAction2.is = is;\n})(CodeAction || (CodeAction = {}));\nvar CodeLens;\n(function (CodeLens2) {\n  function create(range, data) {\n    let result = {\n      range\n    };\n    if (Is.defined(data)) {\n      result.data = data;\n    }\n    return result;\n  }\n  CodeLens2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n  CodeLens2.is = is;\n})(CodeLens || (CodeLens = {}));\nvar FormattingOptions;\n(function (FormattingOptions2) {\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize,\n      insertSpaces\n    };\n  }\n  FormattingOptions2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n  FormattingOptions2.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\nvar DocumentLink;\n(function (DocumentLink2) {\n  function create(range, target, data) {\n    return {\n      range,\n      target,\n      data\n    };\n  }\n  DocumentLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n  DocumentLink2.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar SelectionRange;\n(function (SelectionRange2) {\n  function create(range, parent) {\n    return {\n      range,\n      parent\n    };\n  }\n  SelectionRange2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\n  }\n  SelectionRange2.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar SemanticTokenTypes;\n(function (SemanticTokenTypes2) {\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\n  SemanticTokenTypes2[\"type\"] = \"type\";\n  SemanticTokenTypes2[\"class\"] = \"class\";\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\n  SemanticTokenTypes2[\"property\"] = \"property\";\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\n  SemanticTokenTypes2[\"event\"] = \"event\";\n  SemanticTokenTypes2[\"function\"] = \"function\";\n  SemanticTokenTypes2[\"method\"] = \"method\";\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\n  SemanticTokenTypes2[\"string\"] = \"string\";\n  SemanticTokenTypes2[\"number\"] = \"number\";\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\nvar SemanticTokenModifiers;\n(function (SemanticTokenModifiers2) {\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\n  SemanticTokenModifiers2[\"static\"] = \"static\";\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\n  SemanticTokenModifiers2[\"async\"] = \"async\";\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\nvar SemanticTokens;\n(function (SemanticTokens2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\n  }\n  SemanticTokens2.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\nvar InlineValueText;\n(function (InlineValueText2) {\n  function create(range, text) {\n    return {\n      range,\n      text\n    };\n  }\n  InlineValueText2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n  }\n  InlineValueText2.is = is;\n})(InlineValueText || (InlineValueText = {}));\nvar InlineValueVariableLookup;\n(function (InlineValueVariableLookup2) {\n  function create(range, variableName, caseSensitiveLookup) {\n    return {\n      range,\n      variableName,\n      caseSensitiveLookup\n    };\n  }\n  InlineValueVariableLookup2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\n  }\n  InlineValueVariableLookup2.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\nvar InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression2) {\n  function create(range, expression) {\n    return {\n      range,\n      expression\n    };\n  }\n  InlineValueEvaluatableExpression2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\n  }\n  InlineValueEvaluatableExpression2.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\nvar InlineValueContext;\n(function (InlineValueContext2) {\n  function create(frameId, stoppedLocation) {\n    return {\n      frameId,\n      stoppedLocation\n    };\n  }\n  InlineValueContext2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\n  }\n  InlineValueContext2.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\nvar InlayHintKind;\n(function (InlayHintKind2) {\n  InlayHintKind2.Type = 1;\n  InlayHintKind2.Parameter = 2;\n  function is(value) {\n    return value === 1 || value === 2;\n  }\n  InlayHintKind2.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nvar InlayHintLabelPart;\n(function (InlayHintLabelPart2) {\n  function create(value) {\n    return {\n      value\n    };\n  }\n  InlayHintLabelPart2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\n  }\n  InlayHintLabelPart2.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nvar InlayHint;\n(function (InlayHint2) {\n  function create(position, label, kind) {\n    const result = {\n      position,\n      label\n    };\n    if (kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  InlayHint2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\n  }\n  InlayHint2.is = is;\n})(InlayHint || (InlayHint = {}));\nvar StringValue;\n(function (StringValue2) {\n  function createSnippet(value) {\n    return {\n      kind: \"snippet\",\n      value\n    };\n  }\n  StringValue2.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nvar InlineCompletionItem;\n(function (InlineCompletionItem2) {\n  function create(insertText, filterText, range, command) {\n    return {\n      insertText,\n      filterText,\n      range,\n      command\n    };\n  }\n  InlineCompletionItem2.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nvar InlineCompletionList;\n(function (InlineCompletionList2) {\n  function create(items) {\n    return {\n      items\n    };\n  }\n  InlineCompletionList2.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\nvar InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind2) {\n  InlineCompletionTriggerKind2.Invoked = 0;\n  InlineCompletionTriggerKind2.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nvar SelectedCompletionInfo;\n(function (SelectedCompletionInfo2) {\n  function create(range, text) {\n    return {\n      range,\n      text\n    };\n  }\n  SelectedCompletionInfo2.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nvar InlineCompletionContext;\n(function (InlineCompletionContext2) {\n  function create(triggerKind, selectedCompletionInfo) {\n    return {\n      triggerKind,\n      selectedCompletionInfo\n    };\n  }\n  InlineCompletionContext2.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nvar WorkspaceFolder;\n(function (WorkspaceFolder2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n  }\n  WorkspaceFolder2.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nvar TextDocument;\n(function (TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n  TextDocument3.is = is;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort2(edits, (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n      let e = sortedEdits[i];\n      let startOffset = document.offsetAt(e.range.start);\n      let endOffset = document.offsetAt(e.range.end);\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error(\"Overlapping edit\");\n      }\n      lastModifiedOffset = startOffset;\n    }\n    return text;\n  }\n  TextDocument3.applyEdits = applyEdits;\n  function mergeSort2(data, compare) {\n    if (data.length <= 1) {\n      return data;\n    }\n    const p = data.length / 2 | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort2(left, compare);\n    mergeSort2(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n      let ret = compare(left[leftIdx], right[rightIdx]);\n      if (ret <= 0) {\n        data[i++] = left[leftIdx++];\n      } else {\n        data[i++] = right[rightIdx++];\n      }\n    }\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\nvar FullTextDocument = class {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      let start = this.offsetAt(range.start);\n      let end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = void 0;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      let lineOffsets = [];\n      let text = this._content;\n      let isLineStart = true;\n      for (let i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n        let ch = text.charAt(i);\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n          i++;\n        }\n      }\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n      this._lineOffsets = lineOffsets;\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0,\n      high = lineOffsets.length;\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n};\nvar Is;\n(function (Is2) {\n  const toString = Object.prototype.toString;\n  function defined(value) {\n    return typeof value !== \"undefined\";\n  }\n  Is2.defined = defined;\n  function undefined2(value) {\n    return typeof value === \"undefined\";\n  }\n  Is2.undefined = undefined2;\n  function boolean(value) {\n    return value === true || value === false;\n  }\n  Is2.boolean = boolean;\n  function string(value) {\n    return toString.call(value) === \"[object String]\";\n  }\n  Is2.string = string;\n  function number(value) {\n    return toString.call(value) === \"[object Number]\";\n  }\n  Is2.number = number;\n  function numberRange(value, min, max) {\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\n  }\n  Is2.numberRange = numberRange;\n  function integer2(value) {\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\n  }\n  Is2.integer = integer2;\n  function uinteger2(value) {\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\n  }\n  Is2.uinteger = uinteger2;\n  function func(value) {\n    return toString.call(value) === \"[object Function]\";\n  }\n  Is2.func = func;\n  function objectLiteral(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  Is2.objectLiteral = objectLiteral;\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n  Is2.typedArray = typedArray;\n})(Is || (Is = {}));\n\n// node_modules/vscode-languageserver-textdocument/lib/esm/main.js\nvar FullTextDocument2 = class _FullTextDocument {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      const start = this.offsetAt(range.start);\n      const end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(changes, version) {\n    for (let change of changes) {\n      if (_FullTextDocument.isIncremental(change)) {\n        const range = getWellformedRange(change.range);\n        const startOffset = this.offsetAt(range.start);\n        const endOffset = this.offsetAt(range.end);\n        this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n        const startLine = Math.max(range.start.line, 0);\n        const endLine = Math.max(range.end.line, 0);\n        let lineOffsets = this._lineOffsets;\n        const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n        if (endLine - startLine === addedLineOffsets.length) {\n          for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n            lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n          }\n        } else {\n          if (addedLineOffsets.length < 1e4) {\n            lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n          } else {\n            this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n          }\n        }\n        const diff = change.text.length - (endOffset - startOffset);\n        if (diff !== 0) {\n          for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n            lineOffsets[i] = lineOffsets[i] + diff;\n          }\n        }\n      } else if (_FullTextDocument.isFull(change)) {\n        this._content = change.text;\n        this._lineOffsets = void 0;\n      } else {\n        throw new Error(\"Unknown change event received\");\n      }\n    }\n    this._version = version;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      this._lineOffsets = computeLineOffsets(this._content, true);\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0,\n      high = lineOffsets.length;\n    if (high === 0) {\n      return {\n        line: 0,\n        character: offset\n      };\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return {\n      line,\n      character: offset - lineOffsets[line]\n    };\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n  static isIncremental(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range !== void 0 && (candidate.rangeLength === void 0 || typeof candidate.rangeLength === \"number\");\n  }\n  static isFull(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range === void 0 && candidate.rangeLength === void 0;\n  }\n};\nvar TextDocument2;\n(function (TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument2(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function update(document, changes, version) {\n    if (document instanceof FullTextDocument2) {\n      document.update(changes, version);\n      return document;\n    } else {\n      throw new Error(\"TextDocument.update: document must be created by TextDocument.create\");\n    }\n  }\n  TextDocument3.update = update;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = 0;\n    const spans = [];\n    for (const e of sortedEdits) {\n      let startOffset = document.offsetAt(e.range.start);\n      if (startOffset < lastModifiedOffset) {\n        throw new Error(\"Overlapping edit\");\n      } else if (startOffset > lastModifiedOffset) {\n        spans.push(text.substring(lastModifiedOffset, startOffset));\n      }\n      if (e.newText.length) {\n        spans.push(e.newText);\n      }\n      lastModifiedOffset = document.offsetAt(e.range.end);\n    }\n    spans.push(text.substr(lastModifiedOffset));\n    return spans.join(\"\");\n  }\n  TextDocument3.applyEdits = applyEdits;\n})(TextDocument2 || (TextDocument2 = {}));\nfunction mergeSort(data, compare) {\n  if (data.length <= 1) {\n    return data;\n  }\n  const p = data.length / 2 | 0;\n  const left = data.slice(0, p);\n  const right = data.slice(p);\n  mergeSort(left, compare);\n  mergeSort(right, compare);\n  let leftIdx = 0;\n  let rightIdx = 0;\n  let i = 0;\n  while (leftIdx < left.length && rightIdx < right.length) {\n    let ret = compare(left[leftIdx], right[rightIdx]);\n    if (ret <= 0) {\n      data[i++] = left[leftIdx++];\n    } else {\n      data[i++] = right[rightIdx++];\n    }\n  }\n  while (leftIdx < left.length) {\n    data[i++] = left[leftIdx++];\n  }\n  while (rightIdx < right.length) {\n    data[i++] = right[rightIdx++];\n  }\n  return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n  const result = isAtLineStart ? [textOffset] : [];\n  for (let i = 0; i < text.length; i++) {\n    let ch = text.charCodeAt(i);\n    if (ch === 13 || ch === 10) {\n      if (ch === 13 && i + 1 < text.length && text.charCodeAt(i + 1) === 10) {\n        i++;\n      }\n      result.push(textOffset + i + 1);\n    }\n  }\n  return result;\n}\nfunction getWellformedRange(range) {\n  const start = range.start;\n  const end = range.end;\n  if (start.line > end.line || start.line === end.line && start.character > end.character) {\n    return {\n      start: end,\n      end: start\n    };\n  }\n  return range;\n}\nfunction getWellformedEdit(textEdit) {\n  const range = getWellformedRange(textEdit.range);\n  if (range !== textEdit.range) {\n    return {\n      newText: textEdit.newText,\n      range\n    };\n  }\n  return textEdit;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js\nvar ErrorCode;\n(function (ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"Undefined\"] = 0] = \"Undefined\";\n  ErrorCode2[ErrorCode2[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n  ErrorCode2[ErrorCode2[\"Deprecated\"] = 2] = \"Deprecated\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n  ErrorCode2[ErrorCode2[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n  ErrorCode2[ErrorCode2[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n  ErrorCode2[ErrorCode2[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n  ErrorCode2[ErrorCode2[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n  ErrorCode2[ErrorCode2[\"CommaExpected\"] = 514] = \"CommaExpected\";\n  ErrorCode2[ErrorCode2[\"ColonExpected\"] = 515] = \"ColonExpected\";\n  ErrorCode2[ErrorCode2[\"ValueExpected\"] = 516] = \"ValueExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n  ErrorCode2[ErrorCode2[\"TrailingComma\"] = 519] = \"TrailingComma\";\n  ErrorCode2[ErrorCode2[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n  ErrorCode2[ErrorCode2[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n  ErrorCode2[ErrorCode2[\"PropertyKeysMustBeDoublequoted\"] = 528] = \"PropertyKeysMustBeDoublequoted\";\n  ErrorCode2[ErrorCode2[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n  ErrorCode2[ErrorCode2[\"SchemaUnsupportedFeature\"] = 769] = \"SchemaUnsupportedFeature\";\n})(ErrorCode || (ErrorCode = {}));\nvar SchemaDraft;\n(function (SchemaDraft2) {\n  SchemaDraft2[SchemaDraft2[\"v3\"] = 3] = \"v3\";\n  SchemaDraft2[SchemaDraft2[\"v4\"] = 4] = \"v4\";\n  SchemaDraft2[SchemaDraft2[\"v6\"] = 6] = \"v6\";\n  SchemaDraft2[SchemaDraft2[\"v7\"] = 7] = \"v7\";\n  SchemaDraft2[SchemaDraft2[\"v2019_09\"] = 19] = \"v2019_09\";\n  SchemaDraft2[SchemaDraft2[\"v2020_12\"] = 20] = \"v2020_12\";\n})(SchemaDraft || (SchemaDraft = {}));\nvar ClientCapabilities;\n(function (ClientCapabilities2) {\n  ClientCapabilities2.LATEST = {\n    textDocument: {\n      completion: {\n        completionItem: {\n          documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n          commitCharactersSupport: true,\n          labelDetailsSupport: true\n        }\n      }\n    }\n  };\n})(ClientCapabilities || (ClientCapabilities = {}));\n\n// node_modules/@vscode/l10n/dist/browser.js\nvar bundle;\nfunction t(...args) {\n  const firstArg = args[0];\n  let key;\n  let message;\n  let formatArgs;\n  if (typeof firstArg === \"string\") {\n    key = firstArg;\n    message = firstArg;\n    args.splice(0, 1);\n    formatArgs = !args || typeof args[0] !== \"object\" ? args : args[0];\n  } else if (firstArg instanceof Array) {\n    const replacements = args.slice(1);\n    if (firstArg.length !== replacements.length + 1) {\n      throw new Error(\"expected a string as the first argument to l10n.t\");\n    }\n    let str = firstArg[0];\n    for (let i = 1; i < firstArg.length; i++) {\n      str += `{${i - 1}}` + firstArg[i];\n    }\n    return t(str, ...replacements);\n  } else {\n    message = firstArg.message;\n    key = message;\n    if (firstArg.comment && firstArg.comment.length > 0) {\n      key += `/${Array.isArray(firstArg.comment) ? firstArg.comment.join(\"\") : firstArg.comment}`;\n    }\n    formatArgs = firstArg.args ?? {};\n  }\n  const messageFromBundle = bundle?.[key];\n  if (!messageFromBundle) {\n    return format3(message, formatArgs);\n  }\n  if (typeof messageFromBundle === \"string\") {\n    return format3(messageFromBundle, formatArgs);\n  }\n  if (messageFromBundle.comment) {\n    return format3(messageFromBundle.message, formatArgs);\n  }\n  return format3(message, formatArgs);\n}\nvar _format2Regexp = /{([^}]+)}/g;\nfunction format3(template, values) {\n  if (Object.keys(values).length === 0) {\n    return template;\n  }\n  return template.replace(_format2Regexp, (match, group) => values[group] ?? match);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js\nvar formats = {\n  \"color-hex\": {\n    errorMessage: t(\"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.\"),\n    pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/\n  },\n  \"date-time\": {\n    errorMessage: t(\"String is not a RFC3339 date-time.\"),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  \"date\": {\n    errorMessage: t(\"String is not a RFC3339 date.\"),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i\n  },\n  \"time\": {\n    errorMessage: t(\"String is not a RFC3339 time.\"),\n    pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  \"email\": {\n    errorMessage: t(\"String is not an e-mail address.\"),\n    pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}))$/\n  },\n  \"hostname\": {\n    errorMessage: t(\"String is not a hostname.\"),\n    pattern: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i\n  },\n  \"ipv4\": {\n    errorMessage: t(\"String is not an IPv4 address.\"),\n    pattern: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/\n  },\n  \"ipv6\": {\n    errorMessage: t(\"String is not an IPv6 address.\"),\n    pattern: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i\n  }\n};\nvar ASTNodeImpl = class {\n  constructor(parent, offset, length = 0) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n  get children() {\n    return [];\n  }\n  toString() {\n    return \"type: \" + this.type + \" (\" + this.offset + \"/\" + this.length + \")\" + (this.parent ? \" parent: {\" + this.parent.toString() + \"}\" : \"\");\n  }\n};\nvar NullASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"null\";\n    this.value = null;\n  }\n};\nvar BooleanASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, boolValue, offset) {\n    super(parent, offset);\n    this.type = \"boolean\";\n    this.value = boolValue;\n  }\n};\nvar ArrayASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"array\";\n    this.items = [];\n  }\n  get children() {\n    return this.items;\n  }\n};\nvar NumberASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"number\";\n    this.isInteger = true;\n    this.value = Number.NaN;\n  }\n};\nvar StringASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, length) {\n    super(parent, offset, length);\n    this.type = \"string\";\n    this.value = \"\";\n  }\n};\nvar PropertyASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, keyNode) {\n    super(parent, offset);\n    this.type = \"property\";\n    this.colonOffset = -1;\n    this.keyNode = keyNode;\n  }\n  get children() {\n    return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n  }\n};\nvar ObjectASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"object\";\n    this.properties = [];\n  }\n  get children() {\n    return this.properties;\n  }\n};\nfunction asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : {\n      \"not\": {}\n    };\n  }\n  return schema;\n}\nvar EnumMatch;\n(function (EnumMatch2) {\n  EnumMatch2[EnumMatch2[\"Key\"] = 0] = \"Key\";\n  EnumMatch2[EnumMatch2[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar schemaDraftFromId = {\n  \"http://json-schema.org/draft-03/schema#\": SchemaDraft.v3,\n  \"http://json-schema.org/draft-04/schema#\": SchemaDraft.v4,\n  \"http://json-schema.org/draft-06/schema#\": SchemaDraft.v6,\n  \"http://json-schema.org/draft-07/schema#\": SchemaDraft.v7,\n  \"https://json-schema.org/draft/2019-09/schema\": SchemaDraft.v2019_09,\n  \"https://json-schema.org/draft/2020-12/schema\": SchemaDraft.v2020_12\n};\nvar EvaluationContext = class {\n  constructor(schemaDraft) {\n    this.schemaDraft = schemaDraft;\n  }\n};\nvar SchemaCollector = class _SchemaCollector {\n  constructor(focusOffset = -1, exclude) {\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n  add(schema) {\n    this.schemas.push(schema);\n  }\n  merge(other) {\n    Array.prototype.push.apply(this.schemas, other.schemas);\n  }\n  include(node) {\n    return (this.focusOffset === -1 || contains2(node, this.focusOffset)) && node !== this.exclude;\n  }\n  newSub() {\n    return new _SchemaCollector(-1, this.exclude);\n  }\n};\nvar NoOpSchemaCollector = class {\n  constructor() {}\n  get schemas() {\n    return [];\n  }\n  add(_schema) {}\n  merge(_other) {}\n  include(_node) {\n    return true;\n  }\n  newSub() {\n    return this;\n  }\n};\nNoOpSchemaCollector.instance = new NoOpSchemaCollector();\nvar ValidationResult = class {\n  constructor() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.processedProperties = /* @__PURE__ */new Set();\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = void 0;\n  }\n  hasProblems() {\n    return !!this.problems.length;\n  }\n  merge(validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n    this.propertiesMatches += validationResult.propertiesMatches;\n    this.propertiesValueMatches += validationResult.propertiesValueMatches;\n    this.mergeProcessedProperties(validationResult);\n  }\n  mergeEnumValues(validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n      for (const error of this.problems) {\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = t(\"Value is not accepted. Valid values: {0}.\", this.enumValues.map(v => JSON.stringify(v)).join(\", \"));\n        }\n      }\n    }\n  }\n  mergePropertyMatch(propertyValidationResult) {\n    this.problems = this.problems.concat(propertyValidationResult.problems);\n    this.propertiesMatches++;\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  }\n  mergeProcessedProperties(validationResult) {\n    validationResult.processedProperties.forEach(p => this.processedProperties.add(p));\n  }\n  compare(other) {\n    const hasProblems = this.hasProblems();\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n    return this.propertiesMatches - other.propertiesMatches;\n  }\n};\nfunction newJSONDocument(root, diagnostics = []) {\n  return new JSONDocument(root, diagnostics, []);\n}\nfunction getNodeValue3(node) {\n  return getNodeValue2(node);\n}\nfunction getNodePath3(node) {\n  return getNodePath2(node);\n}\nfunction contains2(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nvar JSONDocument = class {\n  constructor(root, syntaxErrors = [], comments = []) {\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n  getNodeFromOffset(offset, includeRightBound = false) {\n    if (this.root) {\n      return findNodeAtOffset2(this.root, offset, includeRightBound);\n    }\n    return void 0;\n  }\n  visit(visitor) {\n    if (this.root) {\n      const doVisit = node => {\n        let ctn = visitor(node);\n        const children = node.children;\n        if (Array.isArray(children)) {\n          for (let i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit(children[i]);\n          }\n        }\n        return ctn;\n      };\n      doVisit(this.root);\n    }\n  }\n  validate(textDocument, schema, severity = DiagnosticSeverity.Warning, schemaDraft) {\n    if (this.root && schema) {\n      const validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance, new EvaluationContext(schemaDraft ?? getSchemaDraft(schema)));\n      return validationResult.problems.map(p => {\n        const range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity ?? severity, p.code);\n      });\n    }\n    return void 0;\n  }\n  getMatchingSchemas(schema, focusOffset = -1, exclude) {\n    if (this.root && schema) {\n      const matchingSchemas = new SchemaCollector(focusOffset, exclude);\n      const schemaDraft = getSchemaDraft(schema);\n      const context = new EvaluationContext(schemaDraft);\n      validate(this.root, schema, new ValidationResult(), matchingSchemas, context);\n      return matchingSchemas.schemas;\n    }\n    return [];\n  }\n};\nfunction getSchemaDraft(schema, fallBack = SchemaDraft.v2020_12) {\n  let schemaId = schema.$schema;\n  if (schemaId) {\n    return schemaDraftFromId[schemaId] ?? fallBack;\n  }\n  return fallBack;\n}\nfunction validate(n, schema, validationResult, matchingSchemas, context) {\n  if (!n || !matchingSchemas.include(n)) {\n    return;\n  }\n  if (n.type === \"property\") {\n    return validate(n.valueNode, schema, validationResult, matchingSchemas, context);\n  }\n  const node = n;\n  _validateNode();\n  switch (node.type) {\n    case \"object\":\n      _validateObjectNode(node);\n      break;\n    case \"array\":\n      _validateArrayNode(node);\n      break;\n    case \"string\":\n      _validateStringNode(node);\n      break;\n    case \"number\":\n      _validateNumberNode(node);\n      break;\n  }\n  matchingSchemas.add({\n    node,\n    schema\n  });\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === \"integer\" && node.type === \"number\" && node.isInteger;\n    }\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          message: schema.errorMessage || t(\"Incorrect type. Expected one of {0}.\", schema.type.join(\", \"))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          message: schema.errorMessage || t('Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n    if (Array.isArray(schema.allOf)) {\n      for (const subSchemaRef of schema.allOf) {\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, asSchema(subSchemaRef), subValidationResult, subMatchingSchemas, context);\n        validationResult.merge(subValidationResult);\n        matchingSchemas.merge(subMatchingSchemas);\n      }\n    }\n    const notSchema = asSchema(schema.not);\n    if (notSchema) {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas, context);\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          message: schema.errorMessage || t(\"Matches a schema that is not allowed.\")\n        });\n      }\n      for (const ms of subMatchingSchemas.schemas) {\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n    const testAlternatives = (alternatives, maxOneMatch) => {\n      const matches = [];\n      let bestMatch = void 0;\n      for (const subSchemaRef of alternatives) {\n        const subSchema = asSchema(subSchemaRef);\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n        if (!bestMatch) {\n          bestMatch = {\n            schema: subSchema,\n            validationResult: subValidationResult,\n            matchingSchemas: subMatchingSchemas\n          };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            bestMatch.validationResult.mergeProcessedProperties(subValidationResult);\n          } else {\n            const compareResult = subValidationResult.compare(bestMatch.validationResult);\n            if (compareResult > 0) {\n              bestMatch = {\n                schema: subSchema,\n                validationResult: subValidationResult,\n                matchingSchemas: subMatchingSchemas\n              };\n            } else if (compareResult === 0) {\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: 1\n          },\n          message: t(\"Matches multiple schemas when only one must validate.\")\n        });\n      }\n      if (bestMatch) {\n        validationResult.merge(bestMatch.validationResult);\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n      return matches.length;\n    };\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n    const testBranch = schema2 => {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema2), subValidationResult, subMatchingSchemas, context);\n      validationResult.merge(subValidationResult);\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n    const testCondition = (ifSchema2, thenSchema, elseSchema) => {\n      const subSchema = asSchema(ifSchema2);\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n      matchingSchemas.merge(subMatchingSchemas);\n      validationResult.mergeProcessedProperties(subValidationResult);\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n    const ifSchema = asSchema(schema.if);\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n    if (Array.isArray(schema.enum)) {\n      const val = getNodeValue3(node);\n      let enumValueMatch = false;\n      for (const e of schema.enum) {\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value is not accepted. Valid values: {0}.\", schema.enum.map(v => JSON.stringify(v)).join(\", \"))\n        });\n      }\n    }\n    if (isDefined(schema.const)) {\n      const val = getNodeValue3(node);\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value must be {0}.\", JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n      validationResult.enumValues = [schema.const];\n    }\n    let deprecationMessage = schema.deprecationMessage;\n    if (deprecationMessage || schema.deprecated) {\n      deprecationMessage = deprecationMessage || t(\"Value is deprecated\");\n      let targetNode = node.parent?.type === \"property\" ? node.parent : node;\n      validationResult.problems.push({\n        location: {\n          offset: targetNode.offset,\n          length: targetNode.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: deprecationMessage,\n        code: ErrorCode.Deprecated\n      });\n    }\n  }\n  function _validateNumberNode(node2) {\n    const val = node2.value;\n    function normalizeFloats(float) {\n      const parts = /^(-?\\d+)(?:\\.(\\d+))?(?:e([-+]\\d+))?$/.exec(float.toString());\n      return parts && {\n        value: Number(parts[1] + (parts[2] || \"\")),\n        multiplier: (parts[2]?.length || 0) - (parseInt(parts[3]) || 0)\n      };\n    }\n    ;\n    if (isNumber(schema.multipleOf)) {\n      let remainder = -1;\n      if (Number.isInteger(schema.multipleOf)) {\n        remainder = val % schema.multipleOf;\n      } else {\n        let normMultipleOf = normalizeFloats(schema.multipleOf);\n        let normValue = normalizeFloats(val);\n        if (normMultipleOf && normValue) {\n          const multiplier = 10 ** Math.abs(normValue.multiplier - normMultipleOf.multiplier);\n          if (normValue.multiplier < normMultipleOf.multiplier) {\n            normValue.value *= multiplier;\n          } else {\n            normMultipleOf.value *= multiplier;\n          }\n          remainder = normValue.value % normMultipleOf.value;\n        }\n      }\n      if (remainder !== 0) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: t(\"Value is not divisible by {0}.\", schema.multipleOf)\n        });\n      }\n    }\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    const exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Value is below the exclusive minimum of {0}.\", exclusiveMinimum)\n      });\n    }\n    const exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Value is above the exclusive maximum of {0}.\", exclusiveMaximum)\n      });\n    }\n    const minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Value is below the minimum of {0}.\", minimum)\n      });\n    }\n    const maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Value is above the maximum of {0}.\", maximum)\n      });\n    }\n  }\n  function _validateStringNode(node2) {\n    if (isNumber(schema.minLength) && stringLength(node2.value) < schema.minLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"String is shorter than the minimum length of {0}.\", schema.minLength)\n      });\n    }\n    if (isNumber(schema.maxLength) && stringLength(node2.value) > schema.maxLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"String is longer than the maximum length of {0}.\", schema.maxLength)\n      });\n    }\n    if (isString(schema.pattern)) {\n      const regex = extendedRegExp(schema.pattern);\n      if (!regex?.test(node2.value)) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: schema.patternErrorMessage || schema.errorMessage || t('String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n    if (schema.format) {\n      switch (schema.format) {\n        case \"uri\":\n        case \"uri-reference\":\n          {\n            let errorMessage;\n            if (!node2.value) {\n              errorMessage = t(\"URI expected.\");\n            } else {\n              const match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node2.value);\n              if (!match) {\n                errorMessage = t(\"URI is expected.\");\n              } else if (!match[2] && schema.format === \"uri\") {\n                errorMessage = t(\"URI with a scheme is expected.\");\n              }\n            }\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: {\n                  offset: node2.offset,\n                  length: node2.length\n                },\n                message: schema.patternErrorMessage || schema.errorMessage || t(\"String is not a URI: {0}\", errorMessage)\n              });\n            }\n          }\n          break;\n        case \"color-hex\":\n        case \"date-time\":\n        case \"date\":\n        case \"time\":\n        case \"email\":\n        case \"hostname\":\n        case \"ipv4\":\n        case \"ipv6\":\n          const format5 = formats[schema.format];\n          if (!node2.value || !format5.pattern.exec(node2.value)) {\n            validationResult.problems.push({\n              location: {\n                offset: node2.offset,\n                length: node2.length\n              },\n              message: schema.patternErrorMessage || schema.errorMessage || format5.errorMessage\n            });\n          }\n        default:\n      }\n    }\n  }\n  function _validateArrayNode(node2) {\n    let prefixItemsSchemas;\n    let additionalItemSchema;\n    if (context.schemaDraft >= SchemaDraft.v2020_12) {\n      prefixItemsSchemas = schema.prefixItems;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : void 0;\n    } else {\n      prefixItemsSchemas = Array.isArray(schema.items) ? schema.items : void 0;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : schema.additionalItems;\n    }\n    let index = 0;\n    if (prefixItemsSchemas !== void 0) {\n      const max = Math.min(prefixItemsSchemas.length, node2.items.length);\n      for (; index < max; index++) {\n        const subSchemaRef = prefixItemsSchemas[index];\n        const subSchema = asSchema(subSchemaRef);\n        const itemValidationResult = new ValidationResult();\n        const item = node2.items[index];\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n        validationResult.processedProperties.add(String(index));\n      }\n    }\n    if (additionalItemSchema !== void 0 && index < node2.items.length) {\n      if (typeof additionalItemSchema === \"boolean\") {\n        if (additionalItemSchema === false) {\n          validationResult.problems.push({\n            location: {\n              offset: node2.offset,\n              length: node2.length\n            },\n            message: t(\"Array has too many items according to schema. Expected {0} or fewer.\", index)\n          });\n        }\n        for (; index < node2.items.length; index++) {\n          validationResult.processedProperties.add(String(index));\n          validationResult.propertiesValueMatches++;\n        }\n      } else {\n        for (; index < node2.items.length; index++) {\n          const itemValidationResult = new ValidationResult();\n          validate(node2.items[index], additionalItemSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n          validationResult.processedProperties.add(String(index));\n        }\n      }\n    }\n    const containsSchema = asSchema(schema.contains);\n    if (containsSchema) {\n      let containsCount = 0;\n      for (let index2 = 0; index2 < node2.items.length; index2++) {\n        const item = node2.items[index2];\n        const itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance, context);\n        if (!itemValidationResult.hasProblems()) {\n          containsCount++;\n          if (context.schemaDraft >= SchemaDraft.v2020_12) {\n            validationResult.processedProperties.add(String(index2));\n          }\n        }\n      }\n      if (containsCount === 0 && !isNumber(schema.minContains)) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: schema.errorMessage || t(\"Array does not contain required item.\")\n        });\n      }\n      if (isNumber(schema.minContains) && containsCount < schema.minContains) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: schema.errorMessage || t(\"Array has too few items that match the contains contraint. Expected {0} or more.\", schema.minContains)\n        });\n      }\n      if (isNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: schema.errorMessage || t(\"Array has too many items that match the contains contraint. Expected {0} or less.\", schema.maxContains)\n        });\n      }\n    }\n    const unevaluatedItems = schema.unevaluatedItems;\n    if (unevaluatedItems !== void 0) {\n      for (let i = 0; i < node2.items.length; i++) {\n        if (!validationResult.processedProperties.has(String(i))) {\n          if (unevaluatedItems === false) {\n            validationResult.problems.push({\n              location: {\n                offset: node2.offset,\n                length: node2.length\n              },\n              message: t(\"Item does not match any validation rule from the array.\")\n            });\n          } else {\n            const itemValidationResult = new ValidationResult();\n            validate(node2.items[i], schema.unevaluatedItems, itemValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        }\n        validationResult.processedProperties.add(String(i));\n        validationResult.propertiesValueMatches++;\n      }\n    }\n    if (isNumber(schema.minItems) && node2.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Array has too few items. Expected {0} or more.\", schema.minItems)\n      });\n    }\n    if (isNumber(schema.maxItems) && node2.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node2.offset,\n          length: node2.length\n        },\n        message: t(\"Array has too many items. Expected {0} or fewer.\", schema.maxItems)\n      });\n    }\n    if (schema.uniqueItems === true) {\n      let hasDuplicates = function () {\n        for (let i = 0; i < values.length - 1; i++) {\n          const value = values[i];\n          for (let j = i + 1; j < values.length; j++) {\n            if (equals(value, values[j])) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      const values = getNodeValue3(node2);\n      if (hasDuplicates()) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: t(\"Array has duplicate items.\")\n        });\n      }\n    }\n  }\n  function _validateObjectNode(node2) {\n    const seenKeys = /* @__PURE__ */Object.create(null);\n    const unprocessedProperties = /* @__PURE__ */new Set();\n    for (const propertyNode of node2.properties) {\n      const key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.add(key);\n    }\n    if (Array.isArray(schema.required)) {\n      for (const propertyName of schema.required) {\n        if (!seenKeys[propertyName]) {\n          const keyNode = node2.parent && node2.parent.type === \"property\" && node2.parent.keyNode;\n          const location = keyNode ? {\n            offset: keyNode.offset,\n            length: keyNode.length\n          } : {\n            offset: node2.offset,\n            length: 1\n          };\n          validationResult.problems.push({\n            location,\n            message: t('Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n    const propertyProcessed = prop => {\n      unprocessedProperties.delete(prop);\n      validationResult.processedProperties.add(prop);\n    };\n    if (schema.properties) {\n      for (const propertyName of Object.keys(schema.properties)) {\n        propertyProcessed(propertyName);\n        const propertySchema = schema.properties[propertyName];\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: {\n                  offset: propertyNode.keyNode.offset,\n                  length: propertyNode.keyNode.length\n                },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    if (schema.patternProperties) {\n      for (const propertyPattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(propertyPattern);\n        if (regex) {\n          const processed = [];\n          for (const propertyName of unprocessedProperties) {\n            if (regex.test(propertyName)) {\n              processed.push(propertyName);\n              const child = seenKeys[propertyName];\n              if (child) {\n                const propertySchema = schema.patternProperties[propertyPattern];\n                if (isBoolean(propertySchema)) {\n                  if (!propertySchema) {\n                    const propertyNode = child.parent;\n                    validationResult.problems.push({\n                      location: {\n                        offset: propertyNode.keyNode.offset,\n                        length: propertyNode.keyNode.length\n                      },\n                      message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n                    });\n                  } else {\n                    validationResult.propertiesMatches++;\n                    validationResult.propertiesValueMatches++;\n                  }\n                } else {\n                  const propertyValidationResult = new ValidationResult();\n                  validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n                  validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n              }\n            }\n          }\n          processed.forEach(propertyProcessed);\n        }\n      }\n    }\n    const additionalProperties = schema.additionalProperties;\n    if (additionalProperties !== void 0) {\n      for (const propertyName of unprocessedProperties) {\n        propertyProcessed(propertyName);\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (additionalProperties === false) {\n            const propertyNode = child.parent;\n            validationResult.problems.push({\n              location: {\n                offset: propertyNode.keyNode.offset,\n                length: propertyNode.keyNode.length\n              },\n              message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n            });\n          } else if (additionalProperties !== true) {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, additionalProperties, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    if (unevaluatedProperties !== void 0) {\n      const processed = [];\n      for (const propertyName of unprocessedProperties) {\n        if (!validationResult.processedProperties.has(propertyName)) {\n          processed.push(propertyName);\n          const child = seenKeys[propertyName];\n          if (child) {\n            if (unevaluatedProperties === false) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: {\n                  offset: propertyNode.keyNode.offset,\n                  length: propertyNode.keyNode.length\n                },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else if (unevaluatedProperties !== true) {\n              const propertyValidationResult = new ValidationResult();\n              validate(child, unevaluatedProperties, propertyValidationResult, matchingSchemas, context);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n      processed.forEach(propertyProcessed);\n    }\n    if (isNumber(schema.maxProperties)) {\n      if (node2.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: t(\"Object has more properties than limit of {0}.\", schema.maxProperties)\n        });\n      }\n    }\n    if (isNumber(schema.minProperties)) {\n      if (node2.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node2.offset,\n            length: node2.length\n          },\n          message: t(\"Object has fewer properties than the required number of {0}\", schema.minProperties)\n        });\n      }\n    }\n    if (schema.dependentRequired) {\n      for (const key in schema.dependentRequired) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentRequired[key];\n        if (prop && Array.isArray(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependentSchemas) {\n      for (const key in schema.dependentSchemas) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentSchemas[key];\n        if (prop && isObject(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependencies) {\n      for (const key in schema.dependencies) {\n        const prop = seenKeys[key];\n        if (prop) {\n          _validatePropertyDependencies(key, schema.dependencies[key]);\n        }\n      }\n    }\n    const propertyNames = asSchema(schema.propertyNames);\n    if (propertyNames) {\n      for (const f2 of node2.properties) {\n        const key = f2.keyNode;\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance, context);\n        }\n      }\n    }\n    function _validatePropertyDependencies(key, propertyDep) {\n      if (Array.isArray(propertyDep)) {\n        for (const requiredProp of propertyDep) {\n          if (!seenKeys[requiredProp]) {\n            validationResult.problems.push({\n              location: {\n                offset: node2.offset,\n                length: node2.length\n              },\n              message: t(\"Object is missing property {0} required by property {1}.\", requiredProp, key)\n            });\n          } else {\n            validationResult.propertiesValueMatches++;\n          }\n        }\n      } else {\n        const propertySchema = asSchema(propertyDep);\n        if (propertySchema) {\n          const propertyValidationResult = new ValidationResult();\n          validate(node2, propertySchema, propertyValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    }\n  }\n}\nfunction parse3(textDocument, config) {\n  const problems = [];\n  let lastProblemOffset = -1;\n  const text = textDocument.getText();\n  const scanner = createScanner2(text, false);\n  const commentRanges = config && config.collectComments ? [] : void 0;\n  function _scanNext() {\n    while (true) {\n      const token2 = scanner.scan();\n      _checkScanError();\n      switch (token2) {\n        case 12:\n        case 13:\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token2;\n      }\n    }\n  }\n  function _accept(token2) {\n    if (scanner.getToken() === token2) {\n      _scanNext();\n      return true;\n    }\n    return false;\n  }\n  function _errorAtRange(message, code, startOffset, endOffset, severity = DiagnosticSeverity.Error) {\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      const range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n  function _error(message, code, node = void 0, skipUntilAfter = [], skipUntil = []) {\n    let start = scanner.getTokenOffset();\n    let end = scanner.getTokenOffset() + scanner.getTokenLength();\n    if (start === end && start > 0) {\n      start--;\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n      end = start + 1;\n    }\n    _errorAtRange(message, code, start, end);\n    if (node) {\n      _finalize(node, false);\n    }\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token2 = scanner.getToken();\n      while (token2 !== 17) {\n        if (skipUntilAfter.indexOf(token2) !== -1) {\n          _scanNext();\n          break;\n        } else if (skipUntil.indexOf(token2) !== -1) {\n          break;\n        }\n        token2 = _scanNext();\n      }\n    }\n    return node;\n  }\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4:\n        _error(t(\"Invalid unicode sequence in string.\"), ErrorCode.InvalidUnicode);\n        return true;\n      case 5:\n        _error(t(\"Invalid escape character in string.\"), ErrorCode.InvalidEscapeCharacter);\n        return true;\n      case 3:\n        _error(t(\"Unexpected end of number.\"), ErrorCode.UnexpectedEndOfNumber);\n        return true;\n      case 1:\n        _error(t(\"Unexpected end of comment.\"), ErrorCode.UnexpectedEndOfComment);\n        return true;\n      case 2:\n        _error(t(\"Unexpected end of string.\"), ErrorCode.UnexpectedEndOfString);\n        return true;\n      case 6:\n        _error(t(\"Invalid characters in string. Control characters must be escaped.\"), ErrorCode.InvalidCharacter);\n        return true;\n    }\n    return false;\n  }\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n    if (scanNext) {\n      _scanNext();\n    }\n    return node;\n  }\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3) {\n      return void 0;\n    }\n    const node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n    _scanNext();\n    const count = 0;\n    let needsComma = false;\n    while (scanner.getToken() !== 4 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Value expected\"), ErrorCode.ValueExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 4) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const item = _parseValue(node);\n      if (!item) {\n        _error(t(\"Value expected\"), ErrorCode.ValueExpected, void 0, [], [4, 5\n        /* Json.SyntaxKind.CommaToken */]);\n      } else {\n        node.items.push(item);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 4) {\n      return _error(t(\"Expected comma or closing bracket\"), ErrorCode.CommaOrCloseBacketExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  const keyPlaceholder = new StringASTNodeImpl(void 0, 0, 0);\n  function _parseProperty(parent, keysSeen) {\n    const node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n    let key = _parseString(node);\n    if (!key) {\n      if (scanner.getToken() === 16) {\n        _error(t(\"Property keys must be doublequoted\"), ErrorCode.PropertyKeysMustBeDoublequoted);\n        const keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n        keyNode.value = scanner.getTokenValue();\n        key = keyNode;\n        _scanNext();\n      } else {\n        return void 0;\n      }\n    }\n    node.keyNode = key;\n    if (key.value !== \"//\") {\n      const seen = keysSeen[key.value];\n      if (seen) {\n        _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n        if (isObject(seen)) {\n          _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n        }\n        keysSeen[key.value] = true;\n      } else {\n        keysSeen[key.value] = node;\n      }\n    }\n    if (scanner.getToken() === 6) {\n      node.colonOffset = scanner.getTokenOffset();\n      _scanNext();\n    } else {\n      _error(t(\"Colon expected\"), ErrorCode.ColonExpected);\n      if (scanner.getToken() === 10 && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n    const value = _parseValue(node);\n    if (!value) {\n      return _error(t(\"Value expected\"), ErrorCode.ValueExpected, node, [], [2, 5\n      /* Json.SyntaxKind.CommaToken */]);\n    }\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1) {\n      return void 0;\n    }\n    const node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    const keysSeen = /* @__PURE__ */Object.create(null);\n    _scanNext();\n    let needsComma = false;\n    while (scanner.getToken() !== 2 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Property expected\"), ErrorCode.PropertyExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 2) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const property = _parseProperty(node, keysSeen);\n      if (!property) {\n        _error(t(\"Property expected\"), ErrorCode.PropertyExpected, void 0, [], [2, 5\n        /* Json.SyntaxKind.CommaToken */]);\n      } else {\n        node.properties.push(property);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 2) {\n      return _error(t(\"Expected comma or closing brace\"), ErrorCode.CommaOrCloseBraceExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10) {\n      return void 0;\n    }\n    const node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11) {\n      return void 0;\n    }\n    const node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n    if (scanner.getTokenError() === 0) {\n      const tokenValue = scanner.getTokenValue();\n      try {\n        const numberValue = JSON.parse(tokenValue);\n        if (!isNumber(numberValue)) {\n          return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n        }\n        node.value = numberValue;\n      } catch (e) {\n        return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n      }\n      node.isInteger = tokenValue.indexOf(\".\") === -1;\n    }\n    return _finalize(node, true);\n  }\n  function _parseLiteral(parent) {\n    let node;\n    switch (scanner.getToken()) {\n      case 7:\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n      case 8:\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n      case 9:\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n      default:\n        return void 0;\n    }\n  }\n  function _parseValue(parent) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n  let _root = void 0;\n  const token = _scanNext();\n  if (token !== 17) {\n    _root = _parseValue(_root);\n    if (!_root) {\n      _error(t(\"Expected a JSON object, array or literal.\"), ErrorCode.Undefined);\n    } else if (scanner.getToken() !== 17) {\n      _error(t(\"End of file expected.\"), ErrorCode.Undefined);\n    }\n  }\n  return new JSONDocument(_root, problems, commentRanges);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/json.js\nfunction stringifyObject(obj, indent, stringifyLiteral) {\n  if (obj !== null && typeof obj === \"object\") {\n    const newIndent = indent + \"\t\";\n    if (Array.isArray(obj)) {\n      if (obj.length === 0) {\n        return \"[]\";\n      }\n      let result = \"[\\n\";\n      for (let i = 0; i < obj.length; i++) {\n        result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n        if (i < obj.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"]\";\n      return result;\n    } else {\n      const keys = Object.keys(obj);\n      if (keys.length === 0) {\n        return \"{}\";\n      }\n      let result = \"{\\n\";\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        result += newIndent + JSON.stringify(key) + \": \" + stringifyObject(obj[key], newIndent, stringifyLiteral);\n        if (i < keys.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"}\";\n      return result;\n    }\n  }\n  return stringifyLiteral(obj);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js\nvar valueCommitCharacters = [\",\", \"}\", \"]\"];\nvar propertyCommitCharacters = [\":\"];\nvar JSONCompletion = class {\n  constructor(schemaService, contributions = [], promiseConstructor = Promise, clientCapabilities = {}) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promiseConstructor = promiseConstructor;\n    this.clientCapabilities = clientCapabilities;\n  }\n  doResolve(item) {\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const resolveCompletion = this.contributions[i].resolveCompletion;\n      if (resolveCompletion) {\n        const resolver = resolveCompletion(item);\n        if (resolver) {\n          return resolver;\n        }\n      }\n    }\n    return this.promiseConstructor.resolve(item);\n  }\n  doComplete(document, position, doc) {\n    const result = {\n      items: [],\n      isIncomplete: false\n    };\n    const text = document.getText();\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    if (this.isInComment(document, node ? node.offset : 0, offset)) {\n      return Promise.resolve(result);\n    }\n    if (node && offset === node.offset + node.length && offset > 0) {\n      const ch = text[offset - 1];\n      if (node.type === \"object\" && ch === \"}\" || node.type === \"array\" && ch === \"]\") {\n        node = node.parent;\n      }\n    }\n    const currentWord = this.getCurrentWord(document, offset);\n    let overwriteRange;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n    } else {\n      let overwriteStart = offset - currentWord.length;\n      if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n        overwriteStart--;\n      }\n      overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n    }\n    const supportsCommitCharacters = false;\n    const proposed = /* @__PURE__ */new Map();\n    const collector = {\n      add: suggestion => {\n        let label = suggestion.label;\n        const existing = proposed.get(label);\n        if (!existing) {\n          label = label.replace(/[\\n]/g, \"\\u21B5\");\n          if (label.length > 60) {\n            const shortendedLabel = label.substr(0, 57).trim() + \"...\";\n            if (!proposed.has(shortendedLabel)) {\n              label = shortendedLabel;\n            }\n          }\n          suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n          if (supportsCommitCharacters) {\n            suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n          }\n          suggestion.label = label;\n          proposed.set(label, suggestion);\n          result.items.push(suggestion);\n        } else {\n          if (!existing.documentation) {\n            existing.documentation = suggestion.documentation;\n          }\n          if (!existing.detail) {\n            existing.detail = suggestion.detail;\n          }\n          if (!existing.labelDetails) {\n            existing.labelDetails = suggestion.labelDetails;\n          }\n        }\n      },\n      setAsIncomplete: () => {\n        result.isIncomplete = true;\n      },\n      error: message => {\n        console.error(message);\n      },\n      getNumberOfProposals: () => {\n        return result.items.length;\n      }\n    };\n    return this.schemaService.getSchemaForResource(document.uri, doc).then(schema => {\n      const collectionPromises = [];\n      let addValue = true;\n      let currentKey = \"\";\n      let currentProperty = void 0;\n      if (node) {\n        if (node.type === \"string\") {\n          const parent = node.parent;\n          if (parent && parent.type === \"property\" && parent.keyNode === node) {\n            addValue = !parent.valueNode;\n            currentProperty = parent;\n            currentKey = text.substr(node.offset + 1, node.length - 2);\n            if (parent) {\n              node = parent.parent;\n            }\n          }\n        }\n      }\n      if (node && node.type === \"object\") {\n        if (node.offset === offset) {\n          return result;\n        }\n        const properties = node.properties;\n        properties.forEach(p => {\n          if (!currentProperty || currentProperty !== p) {\n            proposed.set(p.keyNode.value, CompletionItem.create(\"__\"));\n          }\n        });\n        let separatorAfter = \"\";\n        if (addValue) {\n          separatorAfter = this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n        }\n        if (schema) {\n          this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector);\n        } else {\n          this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n        }\n        const location = getNodePath3(node);\n        this.contributions.forEach(contribution => {\n          const collectPromise = contribution.collectPropertyCompletions(document.uri, location, currentWord, addValue, separatorAfter === \"\", collector);\n          if (collectPromise) {\n            collectionPromises.push(collectPromise);\n          }\n        });\n        if (!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"') {\n          collector.add({\n            kind: CompletionItemKind.Property,\n            label: this.getLabelForValue(currentWord),\n            insertText: this.getInsertTextForProperty(currentWord, void 0, false, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: \"\"\n          });\n          collector.setAsIncomplete();\n        }\n      }\n      const types = {};\n      if (schema) {\n        this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n      } else {\n        this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n      }\n      if (this.contributions.length > 0) {\n        this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n      }\n      return this.promiseConstructor.all(collectionPromises).then(() => {\n        if (collector.getNumberOfProposals() === 0) {\n          let offsetForSeparator = offset;\n          if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n            offsetForSeparator = node.offset + node.length;\n          }\n          const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n          this.addFillerValueCompletions(types, separatorAfter, collector);\n        }\n        return result;\n      });\n    });\n  }\n  getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector) {\n    const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n    matchingSchemas.forEach(s => {\n      if (s.node === node && !s.inverted) {\n        const schemaProperties = s.schema.properties;\n        if (schemaProperties) {\n          Object.keys(schemaProperties).forEach(key => {\n            const propertySchema = schemaProperties[key];\n            if (typeof propertySchema === \"object\" && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n              const proposal = {\n                kind: CompletionItemKind.Property,\n                label: key,\n                insertText: this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                filterText: this.getFilterTextForValue(key),\n                documentation: this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || \"\"\n              };\n              if (propertySchema.suggestSortText !== void 0) {\n                proposal.sortText = propertySchema.suggestSortText;\n              }\n              if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n                proposal.command = {\n                  title: \"Suggest\",\n                  command: \"editor.action.triggerSuggest\"\n                };\n              }\n              collector.add(proposal);\n            }\n          });\n        }\n        const schemaPropertyNames = s.schema.propertyNames;\n        if (typeof schemaPropertyNames === \"object\" && !schemaPropertyNames.deprecationMessage && !schemaPropertyNames.doNotSuggest) {\n          const propertyNameCompletionItem = (name, enumDescription = void 0) => {\n            const proposal = {\n              kind: CompletionItemKind.Property,\n              label: name,\n              insertText: this.getInsertTextForProperty(name, void 0, addValue, separatorAfter),\n              insertTextFormat: InsertTextFormat.Snippet,\n              filterText: this.getFilterTextForValue(name),\n              documentation: enumDescription || this.fromMarkup(schemaPropertyNames.markdownDescription) || schemaPropertyNames.description || \"\"\n            };\n            if (schemaPropertyNames.suggestSortText !== void 0) {\n              proposal.sortText = schemaPropertyNames.suggestSortText;\n            }\n            if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n              proposal.command = {\n                title: \"Suggest\",\n                command: \"editor.action.triggerSuggest\"\n              };\n            }\n            collector.add(proposal);\n          };\n          if (schemaPropertyNames.enum) {\n            for (let i = 0; i < schemaPropertyNames.enum.length; i++) {\n              let enumDescription = void 0;\n              if (schemaPropertyNames.markdownEnumDescriptions && i < schemaPropertyNames.markdownEnumDescriptions.length) {\n                enumDescription = this.fromMarkup(schemaPropertyNames.markdownEnumDescriptions[i]);\n              } else if (schemaPropertyNames.enumDescriptions && i < schemaPropertyNames.enumDescriptions.length) {\n                enumDescription = schemaPropertyNames.enumDescriptions[i];\n              }\n              propertyNameCompletionItem(schemaPropertyNames.enum[i], enumDescription);\n            }\n          }\n          if (schemaPropertyNames.const) {\n            propertyNameCompletionItem(schemaPropertyNames.const);\n          }\n        }\n      }\n    });\n  }\n  getSchemaLessPropertyCompletions(doc, node, currentKey, collector) {\n    const collectCompletionsForSimilarObject = obj => {\n      obj.properties.forEach(p => {\n        const key = p.keyNode.value;\n        collector.add({\n          kind: CompletionItemKind.Property,\n          label: key,\n          insertText: this.getInsertTextForValue(key, \"\"),\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText: this.getFilterTextForValue(key),\n          documentation: \"\"\n        });\n      });\n    };\n    if (node.parent) {\n      if (node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit(n => {\n          if (n.type === \"property\" && n !== node.parent && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"object\") {\n            collectCompletionsForSimilarObject(n.valueNode);\n          }\n          return true;\n        });\n      } else if (node.parent.type === \"array\") {\n        node.parent.items.forEach(n => {\n          if (n.type === \"object\" && n !== node) {\n            collectCompletionsForSimilarObject(n);\n          }\n        });\n      }\n    } else if (node.type === \"object\") {\n      collector.add({\n        kind: CompletionItemKind.Property,\n        label: \"$schema\",\n        insertText: this.getInsertTextForProperty(\"$schema\", void 0, true, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\",\n        filterText: this.getFilterTextForValue(\"$schema\")\n      });\n    }\n  }\n  getSchemaLessValueCompletions(doc, node, offset, document, collector) {\n    let offsetForSeparator = offset;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      node = node.parent;\n    }\n    if (!node) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"Empty object\",\n        insertText: this.getInsertTextForValue({}, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"Empty array\",\n        insertText: this.getInsertTextForValue([], \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      return;\n    }\n    const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n    const collectSuggestionsForValues = value => {\n      if (value.parent && !contains2(value.parent, offset, true)) {\n        collector.add({\n          kind: this.getSuggestionKind(value.type),\n          label: this.getLabelTextForMatchingNode(value, document),\n          insertText: this.getInsertTextForMatchingNode(value, document, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation: \"\"\n        });\n      }\n      if (value.type === \"boolean\") {\n        this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n      }\n    };\n    if (node.type === \"property\") {\n      if (offset > (node.colonOffset || 0)) {\n        const valueNode = node.valueNode;\n        if (valueNode && (offset > valueNode.offset + valueNode.length || valueNode.type === \"object\" || valueNode.type === \"array\")) {\n          return;\n        }\n        const parentKey = node.keyNode.value;\n        doc.visit(n => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode) {\n            collectSuggestionsForValues(n.valueNode);\n          }\n          return true;\n        });\n        if (parentKey === \"$schema\" && node.parent && !node.parent.parent) {\n          this.addDollarSchemaCompletions(separatorAfter, collector);\n        }\n      }\n    }\n    if (node.type === \"array\") {\n      if (node.parent && node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit(n => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"array\") {\n            n.valueNode.items.forEach(collectSuggestionsForValues);\n          }\n          return true;\n        });\n      } else {\n        node.items.forEach(collectSuggestionsForValues);\n      }\n    }\n  }\n  getValueCompletions(schema, doc, node, offset, document, collector, types) {\n    let offsetForSeparator = offset;\n    let parentKey = void 0;\n    let valueNode = void 0;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      valueNode = node;\n      node = node.parent;\n    }\n    if (!node) {\n      this.addSchemaValueCompletions(schema.schema, \"\", collector, types);\n      return;\n    }\n    if (node.type === \"property\" && offset > (node.colonOffset || 0)) {\n      const valueNode2 = node.valueNode;\n      if (valueNode2 && offset > valueNode2.offset + valueNode2.length) {\n        return;\n      }\n      parentKey = node.keyNode.value;\n      node = node.parent;\n    }\n    if (node && (parentKey !== void 0 || node.type === \"array\")) {\n      const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n      const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n      for (const s of matchingSchemas) {\n        if (s.node === node && !s.inverted && s.schema) {\n          if (node.type === \"array\" && s.schema.items) {\n            let c = collector;\n            if (s.schema.uniqueItems) {\n              const existingValues = /* @__PURE__ */new Set();\n              node.children.forEach(n => {\n                if (n.type !== \"array\" && n.type !== \"object\") {\n                  existingValues.add(this.getLabelForValue(getNodeValue3(n)));\n                }\n              });\n              c = {\n                ...collector,\n                add(suggestion) {\n                  if (!existingValues.has(suggestion.label)) {\n                    collector.add(suggestion);\n                  }\n                }\n              };\n            }\n            if (Array.isArray(s.schema.items)) {\n              const index = this.findItemAtOffset(node, document, offset);\n              if (index < s.schema.items.length) {\n                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, c, types);\n              }\n            } else {\n              this.addSchemaValueCompletions(s.schema.items, separatorAfter, c, types);\n            }\n          }\n          if (parentKey !== void 0) {\n            let propertyMatched = false;\n            if (s.schema.properties) {\n              const propertySchema = s.schema.properties[parentKey];\n              if (propertySchema) {\n                propertyMatched = true;\n                this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n              }\n            }\n            if (s.schema.patternProperties && !propertyMatched) {\n              for (const pattern of Object.keys(s.schema.patternProperties)) {\n                const regex = extendedRegExp(pattern);\n                if (regex?.test(parentKey)) {\n                  propertyMatched = true;\n                  const propertySchema = s.schema.patternProperties[pattern];\n                  this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                }\n              }\n            }\n            if (s.schema.additionalProperties && !propertyMatched) {\n              const propertySchema = s.schema.additionalProperties;\n              this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n            }\n          }\n        }\n      }\n      if (parentKey === \"$schema\" && !node.parent) {\n        this.addDollarSchemaCompletions(separatorAfter, collector);\n      }\n      if (types[\"boolean\"]) {\n        this.addBooleanValueCompletion(true, separatorAfter, collector);\n        this.addBooleanValueCompletion(false, separatorAfter, collector);\n      }\n      if (types[\"null\"]) {\n        this.addNullValueCompletion(separatorAfter, collector);\n      }\n    }\n  }\n  getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises) {\n    if (!node) {\n      this.contributions.forEach(contribution => {\n        const collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n        if (collectPromise) {\n          collectionPromises.push(collectPromise);\n        }\n      });\n    } else {\n      if (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\") {\n        node = node.parent;\n      }\n      if (node && node.type === \"property\" && offset > (node.colonOffset || 0)) {\n        const parentKey = node.keyNode.value;\n        const valueNode = node.valueNode;\n        if ((!valueNode || offset <= valueNode.offset + valueNode.length) && node.parent) {\n          const location = getNodePath3(node.parent);\n          this.contributions.forEach(contribution => {\n            const collectPromise = contribution.collectValueCompletions(document.uri, location, parentKey, collector);\n            if (collectPromise) {\n              collectionPromises.push(collectPromise);\n            }\n          });\n        }\n      }\n    }\n  }\n  addSchemaValueCompletions(schema, separatorAfter, collector, types) {\n    if (typeof schema === \"object\") {\n      this.addEnumValueCompletions(schema, separatorAfter, collector);\n      this.addDefaultValueCompletions(schema, separatorAfter, collector);\n      this.collectTypes(schema, types);\n      if (Array.isArray(schema.allOf)) {\n        schema.allOf.forEach(s => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.anyOf)) {\n        schema.anyOf.forEach(s => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.oneOf)) {\n        schema.oneOf.forEach(s => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n    }\n  }\n  addDefaultValueCompletions(schema, separatorAfter, collector, arrayDepth = 0) {\n    let hasProposals = false;\n    if (isDefined(schema.default)) {\n      let type = schema.type;\n      let value = schema.default;\n      for (let i = arrayDepth; i > 0; i--) {\n        value = [value];\n        type = \"array\";\n      }\n      const completionItem = {\n        kind: this.getSuggestionKind(type),\n        label: this.getLabelForValue(value),\n        insertText: this.getInsertTextForValue(value, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet\n      };\n      if (this.doesSupportsLabelDetails()) {\n        completionItem.labelDetails = {\n          description: t(\"Default value\")\n        };\n      } else {\n        completionItem.detail = t(\"Default value\");\n      }\n      collector.add(completionItem);\n      hasProposals = true;\n    }\n    if (Array.isArray(schema.examples)) {\n      schema.examples.forEach(example => {\n        let type = schema.type;\n        let value = example;\n        for (let i = arrayDepth; i > 0; i--) {\n          value = [value];\n          type = \"array\";\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label: this.getLabelForValue(value),\n          insertText: this.getInsertTextForValue(value, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet\n        });\n        hasProposals = true;\n      });\n    }\n    if (Array.isArray(schema.defaultSnippets)) {\n      schema.defaultSnippets.forEach(s => {\n        let type = schema.type;\n        let value = s.body;\n        let label = s.label;\n        let insertText;\n        let filterText;\n        if (isDefined(value)) {\n          let type2 = schema.type;\n          for (let i = arrayDepth; i > 0; i--) {\n            value = [value];\n            type2 = \"array\";\n          }\n          insertText = this.getInsertTextForSnippetValue(value, separatorAfter);\n          filterText = this.getFilterTextForSnippetValue(value);\n          label = label || this.getLabelForSnippetValue(value);\n        } else if (typeof s.bodyText === \"string\") {\n          let prefix = \"\",\n            suffix = \"\",\n            indent = \"\";\n          for (let i = arrayDepth; i > 0; i--) {\n            prefix = prefix + indent + \"[\\n\";\n            suffix = suffix + \"\\n\" + indent + \"]\";\n            indent += \"\t\";\n            type = \"array\";\n          }\n          insertText = prefix + indent + s.bodyText.split(\"\\n\").join(\"\\n\" + indent) + suffix + separatorAfter;\n          label = label || insertText, filterText = insertText.replace(/[\\n]/g, \"\");\n        } else {\n          return;\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label,\n          documentation: this.fromMarkup(s.markdownDescription) || s.description,\n          insertText,\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText\n        });\n        hasProposals = true;\n      });\n    }\n    if (!hasProposals && typeof schema.items === \"object\" && !Array.isArray(schema.items) && arrayDepth < 5) {\n      this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n    }\n  }\n  addEnumValueCompletions(schema, separatorAfter, collector) {\n    if (isDefined(schema.const)) {\n      collector.add({\n        kind: this.getSuggestionKind(schema.type),\n        label: this.getLabelForValue(schema.const),\n        insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n      });\n    }\n    if (Array.isArray(schema.enum)) {\n      for (let i = 0, length = schema.enum.length; i < length; i++) {\n        const enm = schema.enum[i];\n        let documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n        if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n          documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n        } else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n          documentation = schema.enumDescriptions[i];\n        }\n        collector.add({\n          kind: this.getSuggestionKind(schema.type),\n          label: this.getLabelForValue(enm),\n          insertText: this.getInsertTextForValue(enm, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation\n        });\n      }\n    }\n  }\n  collectTypes(schema, types) {\n    if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n      return;\n    }\n    const type = schema.type;\n    if (Array.isArray(type)) {\n      type.forEach(t2 => types[t2] = true);\n    } else if (type) {\n      types[type] = true;\n    }\n  }\n  addFillerValueCompletions(types, separatorAfter, collector) {\n    if (types[\"object\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"{}\",\n        insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New object\"),\n        documentation: \"\"\n      });\n    }\n    if (types[\"array\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"[]\",\n        insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New array\"),\n        documentation: \"\"\n      });\n    }\n  }\n  addBooleanValueCompletion(value, separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"boolean\"),\n      label: value ? \"true\" : \"false\",\n      insertText: this.getInsertTextForValue(value, separatorAfter),\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addNullValueCompletion(separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"null\"),\n      label: \"null\",\n      insertText: \"null\" + separatorAfter,\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addDollarSchemaCompletions(separatorAfter, collector) {\n    const schemaIds = this.schemaService.getRegisteredSchemaIds(schema => schema === \"http\" || schema === \"https\");\n    schemaIds.forEach(schemaId => {\n      if (schemaId.startsWith(\"http://json-schema.org/draft-\")) {\n        schemaId = schemaId + \"#\";\n      }\n      collector.add({\n        kind: CompletionItemKind.Module,\n        label: this.getLabelForValue(schemaId),\n        filterText: this.getFilterTextForValue(schemaId),\n        insertText: this.getInsertTextForValue(schemaId, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n    });\n  }\n  getLabelForValue(value) {\n    return JSON.stringify(value);\n  }\n  getValueFromLabel(value) {\n    return JSON.parse(value);\n  }\n  getFilterTextForValue(value) {\n    return JSON.stringify(value);\n  }\n  getFilterTextForSnippetValue(value) {\n    return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getLabelForSnippetValue(value) {\n    const label = JSON.stringify(value);\n    return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getInsertTextForPlainText(text) {\n    return text.replace(/[\\\\\\$\\}]/g, \"\\\\$&\");\n  }\n  getInsertTextForValue(value, separatorAfter) {\n    const text = JSON.stringify(value, null, \"\t\");\n    if (text === \"{}\") {\n      return \"{$1}\" + separatorAfter;\n    } else if (text === \"[]\") {\n      return \"[$1]\" + separatorAfter;\n    }\n    return this.getInsertTextForPlainText(text + separatorAfter);\n  }\n  getInsertTextForSnippetValue(value, separatorAfter) {\n    const replacer = value2 => {\n      if (typeof value2 === \"string\") {\n        if (value2[0] === \"^\") {\n          return value2.substr(1);\n        }\n      }\n      return JSON.stringify(value2);\n    };\n    return stringifyObject(value, \"\", replacer) + separatorAfter;\n  }\n  getInsertTextForGuessedValue(value, separatorAfter) {\n    switch (typeof value) {\n      case \"object\":\n        if (value === null) {\n          return \"${1:null}\" + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n      case \"string\":\n        let snippetValue = JSON.stringify(value);\n        snippetValue = snippetValue.substr(1, snippetValue.length - 2);\n        snippetValue = this.getInsertTextForPlainText(snippetValue);\n        return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n      case \"number\":\n      case \"boolean\":\n        return \"${1:\" + JSON.stringify(value) + \"}\" + separatorAfter;\n    }\n    return this.getInsertTextForValue(value, separatorAfter);\n  }\n  getSuggestionKind(type) {\n    if (Array.isArray(type)) {\n      const array = type;\n      type = array.length > 0 ? array[0] : void 0;\n    }\n    if (!type) {\n      return CompletionItemKind.Value;\n    }\n    switch (type) {\n      case \"string\":\n        return CompletionItemKind.Value;\n      case \"object\":\n        return CompletionItemKind.Module;\n      case \"property\":\n        return CompletionItemKind.Property;\n      default:\n        return CompletionItemKind.Value;\n    }\n  }\n  getLabelTextForMatchingNode(node, document) {\n    switch (node.type) {\n      case \"array\":\n        return \"[]\";\n      case \"object\":\n        return \"{}\";\n      default:\n        const content = document.getText().substr(node.offset, node.length);\n        return content;\n    }\n  }\n  getInsertTextForMatchingNode(node, document, separatorAfter) {\n    switch (node.type) {\n      case \"array\":\n        return this.getInsertTextForValue([], separatorAfter);\n      case \"object\":\n        return this.getInsertTextForValue({}, separatorAfter);\n      default:\n        const content = document.getText().substr(node.offset, node.length) + separatorAfter;\n        return this.getInsertTextForPlainText(content);\n    }\n  }\n  getInsertTextForProperty(key, propertySchema, addValue, separatorAfter) {\n    const propertyText = this.getInsertTextForValue(key, \"\");\n    if (!addValue) {\n      return propertyText;\n    }\n    const resultText = propertyText + \": \";\n    let value;\n    let nValueProposals = 0;\n    if (propertySchema) {\n      if (Array.isArray(propertySchema.defaultSnippets)) {\n        if (propertySchema.defaultSnippets.length === 1) {\n          const body = propertySchema.defaultSnippets[0].body;\n          if (isDefined(body)) {\n            value = this.getInsertTextForSnippetValue(body, \"\");\n          }\n        }\n        nValueProposals += propertySchema.defaultSnippets.length;\n      }\n      if (propertySchema.enum) {\n        if (!value && propertySchema.enum.length === 1) {\n          value = this.getInsertTextForGuessedValue(propertySchema.enum[0], \"\");\n        }\n        nValueProposals += propertySchema.enum.length;\n      }\n      if (isDefined(propertySchema.const)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.const, \"\");\n        }\n        nValueProposals++;\n      }\n      if (isDefined(propertySchema.default)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.default, \"\");\n        }\n        nValueProposals++;\n      }\n      if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.examples[0], \"\");\n        }\n        nValueProposals += propertySchema.examples.length;\n      }\n      if (nValueProposals === 0) {\n        let type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n        if (!type) {\n          if (propertySchema.properties) {\n            type = \"object\";\n          } else if (propertySchema.items) {\n            type = \"array\";\n          }\n        }\n        switch (type) {\n          case \"boolean\":\n            value = \"$1\";\n            break;\n          case \"string\":\n            value = '\"$1\"';\n            break;\n          case \"object\":\n            value = \"{$1}\";\n            break;\n          case \"array\":\n            value = \"[$1]\";\n            break;\n          case \"number\":\n          case \"integer\":\n            value = \"${1:0}\";\n            break;\n          case \"null\":\n            value = \"${1:null}\";\n            break;\n          default:\n            return propertyText;\n        }\n      }\n    }\n    if (!value || nValueProposals > 1) {\n      value = \"$1\";\n    }\n    return resultText + value + separatorAfter;\n  }\n  getCurrentWord(document, offset) {\n    let i = offset - 1;\n    const text = document.getText();\n    while (i >= 0 && ' \t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n      i--;\n    }\n    return text.substring(i + 1, offset);\n  }\n  evaluateSeparatorAfter(document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    scanner.setPosition(offset);\n    const token = scanner.scan();\n    switch (token) {\n      case 5:\n      case 2:\n      case 4:\n      case 17:\n        return \"\";\n      default:\n        return \",\";\n    }\n  }\n  findItemAtOffset(node, document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    const children = node.items;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (offset > child.offset + child.length) {\n        scanner.setPosition(child.offset + child.length);\n        const token = scanner.scan();\n        if (token === 5 && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n          return i + 1;\n        }\n        return i;\n      } else if (offset >= child.offset) {\n        return i;\n      }\n    }\n    return 0;\n  }\n  isInComment(document, start, offset) {\n    const scanner = createScanner2(document.getText(), false);\n    scanner.setPosition(start);\n    let token = scanner.scan();\n    while (token !== 17 && scanner.getTokenOffset() + scanner.getTokenLength() < offset) {\n      token = scanner.scan();\n    }\n    return (token === 12 || token === 13) && scanner.getTokenOffset() <= offset;\n  }\n  fromMarkup(markupString) {\n    if (markupString && this.doesSupportMarkdown()) {\n      return {\n        kind: MarkupKind.Markdown,\n        value: markupString\n      };\n    }\n    return void 0;\n  }\n  doesSupportMarkdown() {\n    if (!isDefined(this.supportsMarkdown)) {\n      const documentationFormat = this.clientCapabilities.textDocument?.completion?.completionItem?.documentationFormat;\n      this.supportsMarkdown = Array.isArray(documentationFormat) && documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n    }\n    return this.supportsMarkdown;\n  }\n  doesSupportsCommitCharacters() {\n    if (!isDefined(this.supportsCommitCharacters)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.commitCharactersSupport;\n    }\n    return this.supportsCommitCharacters;\n  }\n  doesSupportsLabelDetails() {\n    if (!isDefined(this.labelDetailsSupport)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.labelDetailsSupport;\n    }\n    return this.labelDetailsSupport;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js\nvar JSONHover = class {\n  constructor(schemaService, contributions = [], promiseConstructor) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promise = promiseConstructor || Promise;\n  }\n  doHover(document, position, doc) {\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset);\n    if (!node || (node.type === \"object\" || node.type === \"array\") && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n      return this.promise.resolve(null);\n    }\n    const hoverRangeNode = node;\n    if (node.type === \"string\") {\n      const parent = node.parent;\n      if (parent && parent.type === \"property\" && parent.keyNode === node) {\n        node = parent.valueNode;\n        if (!node) {\n          return this.promise.resolve(null);\n        }\n      }\n    }\n    const hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n    const createHover = contents => {\n      const result = {\n        contents,\n        range: hoverRange\n      };\n      return result;\n    };\n    const location = getNodePath3(node);\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const contribution = this.contributions[i];\n      const promise = contribution.getInfoContribution(document.uri, location);\n      if (promise) {\n        return promise.then(htmlContent => createHover(htmlContent));\n      }\n    }\n    return this.schemaService.getSchemaForResource(document.uri, doc).then(schema => {\n      if (schema && node) {\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        let title = void 0;\n        let markdownDescription = void 0;\n        let markdownEnumValueDescription = void 0,\n          enumValue = void 0;\n        matchingSchemas.every(s => {\n          if (s.node === node && !s.inverted && s.schema) {\n            title = title || s.schema.title;\n            markdownDescription = markdownDescription || s.schema.markdownDescription || toMarkdown(s.schema.description);\n            if (s.schema.enum) {\n              const idx = s.schema.enum.indexOf(getNodeValue3(node));\n              if (s.schema.markdownEnumDescriptions) {\n                markdownEnumValueDescription = s.schema.markdownEnumDescriptions[idx];\n              } else if (s.schema.enumDescriptions) {\n                markdownEnumValueDescription = toMarkdown(s.schema.enumDescriptions[idx]);\n              }\n              if (markdownEnumValueDescription) {\n                enumValue = s.schema.enum[idx];\n                if (typeof enumValue !== \"string\") {\n                  enumValue = JSON.stringify(enumValue);\n                }\n              }\n            }\n          }\n          return true;\n        });\n        let result = \"\";\n        if (title) {\n          result = toMarkdown(title);\n        }\n        if (markdownDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += markdownDescription;\n        }\n        if (markdownEnumValueDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += `\\`${toMarkdownCodeBlock(enumValue)}\\`: ${markdownEnumValueDescription}`;\n        }\n        return createHover([result]);\n      }\n      return null;\n    });\n  }\n};\nfunction toMarkdown(plain) {\n  if (plain) {\n    const res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, \"$1\\n\\n$3\");\n    return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  return void 0;\n}\nfunction toMarkdownCodeBlock(content) {\n  if (content.indexOf(\"`\") !== -1) {\n    return \"`` \" + content + \" ``\";\n  }\n  return content;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js\nvar JSONValidation = class {\n  constructor(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n  configure(raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate !== false;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  }\n  doValidation(textDocument, jsonDocument, documentSettings, schema) {\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n    const diagnostics = [];\n    const added = {};\n    const addProblem = problem => {\n      const signature = problem.range.start.line + \" \" + problem.range.start.character + \" \" + problem.message;\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n    const getDiagnostics = schema2 => {\n      let trailingCommaSeverity = documentSettings?.trailingCommas ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      let commentSeverity = documentSettings?.comments ? toDiagnosticSeverity(documentSettings.comments) : this.commentSeverity;\n      let schemaValidation = documentSettings?.schemaValidation ? toDiagnosticSeverity(documentSettings.schemaValidation) : DiagnosticSeverity.Warning;\n      let schemaRequest = documentSettings?.schemaRequest ? toDiagnosticSeverity(documentSettings.schemaRequest) : DiagnosticSeverity.Warning;\n      if (schema2) {\n        const addSchemaProblem = (errorMessage, errorCode) => {\n          if (jsonDocument.root && schemaRequest) {\n            const astRoot = jsonDocument.root;\n            const property = astRoot.type === \"object\" ? astRoot.properties[0] : void 0;\n            if (property && property.keyNode.value === \"$schema\") {\n              const node = property.valueNode || property;\n              const range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            } else {\n              const range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            }\n          }\n        };\n        if (schema2.errors.length) {\n          addSchemaProblem(schema2.errors[0], ErrorCode.SchemaResolveError);\n        } else if (schemaValidation) {\n          for (const warning of schema2.warnings) {\n            addSchemaProblem(warning, ErrorCode.SchemaUnsupportedFeature);\n          }\n          const semanticErrors = jsonDocument.validate(textDocument, schema2.schema, schemaValidation, documentSettings?.schemaDraft);\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n        if (schemaAllowsComments(schema2.schema)) {\n          commentSeverity = void 0;\n        }\n        if (schemaAllowsTrailingCommas(schema2.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n      for (const p of jsonDocument.syntaxErrors) {\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== \"number\") {\n            continue;\n          }\n          p.severity = trailingCommaSeverity;\n        }\n        addProblem(p);\n      }\n      if (typeof commentSeverity === \"number\") {\n        const message = t(\"Comments are not permitted in JSON.\");\n        jsonDocument.comments.forEach(c => {\n          addProblem(Diagnostic.create(c, message, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n      return diagnostics;\n    };\n    if (schema) {\n      const uri = schema.id || \"schemaservice://untitled/\" + idCounter++;\n      const handle = this.jsonSchemaService.registerExternalSchema({\n        uri,\n        schema\n      });\n      return handle.getResolvedSchema().then(resolvedSchema => {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(schema2 => {\n      return getDiagnostics(schema2);\n    });\n  }\n  getLanguageStatus(textDocument, jsonDocument) {\n    return {\n      schemas: this.jsonSchemaService.getSchemaURIsForResource(textDocument.uri, jsonDocument)\n    };\n  }\n};\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsComments(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n    const deprSchemaRef = schemaRef;\n    if (isBoolean(deprSchemaRef[\"allowsTrailingCommas\"])) {\n      return deprSchemaRef[\"allowsTrailingCommas\"];\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsTrailingCommas(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case \"error\":\n      return DiagnosticSeverity.Error;\n    case \"warning\":\n      return DiagnosticSeverity.Warning;\n    case \"ignore\":\n      return void 0;\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/colors.js\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n  if (charCode < Digit0) {\n    return 0;\n  }\n  if (charCode <= Digit9) {\n    return charCode - Digit0;\n  }\n  if (charCode < a) {\n    charCode += a - A;\n  }\n  if (charCode >= a && charCode <= f) {\n    return charCode - a + 10;\n  }\n  return 0;\n}\nfunction colorFromHex(text) {\n  if (text[0] !== \"#\") {\n    return void 0;\n  }\n  switch (text.length) {\n    case 4:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: 1\n      };\n    case 5:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: hexDigit(text.charCodeAt(4)) * 17 / 255\n      };\n    case 7:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: 1\n      };\n    case 9:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: (hexDigit(text.charCodeAt(7)) * 16 + hexDigit(text.charCodeAt(8))) / 255\n      };\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js\nvar JSONDocumentSymbols = class {\n  constructor(schemaService) {\n    this.schemaService = schemaService;\n  }\n  findDocumentSymbols(document, doc, context = {\n    resultLimit: Number.MAX_VALUE\n  }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const location = Location.create(document.uri, getRange(document, item));\n                result2.push({\n                  name: getName(property.valueNode),\n                  kind: SymbolKind.Function,\n                  location\n                });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const toVisit = [{\n      node: root,\n      containerName: \"\"\n    }];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const result = [];\n    const collectOutlineEntries = (node, containerName) => {\n      if (node.type === \"array\") {\n        node.items.forEach(node2 => {\n          if (node2) {\n            toVisit.push({\n              node: node2,\n              containerName\n            });\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach(property => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const location = Location.create(document.uri, getRange(document, property));\n              const childContainerName = containerName ? containerName + \".\" + property.keyNode.value : property.keyNode.value;\n              result.push({\n                name: this.getKeyLabel(property),\n                kind: this.getSymbolKind(valueNode.type),\n                location,\n                containerName\n              });\n              toVisit.push({\n                node: valueNode,\n                containerName: childContainerName\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.containerName);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  findDocumentSymbols2(document, doc, context = {\n    resultLimit: Number.MAX_VALUE\n  }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const range = getRange(document, item);\n                const selectionRange = getRange(document, property.keyNode);\n                result2.push({\n                  name: getName(property.valueNode),\n                  kind: SymbolKind.Function,\n                  range,\n                  selectionRange\n                });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const result = [];\n    const toVisit = [{\n      node: root,\n      result\n    }];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const collectOutlineEntries = (node, result2) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2, index) => {\n          if (node2) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, node2);\n              const selectionRange = range;\n              const name = String(index);\n              const symbol = {\n                name,\n                kind: this.getSymbolKind(node2.type),\n                range,\n                selectionRange,\n                children: []\n              };\n              result2.push(symbol);\n              toVisit.push({\n                result: symbol.children,\n                node: node2\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach(property => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, property);\n              const selectionRange = getRange(document, property.keyNode);\n              const children = [];\n              const symbol = {\n                name: this.getKeyLabel(property),\n                kind: this.getSymbolKind(valueNode.type),\n                range,\n                selectionRange,\n                children,\n                detail: this.getDetail(valueNode)\n              };\n              result2.push(symbol);\n              toVisit.push({\n                result: children,\n                node: valueNode\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.result);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  getSymbolKind(nodeType) {\n    switch (nodeType) {\n      case \"object\":\n        return SymbolKind.Module;\n      case \"string\":\n        return SymbolKind.String;\n      case \"number\":\n        return SymbolKind.Number;\n      case \"array\":\n        return SymbolKind.Array;\n      case \"boolean\":\n        return SymbolKind.Boolean;\n      default:\n        return SymbolKind.Variable;\n    }\n  }\n  getKeyLabel(property) {\n    let name = property.keyNode.value;\n    if (name) {\n      name = name.replace(/[\\n]/g, \"\\u21B5\");\n    }\n    if (name && name.trim()) {\n      return name;\n    }\n    return `\"${name}\"`;\n  }\n  getDetail(node) {\n    if (!node) {\n      return void 0;\n    }\n    if (node.type === \"boolean\" || node.type === \"number\" || node.type === \"null\" || node.type === \"string\") {\n      return String(node.value);\n    } else {\n      if (node.type === \"array\") {\n        return node.children.length ? void 0 : \"[]\";\n      } else if (node.type === \"object\") {\n        return node.children.length ? void 0 : \"{}\";\n      }\n    }\n    return void 0;\n  }\n  findDocumentColors(document, doc, context) {\n    return this.schemaService.getSchemaForResource(document.uri, doc).then(schema => {\n      const result = [];\n      if (schema) {\n        let limit = context && typeof context.resultLimit === \"number\" ? context.resultLimit : Number.MAX_VALUE;\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema);\n        const visitedNode = {};\n        for (const s of matchingSchemas) {\n          if (!s.inverted && s.schema && (s.schema.format === \"color\" || s.schema.format === \"color-hex\") && s.node && s.node.type === \"string\") {\n            const nodeId = String(s.node.offset);\n            if (!visitedNode[nodeId]) {\n              const color = colorFromHex(getNodeValue3(s.node));\n              if (color) {\n                const range = getRange(document, s.node);\n                result.push({\n                  color,\n                  range\n                });\n              }\n              visitedNode[nodeId] = true;\n              limit--;\n              if (limit <= 0) {\n                if (context && context.onResultLimitExceeded) {\n                  context.onResultLimitExceeded(document.uri);\n                }\n                return result;\n              }\n            }\n          }\n        }\n      }\n      return result;\n    });\n  }\n  getColorPresentations(document, doc, color, range) {\n    const result = [];\n    const red256 = Math.round(color.red * 255),\n      green256 = Math.round(color.green * 255),\n      blue256 = Math.round(color.blue * 255);\n    function toTwoDigitHex(n) {\n      const r = n.toString(16);\n      return r.length !== 2 ? \"0\" + r : r;\n    }\n    let label;\n    if (color.alpha === 1) {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}`;\n    } else {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}${toTwoDigitHex(Math.round(color.alpha * 255))}`;\n    }\n    result.push({\n      label,\n      textEdit: TextEdit.replace(range, JSON.stringify(label))\n    });\n    return result;\n  }\n};\nfunction getRange(document, node) {\n  return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\nfunction getName(node) {\n  return getNodeValue3(node) || t(\"<empty>\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/configuration.js\nvar schemaContributions = {\n  schemaAssociations: [],\n  schemas: {\n    // bundle the schema-schema to include (localized) descriptions\n    \"http://json-schema.org/draft-04/schema#\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#\"\n          }\n        },\n        \"positiveInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"positiveIntegerDefault0\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveInteger\"\n          }, {\n            \"default\": 0\n          }]\n        },\n        \"simpleTypes\": {\n          \"type\": \"string\",\n          \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveInteger\"\n          }]\n        },\n        \"minLength\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n          }]\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n          \"anyOf\": [{\n            \"type\": \"boolean\"\n          }, {\n            \"$ref\": \"#\"\n          }],\n          \"default\": {}\n        },\n        \"items\": {\n          \"anyOf\": [{\n            \"$ref\": \"#\"\n          }, {\n            \"$ref\": \"#/definitions/schemaArray\"\n          }],\n          \"default\": {}\n        },\n        \"maxItems\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveInteger\"\n          }]\n        },\n        \"minItems\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n          }]\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveInteger\"\n          }]\n        },\n        \"minProperties\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n          }]\n        },\n        \"required\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/stringArray\"\n          }]\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [{\n            \"type\": \"boolean\"\n          }, {\n            \"$ref\": \"#\"\n          }],\n          \"default\": {}\n        },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [{\n              \"$ref\": \"#\"\n            }, {\n              \"$ref\": \"#/definitions/stringArray\"\n            }]\n          }\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [{\n            \"$ref\": \"#/definitions/simpleTypes\"\n          }, {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/simpleTypes\"\n            },\n            \"minItems\": 1,\n            \"uniqueItems\": true\n          }]\n        },\n        \"format\": {\n          \"anyOf\": [{\n            \"type\": \"string\",\n            \"enum\": [\"date-time\", \"uri\", \"email\", \"hostname\", \"ipv4\", \"ipv6\", \"regex\"]\n          }, {\n            \"type\": \"string\"\n          }]\n        },\n        \"allOf\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/schemaArray\"\n          }]\n        },\n        \"anyOf\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/schemaArray\"\n          }]\n        },\n        \"oneOf\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/schemaArray\"\n          }]\n        },\n        \"not\": {\n          \"allOf\": [{\n            \"$ref\": \"#\"\n          }]\n        }\n      },\n      \"dependencies\": {\n        \"exclusiveMaximum\": [\"maximum\"],\n        \"exclusiveMinimum\": [\"minimum\"]\n      },\n      \"default\": {}\n    },\n    \"http://json-schema.org/draft-07/schema#\": {\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#\"\n          }\n        },\n        \"nonNegativeInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"nonNegativeIntegerDefault0\": {\n          \"allOf\": [{\n            \"$ref\": \"#/definitions/nonNegativeInteger\"\n          }, {\n            \"default\": 0\n          }]\n        },\n        \"simpleTypes\": {\n          \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"uniqueItems\": true,\n          \"default\": []\n        }\n      },\n      \"type\": [\"object\", \"boolean\"],\n      \"properties\": {\n        \"$id\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$comment\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": true,\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"examples\": {\n          \"type\": \"array\",\n          \"items\": true\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"exclusiveMinimum\": 0\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"number\"\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"number\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/nonNegativeInteger\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n          \"$ref\": \"#\"\n        },\n        \"items\": {\n          \"anyOf\": [{\n            \"$ref\": \"#\"\n          }, {\n            \"$ref\": \"#/definitions/schemaArray\"\n          }],\n          \"default\": true\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/nonNegativeInteger\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"contains\": {\n          \"$ref\": \"#\"\n        },\n        \"maxProperties\": {\n          \"$ref\": \"#/definitions/nonNegativeInteger\"\n        },\n        \"minProperties\": {\n          \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n        },\n        \"required\": {\n          \"$ref\": \"#/definitions/stringArray\"\n        },\n        \"additionalProperties\": {\n          \"$ref\": \"#\"\n        },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"propertyNames\": {\n            \"format\": \"regex\"\n          },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [{\n              \"$ref\": \"#\"\n            }, {\n              \"$ref\": \"#/definitions/stringArray\"\n            }]\n          }\n        },\n        \"propertyNames\": {\n          \"$ref\": \"#\"\n        },\n        \"const\": true,\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": true,\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [{\n            \"$ref\": \"#/definitions/simpleTypes\"\n          }, {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/simpleTypes\"\n            },\n            \"minItems\": 1,\n            \"uniqueItems\": true\n          }]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"contentMediaType\": {\n          \"type\": \"string\"\n        },\n        \"contentEncoding\": {\n          \"type\": \"string\"\n        },\n        \"if\": {\n          \"$ref\": \"#\"\n        },\n        \"then\": {\n          \"$ref\": \"#\"\n        },\n        \"else\": {\n          \"$ref\": \"#\"\n        },\n        \"allOf\": {\n          \"$ref\": \"#/definitions/schemaArray\"\n        },\n        \"anyOf\": {\n          \"$ref\": \"#/definitions/schemaArray\"\n        },\n        \"oneOf\": {\n          \"$ref\": \"#/definitions/schemaArray\"\n        },\n        \"not\": {\n          \"$ref\": \"#\"\n        }\n      },\n      \"default\": true\n    }\n  }\n};\nvar descriptions = {\n  id: t(\"A unique identifier for the schema.\"),\n  $schema: t(\"The schema to verify this document against.\"),\n  title: t(\"A descriptive title of the element.\"),\n  description: t(\"A long description of the element. Used in hover menus and suggestions.\"),\n  default: t(\"A default value. Used by suggestions.\"),\n  multipleOf: t(\"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n  maximum: t(\"The maximum numerical value, inclusive by default.\"),\n  exclusiveMaximum: t(\"Makes the maximum property exclusive.\"),\n  minimum: t(\"The minimum numerical value, inclusive by default.\"),\n  exclusiveMinimum: t(\"Makes the minimum property exclusive.\"),\n  maxLength: t(\"The maximum length of a string.\"),\n  minLength: t(\"The minimum length of a string.\"),\n  pattern: t(\"A regular expression to match the string against. It is not implicitly anchored.\"),\n  additionalItems: t(\"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n  items: t(\"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n  maxItems: t(\"The maximum number of items that can be inside an array. Inclusive.\"),\n  minItems: t(\"The minimum number of items that can be inside an array. Inclusive.\"),\n  uniqueItems: t(\"If all of the items in the array must be unique. Defaults to false.\"),\n  maxProperties: t(\"The maximum number of properties an object can have. Inclusive.\"),\n  minProperties: t(\"The minimum number of properties an object can have. Inclusive.\"),\n  required: t(\"An array of strings that lists the names of all properties required on this object.\"),\n  additionalProperties: t(\"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n  definitions: t(\"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n  properties: t(\"A map of property names to schemas for each property.\"),\n  patternProperties: t(\"A map of regular expressions on property names to schemas for matching properties.\"),\n  dependencies: t(\"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n  enum: t(\"The set of literal values that are valid.\"),\n  type: t(\"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n  format: t(\"Describes the format expected for the value.\"),\n  allOf: t(\"An array of schemas, all of which must match.\"),\n  anyOf: t(\"An array of schemas, where at least one must match.\"),\n  oneOf: t(\"An array of schemas, exactly one of which must match.\"),\n  not: t(\"A schema which must not match.\"),\n  $id: t(\"A unique identifier for the schema.\"),\n  $ref: t(\"Reference a definition hosted on any location.\"),\n  $comment: t(\"Comments from schema authors to readers or maintainers of the schema.\"),\n  readOnly: t(\"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n  examples: t(\"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n  contains: t('An array instance is valid against \"contains\" if at least one of its elements is valid against the given schema.'),\n  propertyNames: t(\"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n  const: t(\"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n  contentMediaType: t(\"Describes the media type of a string property.\"),\n  contentEncoding: t(\"Describes the content encoding of a string property.\"),\n  if: t('The validation outcome of the \"if\" subschema controls which of the \"then\" or \"else\" keywords are evaluated.'),\n  then: t('The \"if\" subschema is used for validation when the \"if\" subschema succeeds.'),\n  else: t('The \"else\" subschema is used for validation when the \"if\" subschema fails.')\n};\nfor (const schemaName in schemaContributions.schemas) {\n  const schema = schemaContributions.schemas[schemaName];\n  for (const property in schema.properties) {\n    let propertyObject = schema.properties[property];\n    if (typeof propertyObject === \"boolean\") {\n      propertyObject = schema.properties[property] = {};\n    }\n    const description = descriptions[property];\n    if (description) {\n      propertyObject[\"description\"] = description;\n    }\n  }\n}\n\n// node_modules/vscode-uri/lib/esm/index.mjs\nvar LIB;\n(() => {\n  \"use strict\";\n\n  var t2 = {\n      470: t3 => {\n        function e2(t4) {\n          if (\"string\" != typeof t4) throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(t4));\n        }\n        function r2(t4, e3) {\n          for (var r3, n3 = \"\", i = 0, o = -1, s = 0, h = 0; h <= t4.length; ++h) {\n            if (h < t4.length) r3 = t4.charCodeAt(h);else {\n              if (47 === r3) break;\n              r3 = 47;\n            }\n            if (47 === r3) {\n              if (o === h - 1 || 1 === s) ;else if (o !== h - 1 && 2 === s) {\n                if (n3.length < 2 || 2 !== i || 46 !== n3.charCodeAt(n3.length - 1) || 46 !== n3.charCodeAt(n3.length - 2)) {\n                  if (n3.length > 2) {\n                    var a2 = n3.lastIndexOf(\"/\");\n                    if (a2 !== n3.length - 1) {\n                      -1 === a2 ? (n3 = \"\", i = 0) : i = (n3 = n3.slice(0, a2)).length - 1 - n3.lastIndexOf(\"/\"), o = h, s = 0;\n                      continue;\n                    }\n                  } else if (2 === n3.length || 1 === n3.length) {\n                    n3 = \"\", i = 0, o = h, s = 0;\n                    continue;\n                  }\n                }\n                e3 && (n3.length > 0 ? n3 += \"/..\" : n3 = \"..\", i = 2);\n              } else n3.length > 0 ? n3 += \"/\" + t4.slice(o + 1, h) : n3 = t4.slice(o + 1, h), i = h - o - 1;\n              o = h, s = 0;\n            } else 46 === r3 && -1 !== s ? ++s : s = -1;\n          }\n          return n3;\n        }\n        var n2 = {\n          resolve: function () {\n            for (var t4, n3 = \"\", i = false, o = arguments.length - 1; o >= -1 && !i; o--) {\n              var s;\n              o >= 0 ? s = arguments[o] : (void 0 === t4 && (t4 = process.cwd()), s = t4), e2(s), 0 !== s.length && (n3 = s + \"/\" + n3, i = 47 === s.charCodeAt(0));\n            }\n            return n3 = r2(n3, !i), i ? n3.length > 0 ? \"/\" + n3 : \"/\" : n3.length > 0 ? n3 : \".\";\n          },\n          normalize: function (t4) {\n            if (e2(t4), 0 === t4.length) return \".\";\n            var n3 = 47 === t4.charCodeAt(0),\n              i = 47 === t4.charCodeAt(t4.length - 1);\n            return 0 !== (t4 = r2(t4, !n3)).length || n3 || (t4 = \".\"), t4.length > 0 && i && (t4 += \"/\"), n3 ? \"/\" + t4 : t4;\n          },\n          isAbsolute: function (t4) {\n            return e2(t4), t4.length > 0 && 47 === t4.charCodeAt(0);\n          },\n          join: function () {\n            if (0 === arguments.length) return \".\";\n            for (var t4, r3 = 0; r3 < arguments.length; ++r3) {\n              var i = arguments[r3];\n              e2(i), i.length > 0 && (void 0 === t4 ? t4 = i : t4 += \"/\" + i);\n            }\n            return void 0 === t4 ? \".\" : n2.normalize(t4);\n          },\n          relative: function (t4, r3) {\n            if (e2(t4), e2(r3), t4 === r3) return \"\";\n            if ((t4 = n2.resolve(t4)) === (r3 = n2.resolve(r3))) return \"\";\n            for (var i = 1; i < t4.length && 47 === t4.charCodeAt(i); ++i);\n            for (var o = t4.length, s = o - i, h = 1; h < r3.length && 47 === r3.charCodeAt(h); ++h);\n            for (var a2 = r3.length - h, c = s < a2 ? s : a2, f2 = -1, u = 0; u <= c; ++u) {\n              if (u === c) {\n                if (a2 > c) {\n                  if (47 === r3.charCodeAt(h + u)) return r3.slice(h + u + 1);\n                  if (0 === u) return r3.slice(h + u);\n                } else s > c && (47 === t4.charCodeAt(i + u) ? f2 = u : 0 === u && (f2 = 0));\n                break;\n              }\n              var l = t4.charCodeAt(i + u);\n              if (l !== r3.charCodeAt(h + u)) break;\n              47 === l && (f2 = u);\n            }\n            var g = \"\";\n            for (u = i + f2 + 1; u <= o; ++u) u !== o && 47 !== t4.charCodeAt(u) || (0 === g.length ? g += \"..\" : g += \"/..\");\n            return g.length > 0 ? g + r3.slice(h + f2) : (h += f2, 47 === r3.charCodeAt(h) && ++h, r3.slice(h));\n          },\n          _makeLong: function (t4) {\n            return t4;\n          },\n          dirname: function (t4) {\n            if (e2(t4), 0 === t4.length) return \".\";\n            for (var r3 = t4.charCodeAt(0), n3 = 47 === r3, i = -1, o = true, s = t4.length - 1; s >= 1; --s) if (47 === (r3 = t4.charCodeAt(s))) {\n              if (!o) {\n                i = s;\n                break;\n              }\n            } else o = false;\n            return -1 === i ? n3 ? \"/\" : \".\" : n3 && 1 === i ? \"//\" : t4.slice(0, i);\n          },\n          basename: function (t4, r3) {\n            if (void 0 !== r3 && \"string\" != typeof r3) throw new TypeError('\"ext\" argument must be a string');\n            e2(t4);\n            var n3,\n              i = 0,\n              o = -1,\n              s = true;\n            if (void 0 !== r3 && r3.length > 0 && r3.length <= t4.length) {\n              if (r3.length === t4.length && r3 === t4) return \"\";\n              var h = r3.length - 1,\n                a2 = -1;\n              for (n3 = t4.length - 1; n3 >= 0; --n3) {\n                var c = t4.charCodeAt(n3);\n                if (47 === c) {\n                  if (!s) {\n                    i = n3 + 1;\n                    break;\n                  }\n                } else -1 === a2 && (s = false, a2 = n3 + 1), h >= 0 && (c === r3.charCodeAt(h) ? -1 == --h && (o = n3) : (h = -1, o = a2));\n              }\n              return i === o ? o = a2 : -1 === o && (o = t4.length), t4.slice(i, o);\n            }\n            for (n3 = t4.length - 1; n3 >= 0; --n3) if (47 === t4.charCodeAt(n3)) {\n              if (!s) {\n                i = n3 + 1;\n                break;\n              }\n            } else -1 === o && (s = false, o = n3 + 1);\n            return -1 === o ? \"\" : t4.slice(i, o);\n          },\n          extname: function (t4) {\n            e2(t4);\n            for (var r3 = -1, n3 = 0, i = -1, o = true, s = 0, h = t4.length - 1; h >= 0; --h) {\n              var a2 = t4.charCodeAt(h);\n              if (47 !== a2) -1 === i && (o = false, i = h + 1), 46 === a2 ? -1 === r3 ? r3 = h : 1 !== s && (s = 1) : -1 !== r3 && (s = -1);else if (!o) {\n                n3 = h + 1;\n                break;\n              }\n            }\n            return -1 === r3 || -1 === i || 0 === s || 1 === s && r3 === i - 1 && r3 === n3 + 1 ? \"\" : t4.slice(r3, i);\n          },\n          format: function (t4) {\n            if (null === t4 || \"object\" != typeof t4) throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof t4);\n            return function (t5, e3) {\n              var r3 = e3.dir || e3.root,\n                n3 = e3.base || (e3.name || \"\") + (e3.ext || \"\");\n              return r3 ? r3 === e3.root ? r3 + n3 : r3 + \"/\" + n3 : n3;\n            }(0, t4);\n          },\n          parse: function (t4) {\n            e2(t4);\n            var r3 = {\n              root: \"\",\n              dir: \"\",\n              base: \"\",\n              ext: \"\",\n              name: \"\"\n            };\n            if (0 === t4.length) return r3;\n            var n3,\n              i = t4.charCodeAt(0),\n              o = 47 === i;\n            o ? (r3.root = \"/\", n3 = 1) : n3 = 0;\n            for (var s = -1, h = 0, a2 = -1, c = true, f2 = t4.length - 1, u = 0; f2 >= n3; --f2) if (47 !== (i = t4.charCodeAt(f2))) -1 === a2 && (c = false, a2 = f2 + 1), 46 === i ? -1 === s ? s = f2 : 1 !== u && (u = 1) : -1 !== s && (u = -1);else if (!c) {\n              h = f2 + 1;\n              break;\n            }\n            return -1 === s || -1 === a2 || 0 === u || 1 === u && s === a2 - 1 && s === h + 1 ? -1 !== a2 && (r3.base = r3.name = 0 === h && o ? t4.slice(1, a2) : t4.slice(h, a2)) : (0 === h && o ? (r3.name = t4.slice(1, s), r3.base = t4.slice(1, a2)) : (r3.name = t4.slice(h, s), r3.base = t4.slice(h, a2)), r3.ext = t4.slice(s, a2)), h > 0 ? r3.dir = t4.slice(0, h - 1) : o && (r3.dir = \"/\"), r3;\n          },\n          sep: \"/\",\n          delimiter: \":\",\n          win32: null,\n          posix: null\n        };\n        n2.posix = n2, t3.exports = n2;\n      }\n    },\n    e = {};\n  function r(n2) {\n    var i = e[n2];\n    if (void 0 !== i) return i.exports;\n    var o = e[n2] = {\n      exports: {}\n    };\n    return t2[n2](o, o.exports, r), o.exports;\n  }\n  r.d = (t3, e2) => {\n    for (var n2 in e2) r.o(e2, n2) && !r.o(t3, n2) && Object.defineProperty(t3, n2, {\n      enumerable: true,\n      get: e2[n2]\n    });\n  }, r.o = (t3, e2) => Object.prototype.hasOwnProperty.call(t3, e2), r.r = t3 => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(t3, \"__esModule\", {\n      value: true\n    });\n  };\n  var n = {};\n  (() => {\n    let t3;\n    if (r.r(n), r.d(n, {\n      URI: () => f2,\n      Utils: () => P\n    }), \"object\" == typeof process) t3 = \"win32\" === process.platform;else if (\"object\" == typeof navigator) {\n      let e3 = navigator.userAgent;\n      t3 = e3.indexOf(\"Windows\") >= 0;\n    }\n    const e2 = /^\\w[\\w\\d+.-]*$/,\n      i = /^\\//,\n      o = /^\\/\\//;\n    function s(t4, r2) {\n      if (!t4.scheme && r2) throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t4.authority}\", path: \"${t4.path}\", query: \"${t4.query}\", fragment: \"${t4.fragment}\"}`);\n      if (t4.scheme && !e2.test(t4.scheme)) throw new Error(\"[UriError]: Scheme contains illegal characters.\");\n      if (t4.path) {\n        if (t4.authority) {\n          if (!i.test(t4.path)) throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n        } else if (o.test(t4.path)) throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n    const h = \"\",\n      a2 = \"/\",\n      c = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    class f2 {\n      static isUri(t4) {\n        return t4 instanceof f2 || !!t4 && \"string\" == typeof t4.authority && \"string\" == typeof t4.fragment && \"string\" == typeof t4.path && \"string\" == typeof t4.query && \"string\" == typeof t4.scheme && \"string\" == typeof t4.fsPath && \"function\" == typeof t4.with && \"function\" == typeof t4.toString;\n      }\n      constructor(t4, e3, r2, n2, i2, o2 = false) {\n        _defineProperty(this, \"scheme\", void 0);\n        _defineProperty(this, \"authority\", void 0);\n        _defineProperty(this, \"path\", void 0);\n        _defineProperty(this, \"query\", void 0);\n        _defineProperty(this, \"fragment\", void 0);\n        \"object\" == typeof t4 ? (this.scheme = t4.scheme || h, this.authority = t4.authority || h, this.path = t4.path || h, this.query = t4.query || h, this.fragment = t4.fragment || h) : (this.scheme = /* @__PURE__ */function (t5, e4) {\n          return t5 || e4 ? t5 : \"file\";\n        }(t4, o2), this.authority = e3 || h, this.path = function (t5, e4) {\n          switch (t5) {\n            case \"https\":\n            case \"http\":\n            case \"file\":\n              e4 ? e4[0] !== a2 && (e4 = a2 + e4) : e4 = a2;\n          }\n          return e4;\n        }(this.scheme, r2 || h), this.query = n2 || h, this.fragment = i2 || h, s(this, o2));\n      }\n      get fsPath() {\n        return m(this, false);\n      }\n      with(t4) {\n        if (!t4) return this;\n        let {\n          scheme: e3,\n          authority: r2,\n          path: n2,\n          query: i2,\n          fragment: o2\n        } = t4;\n        return void 0 === e3 ? e3 = this.scheme : null === e3 && (e3 = h), void 0 === r2 ? r2 = this.authority : null === r2 && (r2 = h), void 0 === n2 ? n2 = this.path : null === n2 && (n2 = h), void 0 === i2 ? i2 = this.query : null === i2 && (i2 = h), void 0 === o2 ? o2 = this.fragment : null === o2 && (o2 = h), e3 === this.scheme && r2 === this.authority && n2 === this.path && i2 === this.query && o2 === this.fragment ? this : new l(e3, r2, n2, i2, o2);\n      }\n      static parse(t4, e3 = false) {\n        const r2 = c.exec(t4);\n        return r2 ? new l(r2[2] || h, C(r2[4] || h), C(r2[5] || h), C(r2[7] || h), C(r2[9] || h), e3) : new l(h, h, h, h, h);\n      }\n      static file(e3) {\n        let r2 = h;\n        if (t3 && (e3 = e3.replace(/\\\\/g, a2)), e3[0] === a2 && e3[1] === a2) {\n          const t4 = e3.indexOf(a2, 2);\n          -1 === t4 ? (r2 = e3.substring(2), e3 = a2) : (r2 = e3.substring(2, t4), e3 = e3.substring(t4) || a2);\n        }\n        return new l(\"file\", r2, e3, h, h);\n      }\n      static from(t4) {\n        const e3 = new l(t4.scheme, t4.authority, t4.path, t4.query, t4.fragment);\n        return s(e3, true), e3;\n      }\n      toString(t4 = false) {\n        return y(this, t4);\n      }\n      toJSON() {\n        return this;\n      }\n      static revive(t4) {\n        if (t4) {\n          if (t4 instanceof f2) return t4;\n          {\n            const e3 = new l(t4);\n            return e3._formatted = t4.external, e3._fsPath = t4._sep === u ? t4.fsPath : null, e3;\n          }\n        }\n        return t4;\n      }\n    }\n    const u = t3 ? 1 : void 0;\n    class l extends f2 {\n      constructor(...args) {\n        super(...args);\n        _defineProperty(this, \"_formatted\", null);\n        _defineProperty(this, \"_fsPath\", null);\n      }\n      get fsPath() {\n        return this._fsPath || (this._fsPath = m(this, false)), this._fsPath;\n      }\n      toString(t4 = false) {\n        return t4 ? y(this, true) : (this._formatted || (this._formatted = y(this, false)), this._formatted);\n      }\n      toJSON() {\n        const t4 = {\n          $mid: 1\n        };\n        return this._fsPath && (t4.fsPath = this._fsPath, t4._sep = u), this._formatted && (t4.external = this._formatted), this.path && (t4.path = this.path), this.scheme && (t4.scheme = this.scheme), this.authority && (t4.authority = this.authority), this.query && (t4.query = this.query), this.fragment && (t4.fragment = this.fragment), t4;\n      }\n    }\n    const g = {\n      58: \"%3A\",\n      47: \"%2F\",\n      63: \"%3F\",\n      35: \"%23\",\n      91: \"%5B\",\n      93: \"%5D\",\n      64: \"%40\",\n      33: \"%21\",\n      36: \"%24\",\n      38: \"%26\",\n      39: \"%27\",\n      40: \"%28\",\n      41: \"%29\",\n      42: \"%2A\",\n      43: \"%2B\",\n      44: \"%2C\",\n      59: \"%3B\",\n      61: \"%3D\",\n      32: \"%20\"\n    };\n    function d(t4, e3, r2) {\n      let n2,\n        i2 = -1;\n      for (let o2 = 0; o2 < t4.length; o2++) {\n        const s2 = t4.charCodeAt(o2);\n        if (s2 >= 97 && s2 <= 122 || s2 >= 65 && s2 <= 90 || s2 >= 48 && s2 <= 57 || 45 === s2 || 46 === s2 || 95 === s2 || 126 === s2 || e3 && 47 === s2 || r2 && 91 === s2 || r2 && 93 === s2 || r2 && 58 === s2) -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), void 0 !== n2 && (n2 += t4.charAt(o2));else {\n          void 0 === n2 && (n2 = t4.substr(0, o2));\n          const e4 = g[s2];\n          void 0 !== e4 ? (-1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), n2 += e4) : -1 === i2 && (i2 = o2);\n        }\n      }\n      return -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2))), void 0 !== n2 ? n2 : t4;\n    }\n    function p(t4) {\n      let e3;\n      for (let r2 = 0; r2 < t4.length; r2++) {\n        const n2 = t4.charCodeAt(r2);\n        35 === n2 || 63 === n2 ? (void 0 === e3 && (e3 = t4.substr(0, r2)), e3 += g[n2]) : void 0 !== e3 && (e3 += t4[r2]);\n      }\n      return void 0 !== e3 ? e3 : t4;\n    }\n    function m(e3, r2) {\n      let n2;\n      return n2 = e3.authority && e3.path.length > 1 && \"file\" === e3.scheme ? `//${e3.authority}${e3.path}` : 47 === e3.path.charCodeAt(0) && (e3.path.charCodeAt(1) >= 65 && e3.path.charCodeAt(1) <= 90 || e3.path.charCodeAt(1) >= 97 && e3.path.charCodeAt(1) <= 122) && 58 === e3.path.charCodeAt(2) ? r2 ? e3.path.substr(1) : e3.path[1].toLowerCase() + e3.path.substr(2) : e3.path, t3 && (n2 = n2.replace(/\\//g, \"\\\\\")), n2;\n    }\n    function y(t4, e3) {\n      const r2 = e3 ? p : d;\n      let n2 = \"\",\n        {\n          scheme: i2,\n          authority: o2,\n          path: s2,\n          query: h2,\n          fragment: c2\n        } = t4;\n      if (i2 && (n2 += i2, n2 += \":\"), (o2 || \"file\" === i2) && (n2 += a2, n2 += a2), o2) {\n        let t5 = o2.indexOf(\"@\");\n        if (-1 !== t5) {\n          const e4 = o2.substr(0, t5);\n          o2 = o2.substr(t5 + 1), t5 = e4.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(e4, false, false) : (n2 += r2(e4.substr(0, t5), false, false), n2 += \":\", n2 += r2(e4.substr(t5 + 1), false, true)), n2 += \"@\";\n        }\n        o2 = o2.toLowerCase(), t5 = o2.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(o2, false, true) : (n2 += r2(o2.substr(0, t5), false, true), n2 += o2.substr(t5));\n      }\n      if (s2) {\n        if (s2.length >= 3 && 47 === s2.charCodeAt(0) && 58 === s2.charCodeAt(2)) {\n          const t5 = s2.charCodeAt(1);\n          t5 >= 65 && t5 <= 90 && (s2 = `/${String.fromCharCode(t5 + 32)}:${s2.substr(3)}`);\n        } else if (s2.length >= 2 && 58 === s2.charCodeAt(1)) {\n          const t5 = s2.charCodeAt(0);\n          t5 >= 65 && t5 <= 90 && (s2 = `${String.fromCharCode(t5 + 32)}:${s2.substr(2)}`);\n        }\n        n2 += r2(s2, true, false);\n      }\n      return h2 && (n2 += \"?\", n2 += r2(h2, false, false)), c2 && (n2 += \"#\", n2 += e3 ? c2 : d(c2, false, false)), n2;\n    }\n    function v(t4) {\n      try {\n        return decodeURIComponent(t4);\n      } catch {\n        return t4.length > 3 ? t4.substr(0, 3) + v(t4.substr(3)) : t4;\n      }\n    }\n    const b = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n    function C(t4) {\n      return t4.match(b) ? t4.replace(b, t5 => v(t5)) : t4;\n    }\n    var A2 = r(470);\n    const w = A2.posix || A2,\n      x = \"/\";\n    var P;\n    !function (t4) {\n      t4.joinPath = function (t5, ...e3) {\n        return t5.with({\n          path: w.join(t5.path, ...e3)\n        });\n      }, t4.resolvePath = function (t5, ...e3) {\n        let r2 = t5.path,\n          n2 = false;\n        r2[0] !== x && (r2 = x + r2, n2 = true);\n        let i2 = w.resolve(r2, ...e3);\n        return n2 && i2[0] === x && !t5.authority && (i2 = i2.substring(1)), t5.with({\n          path: i2\n        });\n      }, t4.dirname = function (t5) {\n        if (0 === t5.path.length || t5.path === x) return t5;\n        let e3 = w.dirname(t5.path);\n        return 1 === e3.length && 46 === e3.charCodeAt(0) && (e3 = \"\"), t5.with({\n          path: e3\n        });\n      }, t4.basename = function (t5) {\n        return w.basename(t5.path);\n      }, t4.extname = function (t5) {\n        return w.extname(t5.path);\n      };\n    }(P || (P = {}));\n  })(), LIB = n;\n})();\nvar {\n  URI: URI2,\n  Utils\n} = LIB;\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/glob.js\nfunction createRegex(glob, opts) {\n  if (typeof glob !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  const str = String(glob);\n  let reStr = \"\";\n  const extended = opts ? !!opts.extended : false;\n  const globstar = opts ? !!opts.globstar : false;\n  let inGroup = false;\n  const flags = opts && typeof opts.flags === \"string\" ? opts.flags : \"\";\n  let c;\n  for (let i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n    switch (c) {\n      case \"/\":\n      case \"$\":\n      case \"^\":\n      case \"+\":\n      case \".\":\n      case \"(\":\n      case \")\":\n      case \"=\":\n      case \"!\":\n      case \"|\":\n        reStr += \"\\\\\" + c;\n        break;\n      case \"?\":\n        if (extended) {\n          reStr += \".\";\n          break;\n        }\n      case \"[\":\n      case \"]\":\n        if (extended) {\n          reStr += c;\n          break;\n        }\n      case \"{\":\n        if (extended) {\n          inGroup = true;\n          reStr += \"(\";\n          break;\n        }\n      case \"}\":\n        if (extended) {\n          inGroup = false;\n          reStr += \")\";\n          break;\n        }\n      case \",\":\n        if (inGroup) {\n          reStr += \"|\";\n          break;\n        }\n        reStr += \"\\\\\" + c;\n        break;\n      case \"*\":\n        const prevChar = str[i - 1];\n        let starCount = 1;\n        while (str[i + 1] === \"*\") {\n          starCount++;\n          i++;\n        }\n        const nextChar = str[i + 1];\n        if (!globstar) {\n          reStr += \".*\";\n        } else {\n          const isGlobstar = starCount > 1 && (prevChar === \"/\" || prevChar === void 0 || prevChar === \"{\" || prevChar === \",\") && (nextChar === \"/\" || nextChar === void 0 || nextChar === \",\" || nextChar === \"}\");\n          if (isGlobstar) {\n            if (nextChar === \"/\") {\n              i++;\n            } else if (prevChar === \"/\" && reStr.endsWith(\"\\\\/\")) {\n              reStr = reStr.substr(0, reStr.length - 2);\n            }\n            reStr += \"((?:[^/]*(?:/|$))*)\";\n          } else {\n            reStr += \"([^/]*)\";\n          }\n        }\n        break;\n      default:\n        reStr += c;\n    }\n  }\n  if (!flags || !~flags.indexOf(\"g\")) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n  return new RegExp(reStr, flags);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js\nvar BANG = \"!\";\nvar PATH_SEP = \"/\";\nvar FilePatternAssociation = class {\n  constructor(pattern, folderUri, uris) {\n    this.folderUri = folderUri;\n    this.uris = uris;\n    this.globWrappers = [];\n    try {\n      for (let patternString of pattern) {\n        const include = patternString[0] !== BANG;\n        if (!include) {\n          patternString = patternString.substring(1);\n        }\n        if (patternString.length > 0) {\n          if (patternString[0] === PATH_SEP) {\n            patternString = patternString.substring(1);\n          }\n          this.globWrappers.push({\n            regexp: createRegex(\"**/\" + patternString, {\n              extended: true,\n              globstar: true\n            }),\n            include\n          });\n        }\n      }\n      ;\n      if (folderUri) {\n        folderUri = normalizeResourceForMatching(folderUri);\n        if (!folderUri.endsWith(\"/\")) {\n          folderUri = folderUri + \"/\";\n        }\n        this.folderUri = folderUri;\n      }\n    } catch (e) {\n      this.globWrappers.length = 0;\n      this.uris = [];\n    }\n  }\n  matchesPattern(fileName) {\n    if (this.folderUri && !fileName.startsWith(this.folderUri)) {\n      return false;\n    }\n    let match = false;\n    for (const {\n      regexp,\n      include\n    } of this.globWrappers) {\n      if (regexp.test(fileName)) {\n        match = include;\n      }\n    }\n    return match;\n  }\n  getURIs() {\n    return this.uris;\n  }\n};\nvar SchemaHandle = class {\n  constructor(service, uri, unresolvedSchemaContent) {\n    this.service = service;\n    this.uri = uri;\n    this.dependencies = /* @__PURE__ */new Set();\n    this.anchors = void 0;\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n  getUnresolvedSchema() {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.uri);\n    }\n    return this.unresolvedSchema;\n  }\n  getResolvedSchema() {\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then(unresolved => {\n        return this.service.resolveSchemaContent(unresolved, this);\n      });\n    }\n    return this.resolvedSchema;\n  }\n  clearSchema() {\n    const hasChanges = !!this.unresolvedSchema;\n    this.resolvedSchema = void 0;\n    this.unresolvedSchema = void 0;\n    this.dependencies.clear();\n    this.anchors = void 0;\n    return hasChanges;\n  }\n};\nvar UnresolvedSchema = class {\n  constructor(schema, errors = []) {\n    this.schema = schema;\n    this.errors = errors;\n  }\n};\nvar ResolvedSchema = class {\n  constructor(schema, errors = [], warnings = [], schemaDraft) {\n    this.schema = schema;\n    this.errors = errors;\n    this.warnings = warnings;\n    this.schemaDraft = schemaDraft;\n  }\n  getSection(path) {\n    const schemaRef = this.getSectionRecursive(path, this.schema);\n    if (schemaRef) {\n      return asSchema(schemaRef);\n    }\n    return void 0;\n  }\n  getSectionRecursive(path, schema) {\n    if (!schema || typeof schema === \"boolean\" || path.length === 0) {\n      return schema;\n    }\n    const next = path.shift();\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (const pattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(pattern);\n        if (regex?.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === \"object\") {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match(\"[0-9]+\")) {\n      if (Array.isArray(schema.items)) {\n        const index = parseInt(next, 10);\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n    return void 0;\n  }\n};\nvar JSONSchemaService = class {\n  constructor(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = [];\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n  }\n  getRegisteredSchemaIds(filter) {\n    return Object.keys(this.registeredSchemasIds).filter(id => {\n      const scheme = URI2.parse(id).scheme;\n      return scheme !== \"schemaservice\" && (!filter || filter(scheme));\n    });\n  }\n  get promise() {\n    return this.promiseConstructor;\n  }\n  dispose() {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  }\n  onResourceChange(uri) {\n    this.cachedSchemaForResource = void 0;\n    let hasChanges = false;\n    uri = normalizeId(uri);\n    const toWalk = [uri];\n    const all = Object.keys(this.schemasById).map(key => this.schemasById[key]);\n    while (toWalk.length) {\n      const curr = toWalk.pop();\n      for (let i = 0; i < all.length; i++) {\n        const handle = all[i];\n        if (handle && (handle.uri === curr || handle.dependencies.has(curr))) {\n          if (handle.uri !== curr) {\n            toWalk.push(handle.uri);\n          }\n          if (handle.clearSchema()) {\n            hasChanges = true;\n          }\n          all[i] = void 0;\n        }\n      }\n    }\n    return hasChanges;\n  }\n  setSchemaContributions(schemaContributions2) {\n    if (schemaContributions2.schemas) {\n      const schemas = schemaContributions2.schemas;\n      for (const id in schemas) {\n        const normalizedId = normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n    if (Array.isArray(schemaContributions2.schemaAssociations)) {\n      const schemaAssociations = schemaContributions2.schemaAssociations;\n      for (let schemaAssociation of schemaAssociations) {\n        const uris = schemaAssociation.uris.map(normalizeId);\n        const association = this.addFilePatternAssociation(schemaAssociation.pattern, schemaAssociation.folderUri, uris);\n        this.contributionAssociations.push(association);\n      }\n    }\n  }\n  addSchemaHandle(id, unresolvedSchemaContent) {\n    const schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  }\n  getOrAddSchemaHandle(id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  }\n  addFilePatternAssociation(pattern, folderUri, uris) {\n    const fpa = new FilePatternAssociation(pattern, folderUri, uris);\n    this.filePatternAssociations.push(fpa);\n    return fpa;\n  }\n  registerExternalSchema(config) {\n    const id = normalizeId(config.uri);\n    this.registeredSchemasIds[id] = true;\n    this.cachedSchemaForResource = void 0;\n    if (config.fileMatch && config.fileMatch.length) {\n      this.addFilePatternAssociation(config.fileMatch, config.folderUri, [id]);\n    }\n    return config.schema ? this.addSchemaHandle(id, config.schema) : this.getOrAddSchemaHandle(id);\n  }\n  clearExternalSchemas() {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n    this.cachedSchemaForResource = void 0;\n    for (const id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n    for (const contributionAssociation of this.contributionAssociations) {\n      this.filePatternAssociations.push(contributionAssociation);\n    }\n  }\n  getResolvedSchema(schemaId) {\n    const id = normalizeId(schemaId);\n    const schemaHandle = this.schemasById[id];\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n    return this.promise.resolve(void 0);\n  }\n  loadSchema(url) {\n    if (!this.requestService) {\n      const errorMessage = t(\"Unable to load schema from '{0}'. No schema request service available\", toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n    if (url.startsWith(\"http://json-schema.org/\")) {\n      url = \"https\" + url.substring(4);\n    }\n    return this.requestService(url).then(content => {\n      if (!content) {\n        const errorMessage = t(\"Unable to load schema from '{0}': No content.\", toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n      const errors = [];\n      if (content.charCodeAt(0) === 65279) {\n        errors.push(t(\"Problem reading content from '{0}': UTF-8 with BOM detected, only UTF 8 is allowed.\", toDisplayString(url)));\n        content = content.trimStart();\n      }\n      let schemaContent = {};\n      const jsonErrors = [];\n      schemaContent = parse2(content, jsonErrors);\n      if (jsonErrors.length) {\n        errors.push(t(\"Unable to parse content from '{0}': Parse error at offset {1}.\", toDisplayString(url), jsonErrors[0].offset));\n      }\n      return new UnresolvedSchema(schemaContent, errors);\n    }, error => {\n      let errorMessage = error.toString();\n      const errorSplit = error.toString().split(\"Error: \");\n      if (errorSplit.length > 1) {\n        errorMessage = errorSplit[1];\n      }\n      if (endsWith(errorMessage, \".\")) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n      return new UnresolvedSchema({}, [t(\"Unable to load schema from '{0}': {1}.\", toDisplayString(url), errorMessage)]);\n    });\n  }\n  resolveSchemaContent(schemaToResolve, handle) {\n    const resolveErrors = schemaToResolve.errors.slice(0);\n    const schema = schemaToResolve.schema;\n    let schemaDraft = schema.$schema ? normalizeId(schema.$schema) : void 0;\n    if (schemaDraft === \"http://json-schema.org/draft-03/schema\") {\n      return this.promise.resolve(new ResolvedSchema({}, [t(\"Draft-03 schemas are not supported.\")], [], schemaDraft));\n    }\n    let usesUnsupportedFeatures = /* @__PURE__ */new Set();\n    const contextService = this.contextService;\n    const findSectionByJSONPointer = (schema2, path) => {\n      path = decodeURIComponent(path);\n      let current = schema2;\n      if (path[0] === \"/\") {\n        path = path.substring(1);\n      }\n      path.split(\"/\").some(part => {\n        part = part.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n    const findSchemaById = (schema2, handle2, id) => {\n      if (!handle2.anchors) {\n        handle2.anchors = collectAnchors(schema2);\n      }\n      return handle2.anchors.get(id);\n    };\n    const merge = (target, section) => {\n      for (const key in section) {\n        if (section.hasOwnProperty(key) && key !== \"id\" && key !== \"$id\") {\n          target[key] = section[key];\n        }\n      }\n    };\n    const mergeRef = (target, sourceRoot, sourceHandle, refSegment) => {\n      let section;\n      if (refSegment === void 0 || refSegment.length === 0) {\n        section = sourceRoot;\n      } else if (refSegment.charAt(0) === \"/\") {\n        section = findSectionByJSONPointer(sourceRoot, refSegment);\n      } else {\n        section = findSchemaById(sourceRoot, sourceHandle, refSegment);\n      }\n      if (section) {\n        merge(target, section);\n      } else {\n        resolveErrors.push(t(\"$ref '{0}' in '{1}' can not be resolved.\", refSegment || \"\", sourceHandle.uri));\n      }\n    };\n    const resolveExternalLink = (node, uri, refSegment, parentHandle) => {\n      if (contextService && !/^[A-Za-z][A-Za-z0-9+\\-.+]*:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentHandle.uri);\n      }\n      uri = normalizeId(uri);\n      const referencedHandle = this.getOrAddSchemaHandle(uri);\n      return referencedHandle.getUnresolvedSchema().then(unresolvedSchema => {\n        parentHandle.dependencies.add(uri);\n        if (unresolvedSchema.errors.length) {\n          const loc = refSegment ? uri + \"#\" + refSegment : uri;\n          resolveErrors.push(t(\"Problems loading reference '{0}': {1}\", loc, unresolvedSchema.errors[0]));\n        }\n        mergeRef(node, unresolvedSchema.schema, referencedHandle, refSegment);\n        return resolveRefs(node, unresolvedSchema.schema, referencedHandle);\n      });\n    };\n    const resolveRefs = (node, parentSchema, parentHandle) => {\n      const openPromises = [];\n      this.traverseNodes(node, next => {\n        const seenRefs = /* @__PURE__ */new Set();\n        while (next.$ref) {\n          const ref = next.$ref;\n          const segments = ref.split(\"#\", 2);\n          delete next.$ref;\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentHandle));\n            return;\n          } else {\n            if (!seenRefs.has(ref)) {\n              const id = segments[1];\n              mergeRef(next, parentSchema, parentHandle, id);\n              seenRefs.add(ref);\n            }\n          }\n        }\n        if (next.$recursiveRef) {\n          usesUnsupportedFeatures.add(\"$recursiveRef\");\n        }\n        if (next.$dynamicRef) {\n          usesUnsupportedFeatures.add(\"$dynamicRef\");\n        }\n      });\n      return this.promise.all(openPromises);\n    };\n    const collectAnchors = root => {\n      const result = /* @__PURE__ */new Map();\n      this.traverseNodes(root, next => {\n        const id = next.$id || next.id;\n        const anchor = isString(id) && id.charAt(0) === \"#\" ? id.substring(1) : next.$anchor;\n        if (anchor) {\n          if (result.has(anchor)) {\n            resolveErrors.push(t(\"Duplicate anchor declaration: '{0}'\", anchor));\n          } else {\n            result.set(anchor, next);\n          }\n        }\n        if (next.$recursiveAnchor) {\n          usesUnsupportedFeatures.add(\"$recursiveAnchor\");\n        }\n        if (next.$dynamicAnchor) {\n          usesUnsupportedFeatures.add(\"$dynamicAnchor\");\n        }\n      });\n      return result;\n    };\n    return resolveRefs(schema, schema, handle).then(_ => {\n      let resolveWarnings = [];\n      if (usesUnsupportedFeatures.size) {\n        resolveWarnings.push(t(\"The schema uses meta-schema features ({0}) that are not yet supported by the validator.\", Array.from(usesUnsupportedFeatures.keys()).join(\", \")));\n      }\n      return new ResolvedSchema(schema, resolveErrors, resolveWarnings, schemaDraft);\n    });\n  }\n  traverseNodes(root, handle) {\n    if (!root || typeof root !== \"object\") {\n      return Promise.resolve(null);\n    }\n    const seen = /* @__PURE__ */new Set();\n    const collectEntries = (...entries) => {\n      for (const entry of entries) {\n        if (isObject(entry)) {\n          toWalk.push(entry);\n        }\n      }\n    };\n    const collectMapEntries = (...maps) => {\n      for (const map of maps) {\n        if (isObject(map)) {\n          for (const k in map) {\n            const key = k;\n            const entry = map[key];\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectArrayEntries = (...arrays) => {\n      for (const array of arrays) {\n        if (Array.isArray(array)) {\n          for (const entry of array) {\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectEntryOrArrayEntries = items => {\n      if (Array.isArray(items)) {\n        for (const entry of items) {\n          if (isObject(entry)) {\n            toWalk.push(entry);\n          }\n        }\n      } else if (isObject(items)) {\n        toWalk.push(items);\n      }\n    };\n    const toWalk = [root];\n    let next = toWalk.pop();\n    while (next) {\n      if (!seen.has(next)) {\n        seen.add(next);\n        handle(next);\n        collectEntries(next.additionalItems, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else, next.unevaluatedItems, next.unevaluatedProperties);\n        collectMapEntries(next.definitions, next.$defs, next.properties, next.patternProperties, next.dependencies, next.dependentSchemas);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.prefixItems);\n        collectEntryOrArrayEntries(next.items);\n      }\n      next = toWalk.pop();\n    }\n  }\n  getSchemaFromProperty(resource, document) {\n    if (document.root?.type === \"object\") {\n      for (const p of document.root.properties) {\n        if (p.keyNode.value === \"$schema\" && p.valueNode?.type === \"string\") {\n          let schemaId = p.valueNode.value;\n          if (this.contextService && !/^\\w[\\w\\d+.-]*:/.test(schemaId)) {\n            schemaId = this.contextService.resolveRelativePath(schemaId, resource);\n          }\n          return schemaId;\n        }\n      }\n    }\n    return void 0;\n  }\n  getAssociatedSchemas(resource) {\n    const seen = /* @__PURE__ */Object.create(null);\n    const schemas = [];\n    const normalizedResource = normalizeResourceForMatching(resource);\n    for (const entry of this.filePatternAssociations) {\n      if (entry.matchesPattern(normalizedResource)) {\n        for (const schemaId of entry.getURIs()) {\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n    return schemas;\n  }\n  getSchemaURIsForResource(resource, document) {\n    let schemeId = document && this.getSchemaFromProperty(resource, document);\n    if (schemeId) {\n      return [schemeId];\n    }\n    return this.getAssociatedSchemas(resource);\n  }\n  getSchemaForResource(resource, document) {\n    if (document) {\n      let schemeId = this.getSchemaFromProperty(resource, document);\n      if (schemeId) {\n        const id = normalizeId(schemeId);\n        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n      }\n    }\n    if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n      return this.cachedSchemaForResource.resolvedSchema;\n    }\n    const schemas = this.getAssociatedSchemas(resource);\n    const resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(void 0);\n    this.cachedSchemaForResource = {\n      resource,\n      resolvedSchema\n    };\n    return resolvedSchema;\n  }\n  createCombinedSchema(resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      const combinedSchemaId = \"schemaservice://combinedSchema/\" + encodeURIComponent(resource);\n      const combinedSchema = {\n        allOf: schemaIds.map(schemaId => ({\n          $ref: schemaId\n        }))\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  }\n  getMatchingSchemas(document, jsonDocument, schema) {\n    if (schema) {\n      const id = schema.id || \"schemaservice://untitled/matchingSchemas/\" + idCounter2++;\n      const handle = this.addSchemaHandle(id, schema);\n      return handle.getResolvedSchema().then(resolvedSchema => {\n        return jsonDocument.getMatchingSchemas(resolvedSchema.schema).filter(s => !s.inverted);\n      });\n    }\n    return this.getSchemaForResource(document.uri, jsonDocument).then(schema2 => {\n      if (schema2) {\n        return jsonDocument.getMatchingSchemas(schema2.schema).filter(s => !s.inverted);\n      }\n      return [];\n    });\n  }\n};\nvar idCounter2 = 0;\nfunction normalizeId(id) {\n  try {\n    return URI2.parse(id).toString(true);\n  } catch (e) {\n    return id;\n  }\n}\nfunction normalizeResourceForMatching(resource) {\n  try {\n    return URI2.parse(resource).with({\n      fragment: null,\n      query: null\n    }).toString(true);\n  } catch (e) {\n    return resource;\n  }\n}\nfunction toDisplayString(url) {\n  try {\n    const uri = URI2.parse(url);\n    if (uri.scheme === \"file\") {\n      return uri.fsPath;\n    }\n  } catch (e) {}\n  return url;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js\nfunction getFoldingRanges(document, context) {\n  const ranges = [];\n  const nestingLevels = [];\n  const stack = [];\n  let prevStart = -1;\n  const scanner = createScanner2(document.getText(), false);\n  let token = scanner.scan();\n  function addRange(range) {\n    ranges.push(range);\n    nestingLevels.push(stack.length);\n  }\n  while (token !== 17) {\n    switch (token) {\n      case 1:\n      case 3:\n        {\n          const startLine = document.positionAt(scanner.getTokenOffset()).line;\n          const range = {\n            startLine,\n            endLine: startLine,\n            kind: token === 1 ? \"object\" : \"array\"\n          };\n          stack.push(range);\n          break;\n        }\n      case 2:\n      case 4:\n        {\n          const kind = token === 2 ? \"object\" : \"array\";\n          if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n            const range = stack.pop();\n            const line = document.positionAt(scanner.getTokenOffset()).line;\n            if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n              range.endLine = line - 1;\n              addRange(range);\n              prevStart = range.startLine;\n            }\n          }\n          break;\n        }\n      case 13:\n        {\n          const startLine = document.positionAt(scanner.getTokenOffset()).line;\n          const endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n          if (scanner.getTokenError() === 1 && startLine + 1 < document.lineCount) {\n            scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n          } else {\n            if (startLine < endLine) {\n              addRange({\n                startLine,\n                endLine,\n                kind: FoldingRangeKind.Comment\n              });\n              prevStart = startLine;\n            }\n          }\n          break;\n        }\n      case 12:\n        {\n          const text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n          const m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n          if (m) {\n            const line = document.positionAt(scanner.getTokenOffset()).line;\n            if (m[1]) {\n              const range = {\n                startLine: line,\n                endLine: line,\n                kind: FoldingRangeKind.Region\n              };\n              stack.push(range);\n            } else {\n              let i = stack.length - 1;\n              while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n                i--;\n              }\n              if (i >= 0) {\n                const range = stack[i];\n                stack.length = i;\n                if (line > range.startLine && prevStart !== range.startLine) {\n                  range.endLine = line;\n                  addRange(range);\n                  prevStart = range.startLine;\n                }\n              }\n            }\n          }\n          break;\n        }\n    }\n    token = scanner.scan();\n  }\n  const rangeLimit = context && context.rangeLimit;\n  if (typeof rangeLimit !== \"number\" || ranges.length <= rangeLimit) {\n    return ranges;\n  }\n  if (context && context.onRangeLimitExceeded) {\n    context.onRangeLimitExceeded(document.uri);\n  }\n  const counts = [];\n  for (let level of nestingLevels) {\n    if (level < 30) {\n      counts[level] = (counts[level] || 0) + 1;\n    }\n  }\n  let entries = 0;\n  let maxLevel = 0;\n  for (let i = 0; i < counts.length; i++) {\n    const n = counts[i];\n    if (n) {\n      if (n + entries > rangeLimit) {\n        maxLevel = i;\n        break;\n      }\n      entries += n;\n    }\n  }\n  const result = [];\n  for (let i = 0; i < ranges.length; i++) {\n    const level = nestingLevels[i];\n    if (typeof level === \"number\") {\n      if (level < maxLevel || level === maxLevel && entries++ < rangeLimit) {\n        result.push(ranges[i]);\n      }\n    }\n  }\n  return result;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js\nfunction getSelectionRanges(document, positions, doc) {\n  function getSelectionRange(position) {\n    let offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    const result = [];\n    while (node) {\n      switch (node.type) {\n        case \"string\":\n        case \"object\":\n        case \"array\":\n          const cStart = node.offset + 1,\n            cEnd = node.offset + node.length - 1;\n          if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n            result.push(newRange(cStart, cEnd));\n          }\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n        case \"number\":\n        case \"boolean\":\n        case \"null\":\n        case \"property\":\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n      }\n      if (node.type === \"property\" || node.parent && node.parent.type === \"array\") {\n        const afterCommaOffset = getOffsetAfterNextToken(node.offset + node.length, 5\n        /* SyntaxKind.CommaToken */);\n        if (afterCommaOffset !== -1) {\n          result.push(newRange(node.offset, afterCommaOffset));\n        }\n      }\n      node = node.parent;\n    }\n    let current = void 0;\n    for (let index = result.length - 1; index >= 0; index--) {\n      current = SelectionRange.create(result[index], current);\n    }\n    if (!current) {\n      current = SelectionRange.create(Range.create(position, position));\n    }\n    return current;\n  }\n  function newRange(start, end) {\n    return Range.create(document.positionAt(start), document.positionAt(end));\n  }\n  const scanner = createScanner2(document.getText(), true);\n  function getOffsetAfterNextToken(offset, expectedToken) {\n    scanner.setPosition(offset);\n    let token = scanner.scan();\n    if (token === expectedToken) {\n      return scanner.getTokenOffset() + scanner.getTokenLength();\n    }\n    return -1;\n  }\n  return positions.map(getSelectionRange);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/format.js\nfunction format4(documentToFormat, formattingOptions, formattingRange) {\n  let range = void 0;\n  if (formattingRange) {\n    const offset = documentToFormat.offsetAt(formattingRange.start);\n    const length = documentToFormat.offsetAt(formattingRange.end) - offset;\n    range = {\n      offset,\n      length\n    };\n  }\n  const options = {\n    tabSize: formattingOptions ? formattingOptions.tabSize : 4,\n    insertSpaces: formattingOptions?.insertSpaces === true,\n    insertFinalNewline: formattingOptions?.insertFinalNewline === true,\n    eol: \"\\n\",\n    keepLines: formattingOptions?.keepLines === true\n  };\n  return format2(documentToFormat.getText(), range, options).map(edit => {\n    return TextEdit.replace(Range.create(documentToFormat.positionAt(edit.offset), documentToFormat.positionAt(edit.offset + edit.length)), edit.content);\n  });\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/propertyTree.js\nvar Container;\n(function (Container2) {\n  Container2[Container2[\"Object\"] = 0] = \"Object\";\n  Container2[Container2[\"Array\"] = 1] = \"Array\";\n})(Container || (Container = {}));\nvar PropertyTree = class {\n  constructor(propertyName, beginningLineNumber) {\n    this.propertyName = propertyName ?? \"\";\n    this.beginningLineNumber = beginningLineNumber;\n    this.childrenProperties = [];\n    this.lastProperty = false;\n    this.noKeyName = false;\n  }\n  addChildProperty(childProperty) {\n    childProperty.parent = this;\n    if (this.childrenProperties.length > 0) {\n      let insertionIndex = 0;\n      if (childProperty.noKeyName) {\n        insertionIndex = this.childrenProperties.length;\n      } else {\n        insertionIndex = binarySearchOnPropertyArray(this.childrenProperties, childProperty, compareProperties);\n      }\n      if (insertionIndex < 0) {\n        insertionIndex = insertionIndex * -1 - 1;\n      }\n      this.childrenProperties.splice(insertionIndex, 0, childProperty);\n    } else {\n      this.childrenProperties.push(childProperty);\n    }\n    return childProperty;\n  }\n};\nfunction compareProperties(propertyTree1, propertyTree2) {\n  const propertyName1 = propertyTree1.propertyName.toLowerCase();\n  const propertyName2 = propertyTree2.propertyName.toLowerCase();\n  if (propertyName1 < propertyName2) {\n    return -1;\n  } else if (propertyName1 > propertyName2) {\n    return 1;\n  }\n  return 0;\n}\nfunction binarySearchOnPropertyArray(propertyTreeArray, propertyTree, compare_fn) {\n  const propertyName = propertyTree.propertyName.toLowerCase();\n  const firstPropertyInArrayName = propertyTreeArray[0].propertyName.toLowerCase();\n  const lastPropertyInArrayName = propertyTreeArray[propertyTreeArray.length - 1].propertyName.toLowerCase();\n  if (propertyName < firstPropertyInArrayName) {\n    return 0;\n  }\n  if (propertyName > lastPropertyInArrayName) {\n    return propertyTreeArray.length;\n  }\n  let m = 0;\n  let n = propertyTreeArray.length - 1;\n  while (m <= n) {\n    let k = n + m >> 1;\n    let cmp = compare_fn(propertyTree, propertyTreeArray[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/sort.js\nfunction sort(documentToSort, formattingOptions) {\n  const options = {\n    ...formattingOptions,\n    keepLines: false\n    // keepLines must be false so that the properties are on separate lines for the sorting\n  };\n  const formattedJsonString = TextDocument2.applyEdits(documentToSort, format4(documentToSort, options, void 0));\n  const formattedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, formattedJsonString);\n  const jsonPropertyTree = findJsoncPropertyTree(formattedJsonDocument);\n  const sortedJsonDocument = sortJsoncDocument(formattedJsonDocument, jsonPropertyTree);\n  const edits = format4(sortedJsonDocument, options, void 0);\n  const sortedAndFormattedJsonDocument = TextDocument2.applyEdits(sortedJsonDocument, edits);\n  return [TextEdit.replace(Range.create(Position.create(0, 0), documentToSort.positionAt(documentToSort.getText().length)), sortedAndFormattedJsonDocument)];\n}\nfunction findJsoncPropertyTree(formattedDocument) {\n  const formattedString = formattedDocument.getText();\n  const scanner = createScanner2(formattedString, false);\n  let rootTree = new PropertyTree();\n  let currentTree = rootTree;\n  let currentProperty = rootTree;\n  let lastProperty = rootTree;\n  let token = void 0;\n  let lastTokenLine = 0;\n  let numberOfCharactersOnPreviousLines = 0;\n  let lastNonTriviaNonCommentToken = void 0;\n  let secondToLastNonTriviaNonCommentToken = void 0;\n  let lineOfLastNonTriviaNonCommentToken = -1;\n  let endIndexOfLastNonTriviaNonCommentToken = -1;\n  let beginningLineNumber = 0;\n  let endLineNumber = 0;\n  let currentContainerStack = [];\n  let updateLastPropertyEndLineNumber = false;\n  let updateBeginningLineNumber = false;\n  while ((token = scanner.scan()) !== 17) {\n    if (updateLastPropertyEndLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13 && currentProperty.endLineNumber === void 0) {\n      let endLineNumber2 = scanner.getTokenStartLine();\n      if (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) {\n        lastProperty.endLineNumber = endLineNumber2 - 1;\n      } else {\n        currentProperty.endLineNumber = endLineNumber2 - 1;\n      }\n      beginningLineNumber = endLineNumber2;\n      updateLastPropertyEndLineNumber = false;\n    }\n    if (updateBeginningLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13) {\n      beginningLineNumber = scanner.getTokenStartLine();\n      updateBeginningLineNumber = false;\n    }\n    if (scanner.getTokenStartLine() !== lastTokenLine) {\n      for (let i = lastTokenLine; i < scanner.getTokenStartLine(); i++) {\n        const lengthOfLine = formattedDocument.getText(Range.create(Position.create(i, 0), Position.create(i + 1, 0))).length;\n        numberOfCharactersOnPreviousLines = numberOfCharactersOnPreviousLines + lengthOfLine;\n      }\n      lastTokenLine = scanner.getTokenStartLine();\n    }\n    switch (token) {\n      case 10:\n        {\n          if (lastNonTriviaNonCommentToken === void 0 || lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 5 && currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n            const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n            lastProperty = currentProperty;\n            currentProperty = currentTree.addChildProperty(childProperty);\n          }\n          break;\n        }\n      case 3:\n        {\n          if (rootTree.beginningLineNumber === void 0) {\n            rootTree.beginningLineNumber = scanner.getTokenStartLine();\n          }\n          if (currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n            currentTree = currentProperty;\n          } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n            const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n            childProperty.noKeyName = true;\n            lastProperty = currentProperty;\n            currentProperty = currentTree.addChildProperty(childProperty);\n            currentTree = currentProperty;\n          }\n          currentContainerStack.push(Container.Array);\n          currentProperty.type = Container.Array;\n          beginningLineNumber = scanner.getTokenStartLine();\n          beginningLineNumber++;\n          break;\n        }\n      case 1:\n        {\n          if (rootTree.beginningLineNumber === void 0) {\n            rootTree.beginningLineNumber = scanner.getTokenStartLine();\n          } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n            const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n            childProperty.noKeyName = true;\n            lastProperty = currentProperty;\n            currentProperty = currentTree.addChildProperty(childProperty);\n          }\n          currentProperty.type = Container.Object;\n          currentContainerStack.push(Container.Object);\n          currentTree = currentProperty;\n          beginningLineNumber = scanner.getTokenStartLine();\n          beginningLineNumber++;\n          break;\n        }\n      case 4:\n        {\n          endLineNumber = scanner.getTokenStartLine();\n          currentContainerStack.pop();\n          if (currentProperty.endLineNumber === void 0 && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4)) {\n            currentProperty.endLineNumber = endLineNumber - 1;\n            currentProperty.lastProperty = true;\n            currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n            currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n            lastProperty = currentProperty;\n            currentProperty = currentProperty ? currentProperty.parent : void 0;\n            currentTree = currentProperty;\n          }\n          rootTree.endLineNumber = endLineNumber;\n          beginningLineNumber = endLineNumber + 1;\n          break;\n        }\n      case 2:\n        {\n          endLineNumber = scanner.getTokenStartLine();\n          currentContainerStack.pop();\n          if (lastNonTriviaNonCommentToken !== 1) {\n            if (currentProperty.endLineNumber === void 0) {\n              currentProperty.endLineNumber = endLineNumber - 1;\n              currentProperty.lastProperty = true;\n              currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n              currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n            }\n            lastProperty = currentProperty;\n            currentProperty = currentProperty ? currentProperty.parent : void 0;\n            currentTree = currentProperty;\n          }\n          rootTree.endLineNumber = scanner.getTokenStartLine();\n          beginningLineNumber = endLineNumber + 1;\n          break;\n        }\n      case 5:\n        {\n          endLineNumber = scanner.getTokenStartLine();\n          if (currentProperty.endLineNumber === void 0 && (currentContainerStack[currentContainerStack.length - 1] === Container.Object || currentContainerStack[currentContainerStack.length - 1] === Container.Array && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4))) {\n            currentProperty.endLineNumber = endLineNumber;\n            currentProperty.commaIndex = scanner.getTokenOffset() - numberOfCharactersOnPreviousLines;\n            currentProperty.commaLine = endLineNumber;\n          }\n          if (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4) {\n            lastProperty = currentProperty;\n            currentProperty = currentProperty ? currentProperty.parent : void 0;\n            currentTree = currentProperty;\n          }\n          beginningLineNumber = endLineNumber + 1;\n          break;\n        }\n      case 13:\n        {\n          if (lastNonTriviaNonCommentToken === 5 && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine() && (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object)) {\n            if (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n              currentProperty.endLineNumber = void 0;\n              updateLastPropertyEndLineNumber = true;\n            }\n          }\n          if ((lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 3) && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine()) {\n            updateBeginningLineNumber = true;\n          }\n          break;\n        }\n    }\n    if (token !== 14 && token !== 13 && token !== 12 && token !== 15) {\n      secondToLastNonTriviaNonCommentToken = lastNonTriviaNonCommentToken;\n      lastNonTriviaNonCommentToken = token;\n      lineOfLastNonTriviaNonCommentToken = scanner.getTokenStartLine();\n      endIndexOfLastNonTriviaNonCommentToken = scanner.getTokenOffset() + scanner.getTokenLength() - numberOfCharactersOnPreviousLines;\n    }\n  }\n  return rootTree;\n}\nfunction sortJsoncDocument(jsonDocument, propertyTree) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return jsonDocument;\n  }\n  const sortedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonDocument.getText());\n  const queueToSort = [];\n  updateSortingQueue(queueToSort, propertyTree, propertyTree.beginningLineNumber);\n  while (queueToSort.length > 0) {\n    const dataToSort = queueToSort.shift();\n    const propertyTreeArray = dataToSort.propertyTreeArray;\n    let beginningLineNumber = dataToSort.beginningLineNumber;\n    for (let i = 0; i < propertyTreeArray.length; i++) {\n      const propertyTree2 = propertyTreeArray[i];\n      const range = Range.create(Position.create(propertyTree2.beginningLineNumber, 0), Position.create(propertyTree2.endLineNumber + 1, 0));\n      const jsonContentToReplace = jsonDocument.getText(range);\n      const jsonDocumentToReplace = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonContentToReplace);\n      if (propertyTree2.lastProperty === true && i !== propertyTreeArray.length - 1) {\n        const lineWhereToAddComma = propertyTree2.lineWhereToAddComma - propertyTree2.beginningLineNumber;\n        const indexWhereToAddComma = propertyTree2.indexWhereToAddComa;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToAddComma, indexWhereToAddComma), Position.create(lineWhereToAddComma, indexWhereToAddComma)),\n          text: \",\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      } else if (propertyTree2.lastProperty === false && i === propertyTreeArray.length - 1) {\n        const commaIndex = propertyTree2.commaIndex;\n        const commaLine = propertyTree2.commaLine;\n        const lineWhereToRemoveComma = commaLine - propertyTree2.beginningLineNumber;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToRemoveComma, commaIndex), Position.create(lineWhereToRemoveComma, commaIndex + 1)),\n          text: \"\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      }\n      const length = propertyTree2.endLineNumber - propertyTree2.beginningLineNumber + 1;\n      const edit = {\n        range: Range.create(Position.create(beginningLineNumber, 0), Position.create(beginningLineNumber + length, 0)),\n        text: jsonDocumentToReplace.getText()\n      };\n      TextDocument2.update(sortedJsonDocument, [edit], 1);\n      updateSortingQueue(queueToSort, propertyTree2, beginningLineNumber);\n      beginningLineNumber = beginningLineNumber + length;\n    }\n  }\n  return sortedJsonDocument;\n}\nfunction updateSortingQueue(queue, propertyTree, beginningLineNumber) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return;\n  }\n  if (propertyTree.type === Container.Object) {\n    let minimumBeginningLineNumber = Infinity;\n    for (const childProperty of propertyTree.childrenProperties) {\n      if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n        minimumBeginningLineNumber = childProperty.beginningLineNumber;\n      }\n    }\n    const diff = minimumBeginningLineNumber - propertyTree.beginningLineNumber;\n    beginningLineNumber = beginningLineNumber + diff;\n    queue.push(new SortingRange(beginningLineNumber, propertyTree.childrenProperties));\n  } else if (propertyTree.type === Container.Array) {\n    updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber);\n  }\n}\nfunction updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber) {\n  for (const subObject of propertyTree.childrenProperties) {\n    if (subObject.type === Container.Object) {\n      let minimumBeginningLineNumber = Infinity;\n      for (const childProperty of subObject.childrenProperties) {\n        if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n          minimumBeginningLineNumber = childProperty.beginningLineNumber;\n        }\n      }\n      const diff = minimumBeginningLineNumber - subObject.beginningLineNumber;\n      queue.push(new SortingRange(beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber + diff, subObject.childrenProperties));\n    }\n    if (subObject.type === Container.Array) {\n      updateSortingQueueForArrayProperties(queue, subObject, beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber);\n    }\n  }\n}\nvar SortingRange = class {\n  constructor(beginningLineNumber, propertyTreeArray) {\n    this.beginningLineNumber = beginningLineNumber;\n    this.propertyTreeArray = propertyTreeArray;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonLinks.js\nfunction findLinks(document, doc) {\n  const links = [];\n  doc.visit(node => {\n    if (node.type === \"property\" && node.keyNode.value === \"$ref\" && node.valueNode?.type === \"string\") {\n      const path = node.valueNode.value;\n      const targetNode = findTargetNode(doc, path);\n      if (targetNode) {\n        const targetPos = document.positionAt(targetNode.offset);\n        links.push({\n          target: `${document.uri}#${targetPos.line + 1},${targetPos.character + 1}`,\n          range: createRange(document, node.valueNode)\n        });\n      }\n    }\n    return true;\n  });\n  return Promise.resolve(links);\n}\nfunction createRange(document, node) {\n  return Range.create(document.positionAt(node.offset + 1), document.positionAt(node.offset + node.length - 1));\n}\nfunction findTargetNode(doc, path) {\n  const tokens = parseJSONPointer(path);\n  if (!tokens) {\n    return null;\n  }\n  return findNode(tokens, doc.root);\n}\nfunction findNode(pointer, node) {\n  if (!node) {\n    return null;\n  }\n  if (pointer.length === 0) {\n    return node;\n  }\n  const token = pointer.shift();\n  if (node && node.type === \"object\") {\n    const propertyNode = node.properties.find(propertyNode2 => propertyNode2.keyNode.value === token);\n    if (!propertyNode) {\n      return null;\n    }\n    return findNode(pointer, propertyNode.valueNode);\n  } else if (node && node.type === \"array\") {\n    if (token.match(/^(0|[1-9][0-9]*)$/)) {\n      const index = Number.parseInt(token);\n      const arrayItem = node.items[index];\n      if (!arrayItem) {\n        return null;\n      }\n      return findNode(pointer, arrayItem);\n    }\n  }\n  return null;\n}\nfunction parseJSONPointer(path) {\n  if (path === \"#\") {\n    return [];\n  }\n  if (path[0] !== \"#\" || path[1] !== \"/\") {\n    return null;\n  }\n  return path.substring(2).split(/\\//).map(unescape);\n}\nfunction unescape(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js\nfunction getLanguageService(params) {\n  const promise = params.promiseConstructor || Promise;\n  const jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n  jsonSchemaService.setSchemaContributions(schemaContributions);\n  const jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n  const jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n  const jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n  const jsonValidation = new JSONValidation(jsonSchemaService, promise);\n  return {\n    configure: settings => {\n      jsonSchemaService.clearExternalSchemas();\n      settings.schemas?.forEach(jsonSchemaService.registerExternalSchema.bind(jsonSchemaService));\n      jsonValidation.configure(settings);\n    },\n    resetSchema: uri => jsonSchemaService.onResourceChange(uri),\n    doValidation: jsonValidation.doValidation.bind(jsonValidation),\n    getLanguageStatus: jsonValidation.getLanguageStatus.bind(jsonValidation),\n    parseJSONDocument: document => parse3(document, {\n      collectComments: true\n    }),\n    newJSONDocument: (root, diagnostics) => newJSONDocument(root, diagnostics),\n    getMatchingSchemas: jsonSchemaService.getMatchingSchemas.bind(jsonSchemaService),\n    doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n    doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n    findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n    findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n    findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n    getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n    doHover: jsonHover.doHover.bind(jsonHover),\n    getFoldingRanges,\n    getSelectionRanges,\n    findDefinition: () => Promise.resolve([]),\n    findLinks,\n    format: (document, range, options) => format4(document, options, range),\n    sort: (document, options) => sort(document, options)\n  };\n}\n\n// src/language/json/jsonWorker.ts\nvar defaultSchemaRequestService;\nif (typeof fetch !== \"undefined\") {\n  defaultSchemaRequestService = function (url) {\n    return fetch(url).then(response => response.text());\n  };\n}\nvar JSONWorker = class {\n  constructor(ctx, createData) {\n    this._ctx = ctx;\n    this._languageSettings = createData.languageSettings;\n    this._languageId = createData.languageId;\n    this._languageService = getLanguageService({\n      workspaceContext: {\n        resolveRelativePath: (relativePath, resource) => {\n          const base = resource.substr(0, resource.lastIndexOf(\"/\") + 1);\n          return resolvePath(base, relativePath);\n        }\n      },\n      schemaRequestService: createData.enableSchemaRequest ? defaultSchemaRequestService : void 0,\n      clientCapabilities: ClientCapabilities.LATEST\n    });\n    this._languageService.configure(this._languageSettings);\n  }\n  async doValidation(uri) {\n    let document = this._getTextDocument(uri);\n    if (document) {\n      let jsonDocument = this._languageService.parseJSONDocument(document);\n      return this._languageService.doValidation(document, jsonDocument, this._languageSettings);\n    }\n    return Promise.resolve([]);\n  }\n  async doComplete(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doComplete(document, position, jsonDocument);\n  }\n  async doResolve(item) {\n    return this._languageService.doResolve(item);\n  }\n  async doHover(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doHover(document, position, jsonDocument);\n  }\n  async format(uri, range, options) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let textEdits = this._languageService.format(document, range, options);\n    return Promise.resolve(textEdits);\n  }\n  async resetSchema(uri) {\n    return Promise.resolve(this._languageService.resetSchema(uri));\n  }\n  async findDocumentSymbols(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let symbols = this._languageService.findDocumentSymbols2(document, jsonDocument);\n    return Promise.resolve(symbols);\n  }\n  async findDocumentColors(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorSymbols = this._languageService.findDocumentColors(document, jsonDocument);\n    return Promise.resolve(colorSymbols);\n  }\n  async getColorPresentations(uri, color, range) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorPresentations = this._languageService.getColorPresentations(document, jsonDocument, color, range);\n    return Promise.resolve(colorPresentations);\n  }\n  async getFoldingRanges(uri, context) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let ranges = this._languageService.getFoldingRanges(document, context);\n    return Promise.resolve(ranges);\n  }\n  async getSelectionRanges(uri, positions) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let ranges = this._languageService.getSelectionRanges(document, positions, jsonDocument);\n    return Promise.resolve(ranges);\n  }\n  async parseJSONDocument(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(jsonDocument);\n  }\n  async getMatchingSchemas(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(this._languageService.getMatchingSchemas(document, jsonDocument));\n  }\n  _getTextDocument(uri) {\n    let models = this._ctx.getMirrorModels();\n    for (let model of models) {\n      if (model.uri.toString() === uri) {\n        return TextDocument2.create(uri, this._languageId, model.version, model.getValue());\n      }\n    }\n    return null;\n  }\n};\nvar Slash = \"/\".charCodeAt(0);\nvar Dot = \".\".charCodeAt(0);\nfunction isAbsolutePath(path) {\n  return path.charCodeAt(0) === Slash;\n}\nfunction resolvePath(uriString, path) {\n  if (isAbsolutePath(path)) {\n    const uri = URI2.parse(uriString);\n    const parts = path.split(\"/\");\n    return uri.with({\n      path: normalizePath(parts)\n    }).toString();\n  }\n  return joinPath(uriString, path);\n}\nfunction normalizePath(parts) {\n  const newParts = [];\n  for (const part of parts) {\n    if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {} else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\n      newParts.pop();\n    } else {\n      newParts.push(part);\n    }\n  }\n  if (parts.length > 1 && parts[parts.length - 1].length === 0) {\n    newParts.push(\"\");\n  }\n  let res = newParts.join(\"/\");\n  if (parts[0].length === 0) {\n    res = \"/\" + res;\n  }\n  return res;\n}\nfunction joinPath(uriString, ...paths) {\n  const uri = URI2.parse(uriString);\n  const parts = uri.path.split(\"/\");\n  for (let path of paths) {\n    parts.push(...path.split(\"/\"));\n  }\n  return uri.with({\n    path: normalizePath(parts)\n  }).toString();\n}\n\n// src/language/json/json.worker.ts\nself.onmessage = () => {\n  worker.initialize((ctx, createData) => {\n    return new JSONWorker(ctx, createData);\n  });\n};","map":{"version":3,"names":["worker","createScanner","text","ignoreTrivia","len","length","pos","value","tokenOffset","token","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","value2","ch","charCodeAt","setPosition","newPosition","scanNumber","start","isDigit","substring","end","scanString","result","ch2","ch3","String","fromCharCode","isLineBreak","scanNext","code","isWhiteSpace","safeLength","commentClosed","isUnknownContentCharacter","scanNextNonTrivia","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","CharacterCodes","CharacterCodes2","cachedSpaces","Array","fill","map","_","index","repeat","maxCachedValues","cachedBreakLinesWithSpaces","supportedEols","format","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","computeIndentLevel","eol","getEOL","eolFastPathSupported","includes","numberLineBreaks","indentLevel","indentValue","insertSpaces","tabSize","indentType","scanner","hasError","newLinesAndIndent","amountOfSpaces","keepLines","editOperations","addEdit","startOffset","push","content","firstToken","firstTokenStart","initialIndent","firstTokenEnd","secondToken","replaceContent","needsLineBreak","commentTokenStart","insertFinalNewline","secondTokenStart","s","i","nChars","charAt","Math","floor","indexOf","ParseOptions","ParseOptions2","DEFAULT","allowTrailingComma","parse","errors","currentProperty","currentParent","previousParents","onValue","isArray","visitor","onObjectBegin","object","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","array","onArrayEnd","onLiteralValue","onError","error","visit","getNodePath","node","parent","children","path","type","key","getNodeValue","obj","Object","create","prop","valueNode","contains","includeRightBound","findNodeAtOffset","item","_scanner","_jsonPath","toNoArgVisit","visitFunction","toNoArgVisitWithPath","slice","toOneArgVisit","arg","toOneArgVisitWithPath","onSeparator","onComment","disallowComments","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseLiteral","tokenValue","Number","isNaN","parseProperty","parseValue","parseObject","needsComma","parseArray","isFirstElement","allowEmptyContent","createScanner2","ScanError","ScanError2","SyntaxKind","SyntaxKind2","parse2","findNodeAtOffset2","getNodePath2","getNodeValue2","ParseErrorCode","ParseErrorCode2","format2","equals","one","other","oneKeys","sort","otherKeys","isNumber","val","isDefined","isBoolean","isString","isObject","startsWith","haystack","needle","endsWith","diff","lastIndexOf","extendedRegExp","pattern","flags","RegExp","e","e2","stringLength","str","DocumentUri","DocumentUri2","is","URI","URI3","integer","integer2","MIN_VALUE","MAX_VALUE","uinteger","uinteger2","Position","Position2","line","character","candidate","Is","objectLiteral","Range","Range2","two","three","four","Error","Location","Location2","uri","string","undefined","LocationLink","LocationLink2","targetUri","targetRange","targetSelectionRange","originSelectionRange","Color","Color2","red","green","blue","alpha","numberRange","ColorInformation","ColorInformation2","color","ColorPresentation","ColorPresentation2","label","textEdit","additionalTextEdits","TextEdit","typedArray","FoldingRangeKind","FoldingRangeKind2","Comment","Imports","Region","FoldingRange","FoldingRange2","startLine","endLine","startCharacter","endCharacter","kind","collapsedText","defined","DiagnosticRelatedInformation","DiagnosticRelatedInformation2","location","message","DiagnosticSeverity","DiagnosticSeverity2","Warning","Information","Hint","DiagnosticTag","DiagnosticTag2","Unnecessary","Deprecated","CodeDescription","CodeDescription2","href","Diagnostic","Diagnostic2","severity","source","relatedInformation","_a","number","codeDescription","Command","Command2","title","command","args","arguments","TextEdit2","replace","newText","insert","position","del","ChangeAnnotation","ChangeAnnotation2","needsConfirmation","description","boolean","ChangeAnnotationIdentifier","ChangeAnnotationIdentifier2","AnnotatedTextEdit","AnnotatedTextEdit2","annotation","annotationId","TextDocumentEdit","TextDocumentEdit2","textDocument","edits","OptionalVersionedTextDocumentIdentifier","CreateFile","CreateFile2","overwrite","ignoreIfExists","RenameFile","RenameFile2","oldUri","newUri","DeleteFile","DeleteFile2","recursive","ignoreIfNotExists","WorkspaceEdit","WorkspaceEdit2","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentIdentifier2","VersionedTextDocumentIdentifier","VersionedTextDocumentIdentifier2","version","OptionalVersionedTextDocumentIdentifier2","TextDocumentItem","TextDocumentItem2","languageId","MarkupKind","MarkupKind2","PlainText","Markdown","MarkupContent","MarkupContent2","CompletionItemKind","CompletionItemKind2","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","InsertTextFormat","InsertTextFormat2","CompletionItemTag","CompletionItemTag2","InsertReplaceEdit","InsertReplaceEdit2","InsertTextMode","InsertTextMode2","asIs","adjustIndentation","CompletionItemLabelDetails","CompletionItemLabelDetails2","detail","CompletionItem","CompletionItem2","CompletionList","CompletionList2","items","isIncomplete","MarkedString","MarkedString2","fromPlainText","plainText","language","Hover","Hover2","contents","ParameterInformation","ParameterInformation2","documentation","SignatureInformation","SignatureInformation2","parameters","DocumentHighlightKind","DocumentHighlightKind2","Read","Write","DocumentHighlight","DocumentHighlight2","SymbolKind","SymbolKind2","Namespace","Package","Boolean","Key","Null","SymbolTag","SymbolTag2","SymbolInformation","SymbolInformation2","containerName","WorkspaceSymbol","WorkspaceSymbol2","DocumentSymbol","DocumentSymbol2","selectionRange","deprecated","tags","CodeActionKind","CodeActionKind2","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","CodeActionTriggerKind","CodeActionTriggerKind2","Invoked","Automatic","CodeActionContext","CodeActionContext2","diagnostics","only","triggerKind","CodeAction","CodeAction2","kindOrCommandOrEdit","checkKind","edit","isPreferred","CodeLens","CodeLens2","data","FormattingOptions","FormattingOptions2","DocumentLink","DocumentLink2","target","SelectionRange","SelectionRange2","SemanticTokenTypes","SemanticTokenTypes2","SemanticTokenModifiers","SemanticTokenModifiers2","SemanticTokens","SemanticTokens2","resultId","InlineValueText","InlineValueText2","InlineValueVariableLookup","InlineValueVariableLookup2","variableName","caseSensitiveLookup","InlineValueEvaluatableExpression","InlineValueEvaluatableExpression2","expression","InlineValueContext","InlineValueContext2","frameId","stoppedLocation","InlayHintKind","InlayHintKind2","Type","Parameter","InlayHintLabelPart","InlayHintLabelPart2","tooltip","InlayHint","InlayHint2","textEdits","paddingLeft","paddingRight","StringValue","StringValue2","createSnippet","InlineCompletionItem","InlineCompletionItem2","insertText","filterText","InlineCompletionList","InlineCompletionList2","InlineCompletionTriggerKind","InlineCompletionTriggerKind2","SelectedCompletionInfo","SelectedCompletionInfo2","InlineCompletionContext","InlineCompletionContext2","selectedCompletionInfo","WorkspaceFolder","WorkspaceFolder2","TextDocument","TextDocument3","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort2","a2","b","lastModifiedOffset","compare","p","left","right","leftIdx","rightIdx","ret","constructor","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","max","min","low","high","mid","lineOffset","nextLineOffset","Is2","toString","prototype","undefined2","call","check","FullTextDocument2","_FullTextDocument","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","splice","concat","isFull","rangeLength","TextDocument2","mergeSort","getWellformedEdit","spans","substr","join","isAtLineStart","textOffset","ErrorCode","ErrorCode2","SchemaDraft","SchemaDraft2","ClientCapabilities","ClientCapabilities2","LATEST","completion","completionItem","documentationFormat","commitCharactersSupport","labelDetailsSupport","bundle","t","firstArg","formatArgs","replacements","comment","messageFromBundle","format3","_format2Regexp","template","values","keys","match","group","formats","errorMessage","ASTNodeImpl","NullASTNodeImpl","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","NumberASTNodeImpl","isInteger","NaN","StringASTNodeImpl","PropertyASTNodeImpl","keyNode","colonOffset","ObjectASTNodeImpl","properties","asSchema","schema","EnumMatch","EnumMatch2","schemaDraftFromId","v3","v4","v6","v7","v2019_09","v2020_12","EvaluationContext","schemaDraft","SchemaCollector","_SchemaCollector","focusOffset","exclude","schemas","add","merge","apply","include","contains2","newSub","NoOpSchemaCollector","_schema","_other","_node","instance","ValidationResult","problems","propertiesMatches","processedProperties","Set","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","validationResult","mergeProcessedProperties","mergeEnumValues","EnumValueMismatch","v","JSON","stringify","mergePropertyMatch","propertyValidationResult","forEach","newJSONDocument","root","JSONDocument","getNodeValue3","getNodePath3","syntaxErrors","comments","getNodeFromOffset","doVisit","ctn","validate","getSchemaDraft","getMatchingSchemas","matchingSchemas","context","fallBack","schemaId","$schema","n","_validateNode","_validateObjectNode","_validateArrayNode","_validateStringNode","_validateNumberNode","matchesType","some","allOf","subSchemaRef","subValidationResult","subMatchingSchemas","notSchema","not","ms","inverted","testAlternatives","alternatives","maxOneMatch","matches","bestMatch","subSchema","compareResult","anyOf","oneOf","testBranch","schema2","testCondition","ifSchema2","thenSchema","elseSchema","ifSchema","if","then","else","enum","const","deprecationMessage","targetNode","node2","normalizeFloats","float","parts","exec","multiplier","parseInt","multipleOf","remainder","normMultipleOf","normValue","abs","getExclusiveLimit","limit","exclusive","getLimit","exclusiveMinimum","minimum","exclusiveMaximum","maximum","minLength","maxLength","regex","test","patternErrorMessage","format5","prefixItemsSchemas","additionalItemSchema","prefixItems","additionalItems","itemValidationResult","containsSchema","containsCount","index2","minContains","maxContains","unevaluatedItems","has","minItems","maxItems","uniqueItems","hasDuplicates","j","seenKeys","unprocessedProperties","propertyNode","required","propertyName","propertyProcessed","delete","propertySchema","child","patternProperties","propertyPattern","processed","additionalProperties","unevaluatedProperties","maxProperties","minProperties","dependentRequired","propertyDeps","_validatePropertyDependencies","dependentSchemas","dependencies","propertyNames","f2","propertyDep","requiredProp","parse3","config","lastProblemOffset","commentRanges","collectComments","_scanNext","token2","_checkScanError","_accept","_errorAtRange","_error","_finalize","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","InvalidCharacter","_parseArray","ValueExpected","commaOffset","TrailingComma","CommaExpected","_parseValue","CommaOrCloseBacketExpected","keyPlaceholder","_parseProperty","keysSeen","_parseString","PropertyKeysMustBeDoublequoted","seen","DuplicateKey","ColonExpected","_parseObject","PropertyExpected","property","CommaOrCloseBraceExpected","_parseNumber","numberValue","Undefined","_parseLiteral","_root","stringifyObject","indent","stringifyLiteral","newIndent","valueCommitCharacters","propertyCommitCharacters","JSONCompletion","schemaService","contributions","promiseConstructor","Promise","clientCapabilities","doResolve","resolveCompletion","resolver","resolve","doComplete","doc","isInComment","currentWord","getCurrentWord","overwriteRange","overwriteStart","supportsCommitCharacters","proposed","Map","collector","suggestion","existing","get","shortendedLabel","trim","commitCharacters","set","labelDetails","setAsIncomplete","console","getNumberOfProposals","getSchemaForResource","collectionPromises","addValue","currentKey","separatorAfter","evaluateSeparatorAfter","getPropertyCompletions","getSchemaLessPropertyCompletions","contribution","collectPromise","collectPropertyCompletions","getLabelForValue","getInsertTextForProperty","insertTextFormat","types","getValueCompletions","getSchemaLessValueCompletions","getContributedValueCompletions","all","offsetForSeparator","addFillerValueCompletions","schemaProperties","doNotSuggest","proposal","getFilterTextForValue","fromMarkup","markdownDescription","suggestSortText","sortText","schemaPropertyNames","propertyNameCompletionItem","enumDescription","markdownEnumDescriptions","enumDescriptions","collectCompletionsForSimilarObject","getInsertTextForValue","parentKey","getSuggestionKind","collectSuggestionsForValues","getLabelTextForMatchingNode","getInsertTextForMatchingNode","addBooleanValueCompletion","addDollarSchemaCompletions","addSchemaValueCompletions","valueNode2","c","existingValues","findItemAtOffset","propertyMatched","addNullValueCompletion","collectDefaultCompletions","collectValueCompletions","addEnumValueCompletions","addDefaultValueCompletions","collectTypes","arrayDepth","hasProposals","default","doesSupportsLabelDetails","examples","example","defaultSnippets","body","type2","getInsertTextForSnippetValue","getFilterTextForSnippetValue","getLabelForSnippetValue","bodyText","prefix","suffix","split","enm","doesSupportMarkdown","t2","getInsertTextForGuessedValue","schemaIds","getRegisteredSchemaIds","getValueFromLabel","getInsertTextForPlainText","replacer","snippetValue","propertyText","resultText","nValueProposals","markupString","supportsMarkdown","doesSupportsCommitCharacters","JSONHover","promise","doHover","hoverRangeNode","hoverRange","createHover","getInfoContribution","htmlContent","markdownEnumValueDescription","enumValue","toMarkdown","idx","toMarkdownCodeBlock","plain","res","JSONValidation","jsonSchemaService","validationEnabled","configure","raw","commentSeverity","allowComments","doValidation","jsonDocument","documentSettings","added","addProblem","problem","signature","getDiagnostics","trailingCommaSeverity","trailingCommas","toDiagnosticSeverity","schemaValidation","schemaRequest","addSchemaProblem","errorCode","astRoot","SchemaResolveError","warning","warnings","SchemaUnsupportedFeature","semanticErrors","schemaAllowsComments","schemaAllowsTrailingCommas","CommentNotPermitted","id","idCounter","handle","registerExternalSchema","getResolvedSchema","resolvedSchema","getLanguageStatus","getSchemaURIsForResource","schemaRef","allow","allowTrailingCommas","deprSchemaRef","severityLevel","Digit0","Digit9","A","a","f","hexDigit","charCode","colorFromHex","JSONDocumentSymbols","findDocumentSymbols","resultLimit","resourceString","toLowerCase","result2","getRange","getName","onResultLimitExceeded","toVisit","nextToVisit","limitExceeded","collectOutlineEntries","childContainerName","getKeyLabel","getSymbolKind","next","findDocumentSymbols2","symbol","getDetail","nodeType","findDocumentColors","visitedNode","nodeId","getColorPresentations","red256","round","green256","blue256","toTwoDigitHex","r","schemaContributions","schemaAssociations","descriptions","definitions","$id","$ref","$comment","readOnly","contentMediaType","contentEncoding","schemaName","propertyObject","LIB","t3","t4","TypeError","r2","e3","r3","n3","o","h","n2","process","cwd","normalize","isAbsolute","relative","u","l","g","_makeLong","dirname","basename","extname","t5","dir","base","ext","sep","delimiter","win32","posix","exports","d","defineProperty","enumerable","hasOwnProperty","Symbol","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","fragment","isUri","fsPath","with","i2","o2","_defineProperty","e4","m","C","file","from","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","s2","encodeURIComponent","h2","c2","decodeURIComponent","A2","w","x","joinPath","resolvePath","URI2","createRegex","glob","opts","reStr","extended","globstar","inGroup","prevChar","starCount","nextChar","isGlobstar","BANG","PATH_SEP","FilePatternAssociation","folderUri","uris","globWrappers","patternString","regexp","normalizeResourceForMatching","matchesPattern","fileName","getURIs","SchemaHandle","service","unresolvedSchemaContent","anchors","unresolvedSchema","UnresolvedSchema","getUnresolvedSchema","loadSchema","unresolved","resolveSchemaContent","clearSchema","hasChanges","clear","ResolvedSchema","getSection","getSectionRecursive","shift","JSONSchemaService","requestService","contextService","callOnDispose","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","registeredSchemasIds","filter","dispose","onResourceChange","cachedSchemaForResource","normalizeId","toWalk","curr","setSchemaContributions","schemaContributions2","normalizedId","addSchemaHandle","schemaAssociation","association","addFilePatternAssociation","schemaHandle","getOrAddSchemaHandle","fpa","fileMatch","clearExternalSchemas","contributionAssociation","url","toDisplayString","trimStart","schemaContent","jsonErrors","errorSplit","schemaToResolve","resolveErrors","usesUnsupportedFeatures","findSectionByJSONPointer","current","part","findSchemaById","handle2","collectAnchors","section","mergeRef","sourceRoot","sourceHandle","refSegment","resolveExternalLink","parentHandle","resolveRelativePath","referencedHandle","loc","resolveRefs","parentSchema","openPromises","traverseNodes","seenRefs","ref","segments","$recursiveRef","$dynamicRef","anchor","$anchor","$recursiveAnchor","$dynamicAnchor","resolveWarnings","size","collectEntries","entries","entry","collectMapEntries","maps","k","collectArrayEntries","arrays","collectEntryOrArrayEntries","$defs","getSchemaFromProperty","resource","getAssociatedSchemas","normalizedResource","schemeId","createCombinedSchema","combinedSchemaId","combinedSchema","idCounter2","getFoldingRanges","ranges","nestingLevels","stack","prevStart","addRange","rangeLimit","onRangeLimitExceeded","counts","level","maxLevel","getSelectionRanges","positions","getSelectionRange","cStart","cEnd","newRange","afterCommaOffset","getOffsetAfterNextToken","expectedToken","format4","documentToFormat","formattingOptions","formattingRange","Container","Container2","PropertyTree","beginningLineNumber","childrenProperties","lastProperty","noKeyName","addChildProperty","childProperty","insertionIndex","binarySearchOnPropertyArray","compareProperties","propertyTree1","propertyTree2","propertyName1","propertyName2","propertyTreeArray","propertyTree","compare_fn","firstPropertyInArrayName","lastPropertyInArrayName","cmp","documentToSort","formattedJsonString","formattedJsonDocument","jsonPropertyTree","findJsoncPropertyTree","sortedJsonDocument","sortJsoncDocument","sortedAndFormattedJsonDocument","formattedDocument","formattedString","rootTree","currentTree","lastTokenLine","numberOfCharactersOnPreviousLines","lastNonTriviaNonCommentToken","secondToLastNonTriviaNonCommentToken","lineOfLastNonTriviaNonCommentToken","endIndexOfLastNonTriviaNonCommentToken","endLineNumber","currentContainerStack","updateLastPropertyEndLineNumber","updateBeginningLineNumber","endLineNumber2","lengthOfLine","lineWhereToAddComma","indexWhereToAddComa","commaIndex","commaLine","queueToSort","updateSortingQueue","dataToSort","jsonContentToReplace","jsonDocumentToReplace","indexWhereToAddComma","edit2","lineWhereToRemoveComma","queue","minimumBeginningLineNumber","Infinity","SortingRange","updateSortingQueueForArrayProperties","subObject","findLinks","links","findTargetNode","targetPos","createRange","tokens","parseJSONPointer","findNode","pointer","find","propertyNode2","arrayItem","unescape","getLanguageService","params","schemaRequestService","workspaceContext","jsonCompletion","jsonHover","jsonDocumentSymbols","jsonValidation","settings","bind","resetSchema","parseJSONDocument","findDefinition","defaultSchemaRequestService","fetch","response","JSONWorker","ctx","createData","_ctx","_languageSettings","languageSettings","_languageService","relativePath","enableSchemaRequest","_getTextDocument","symbols","colorSymbols","colorPresentations","models","getMirrorModels","model","getValue","Slash","Dot","isAbsolutePath","uriString","normalizePath","newParts","paths","self","onmessage","initialize"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/language/json/json.worker.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/language/json/json.worker.ts\nimport * as worker from \"../../editor/editor.worker.js\";\n\n// node_modules/jsonc-parser/lib/esm/impl/scanner.js\nfunction createScanner(text, ignoreTrivia = false) {\n  const len = text.length;\n  let pos = 0, value = \"\", tokenOffset = 0, token = 16, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0;\n  function scanHexDigits(count, exact) {\n    let digits = 0;\n    let value2 = 0;\n    while (digits < count || !exact) {\n      let ch = text.charCodeAt(pos);\n      if (ch >= 48 && ch <= 57) {\n        value2 = value2 * 16 + ch - 48;\n      } else if (ch >= 65 && ch <= 70) {\n        value2 = value2 * 16 + ch - 65 + 10;\n      } else if (ch >= 97 && ch <= 102) {\n        value2 = value2 * 16 + ch - 97 + 10;\n      } else {\n        break;\n      }\n      pos++;\n      digits++;\n    }\n    if (digits < count) {\n      value2 = -1;\n    }\n    return value2;\n  }\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = \"\";\n    tokenOffset = 0;\n    token = 16;\n    scanError = 0;\n  }\n  function scanNumber() {\n    let start = pos;\n    if (text.charCodeAt(pos) === 48) {\n      pos++;\n    } else {\n      pos++;\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n    if (pos < text.length && text.charCodeAt(pos) === 46) {\n      pos++;\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n      } else {\n        scanError = 3;\n        return text.substring(start, pos);\n      }\n    }\n    let end = pos;\n    if (pos < text.length && (text.charCodeAt(pos) === 69 || text.charCodeAt(pos) === 101)) {\n      pos++;\n      if (pos < text.length && text.charCodeAt(pos) === 43 || text.charCodeAt(pos) === 45) {\n        pos++;\n      }\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n        end = pos;\n      } else {\n        scanError = 3;\n      }\n    }\n    return text.substring(start, end);\n  }\n  function scanString() {\n    let result = \"\", start = pos;\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2;\n        break;\n      }\n      const ch = text.charCodeAt(pos);\n      if (ch === 34) {\n        result += text.substring(start, pos);\n        pos++;\n        break;\n      }\n      if (ch === 92) {\n        result += text.substring(start, pos);\n        pos++;\n        if (pos >= len) {\n          scanError = 2;\n          break;\n        }\n        const ch2 = text.charCodeAt(pos++);\n        switch (ch2) {\n          case 34:\n            result += '\"';\n            break;\n          case 92:\n            result += \"\\\\\";\n            break;\n          case 47:\n            result += \"/\";\n            break;\n          case 98:\n            result += \"\\b\";\n            break;\n          case 102:\n            result += \"\\f\";\n            break;\n          case 110:\n            result += \"\\n\";\n            break;\n          case 114:\n            result += \"\\r\";\n            break;\n          case 116:\n            result += \"\t\";\n            break;\n          case 117:\n            const ch3 = scanHexDigits(4, true);\n            if (ch3 >= 0) {\n              result += String.fromCharCode(ch3);\n            } else {\n              scanError = 4;\n            }\n            break;\n          default:\n            scanError = 5;\n        }\n        start = pos;\n        continue;\n      }\n      if (ch >= 0 && ch <= 31) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2;\n          break;\n        } else {\n          scanError = 6;\n        }\n      }\n      pos++;\n    }\n    return result;\n  }\n  function scanNext() {\n    value = \"\";\n    scanError = 0;\n    tokenOffset = pos;\n    lineStartOffset = lineNumber;\n    prevTokenLineStartOffset = tokenLineStartOffset;\n    if (pos >= len) {\n      tokenOffset = len;\n      return token = 17;\n    }\n    let code = text.charCodeAt(pos);\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n      return token = 15;\n    }\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n      if (code === 13 && text.charCodeAt(pos) === 10) {\n        pos++;\n        value += \"\\n\";\n      }\n      lineNumber++;\n      tokenLineStartOffset = pos;\n      return token = 14;\n    }\n    switch (code) {\n      case 123:\n        pos++;\n        return token = 1;\n      case 125:\n        pos++;\n        return token = 2;\n      case 91:\n        pos++;\n        return token = 3;\n      case 93:\n        pos++;\n        return token = 4;\n      case 58:\n        pos++;\n        return token = 6;\n      case 44:\n        pos++;\n        return token = 5;\n      case 34:\n        pos++;\n        value = scanString();\n        return token = 10;\n      case 47:\n        const start = pos - 1;\n        if (text.charCodeAt(pos + 1) === 47) {\n          pos += 2;\n          while (pos < len) {\n            if (isLineBreak(text.charCodeAt(pos))) {\n              break;\n            }\n            pos++;\n          }\n          value = text.substring(start, pos);\n          return token = 12;\n        }\n        if (text.charCodeAt(pos + 1) === 42) {\n          pos += 2;\n          const safeLength = len - 1;\n          let commentClosed = false;\n          while (pos < safeLength) {\n            const ch = text.charCodeAt(pos);\n            if (ch === 42 && text.charCodeAt(pos + 1) === 47) {\n              pos += 2;\n              commentClosed = true;\n              break;\n            }\n            pos++;\n            if (isLineBreak(ch)) {\n              if (ch === 13 && text.charCodeAt(pos) === 10) {\n                pos++;\n              }\n              lineNumber++;\n              tokenLineStartOffset = pos;\n            }\n          }\n          if (!commentClosed) {\n            pos++;\n            scanError = 1;\n          }\n          value = text.substring(start, pos);\n          return token = 13;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n      case 45:\n        value += String.fromCharCode(code);\n        pos++;\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16;\n        }\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        value += scanNumber();\n        return token = 11;\n      default:\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos);\n          switch (value) {\n            case \"true\":\n              return token = 8;\n            case \"false\":\n              return token = 9;\n            case \"null\":\n              return token = 7;\n          }\n          return token = 16;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n    }\n  }\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n    switch (code) {\n      case 125:\n      case 93:\n      case 123:\n      case 91:\n      case 34:\n      case 58:\n      case 44:\n      case 47:\n        return false;\n    }\n    return true;\n  }\n  function scanNextNonTrivia() {\n    let result;\n    do {\n      result = scanNext();\n    } while (result >= 12 && result <= 15);\n    return result;\n  }\n  return {\n    setPosition,\n    getPosition: () => pos,\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: () => token,\n    getTokenValue: () => value,\n    getTokenOffset: () => tokenOffset,\n    getTokenLength: () => pos - tokenOffset,\n    getTokenStartLine: () => lineStartOffset,\n    getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n    getTokenError: () => scanError\n  };\n}\nfunction isWhiteSpace(ch) {\n  return ch === 32 || ch === 9;\n}\nfunction isLineBreak(ch) {\n  return ch === 10 || ch === 13;\n}\nfunction isDigit(ch) {\n  return ch >= 48 && ch <= 57;\n}\nvar CharacterCodes;\n(function(CharacterCodes2) {\n  CharacterCodes2[CharacterCodes2[\"lineFeed\"] = 10] = \"lineFeed\";\n  CharacterCodes2[CharacterCodes2[\"carriageReturn\"] = 13] = \"carriageReturn\";\n  CharacterCodes2[CharacterCodes2[\"space\"] = 32] = \"space\";\n  CharacterCodes2[CharacterCodes2[\"_0\"] = 48] = \"_0\";\n  CharacterCodes2[CharacterCodes2[\"_1\"] = 49] = \"_1\";\n  CharacterCodes2[CharacterCodes2[\"_2\"] = 50] = \"_2\";\n  CharacterCodes2[CharacterCodes2[\"_3\"] = 51] = \"_3\";\n  CharacterCodes2[CharacterCodes2[\"_4\"] = 52] = \"_4\";\n  CharacterCodes2[CharacterCodes2[\"_5\"] = 53] = \"_5\";\n  CharacterCodes2[CharacterCodes2[\"_6\"] = 54] = \"_6\";\n  CharacterCodes2[CharacterCodes2[\"_7\"] = 55] = \"_7\";\n  CharacterCodes2[CharacterCodes2[\"_8\"] = 56] = \"_8\";\n  CharacterCodes2[CharacterCodes2[\"_9\"] = 57] = \"_9\";\n  CharacterCodes2[CharacterCodes2[\"a\"] = 97] = \"a\";\n  CharacterCodes2[CharacterCodes2[\"b\"] = 98] = \"b\";\n  CharacterCodes2[CharacterCodes2[\"c\"] = 99] = \"c\";\n  CharacterCodes2[CharacterCodes2[\"d\"] = 100] = \"d\";\n  CharacterCodes2[CharacterCodes2[\"e\"] = 101] = \"e\";\n  CharacterCodes2[CharacterCodes2[\"f\"] = 102] = \"f\";\n  CharacterCodes2[CharacterCodes2[\"g\"] = 103] = \"g\";\n  CharacterCodes2[CharacterCodes2[\"h\"] = 104] = \"h\";\n  CharacterCodes2[CharacterCodes2[\"i\"] = 105] = \"i\";\n  CharacterCodes2[CharacterCodes2[\"j\"] = 106] = \"j\";\n  CharacterCodes2[CharacterCodes2[\"k\"] = 107] = \"k\";\n  CharacterCodes2[CharacterCodes2[\"l\"] = 108] = \"l\";\n  CharacterCodes2[CharacterCodes2[\"m\"] = 109] = \"m\";\n  CharacterCodes2[CharacterCodes2[\"n\"] = 110] = \"n\";\n  CharacterCodes2[CharacterCodes2[\"o\"] = 111] = \"o\";\n  CharacterCodes2[CharacterCodes2[\"p\"] = 112] = \"p\";\n  CharacterCodes2[CharacterCodes2[\"q\"] = 113] = \"q\";\n  CharacterCodes2[CharacterCodes2[\"r\"] = 114] = \"r\";\n  CharacterCodes2[CharacterCodes2[\"s\"] = 115] = \"s\";\n  CharacterCodes2[CharacterCodes2[\"t\"] = 116] = \"t\";\n  CharacterCodes2[CharacterCodes2[\"u\"] = 117] = \"u\";\n  CharacterCodes2[CharacterCodes2[\"v\"] = 118] = \"v\";\n  CharacterCodes2[CharacterCodes2[\"w\"] = 119] = \"w\";\n  CharacterCodes2[CharacterCodes2[\"x\"] = 120] = \"x\";\n  CharacterCodes2[CharacterCodes2[\"y\"] = 121] = \"y\";\n  CharacterCodes2[CharacterCodes2[\"z\"] = 122] = \"z\";\n  CharacterCodes2[CharacterCodes2[\"A\"] = 65] = \"A\";\n  CharacterCodes2[CharacterCodes2[\"B\"] = 66] = \"B\";\n  CharacterCodes2[CharacterCodes2[\"C\"] = 67] = \"C\";\n  CharacterCodes2[CharacterCodes2[\"D\"] = 68] = \"D\";\n  CharacterCodes2[CharacterCodes2[\"E\"] = 69] = \"E\";\n  CharacterCodes2[CharacterCodes2[\"F\"] = 70] = \"F\";\n  CharacterCodes2[CharacterCodes2[\"G\"] = 71] = \"G\";\n  CharacterCodes2[CharacterCodes2[\"H\"] = 72] = \"H\";\n  CharacterCodes2[CharacterCodes2[\"I\"] = 73] = \"I\";\n  CharacterCodes2[CharacterCodes2[\"J\"] = 74] = \"J\";\n  CharacterCodes2[CharacterCodes2[\"K\"] = 75] = \"K\";\n  CharacterCodes2[CharacterCodes2[\"L\"] = 76] = \"L\";\n  CharacterCodes2[CharacterCodes2[\"M\"] = 77] = \"M\";\n  CharacterCodes2[CharacterCodes2[\"N\"] = 78] = \"N\";\n  CharacterCodes2[CharacterCodes2[\"O\"] = 79] = \"O\";\n  CharacterCodes2[CharacterCodes2[\"P\"] = 80] = \"P\";\n  CharacterCodes2[CharacterCodes2[\"Q\"] = 81] = \"Q\";\n  CharacterCodes2[CharacterCodes2[\"R\"] = 82] = \"R\";\n  CharacterCodes2[CharacterCodes2[\"S\"] = 83] = \"S\";\n  CharacterCodes2[CharacterCodes2[\"T\"] = 84] = \"T\";\n  CharacterCodes2[CharacterCodes2[\"U\"] = 85] = \"U\";\n  CharacterCodes2[CharacterCodes2[\"V\"] = 86] = \"V\";\n  CharacterCodes2[CharacterCodes2[\"W\"] = 87] = \"W\";\n  CharacterCodes2[CharacterCodes2[\"X\"] = 88] = \"X\";\n  CharacterCodes2[CharacterCodes2[\"Y\"] = 89] = \"Y\";\n  CharacterCodes2[CharacterCodes2[\"Z\"] = 90] = \"Z\";\n  CharacterCodes2[CharacterCodes2[\"asterisk\"] = 42] = \"asterisk\";\n  CharacterCodes2[CharacterCodes2[\"backslash\"] = 92] = \"backslash\";\n  CharacterCodes2[CharacterCodes2[\"closeBrace\"] = 125] = \"closeBrace\";\n  CharacterCodes2[CharacterCodes2[\"closeBracket\"] = 93] = \"closeBracket\";\n  CharacterCodes2[CharacterCodes2[\"colon\"] = 58] = \"colon\";\n  CharacterCodes2[CharacterCodes2[\"comma\"] = 44] = \"comma\";\n  CharacterCodes2[CharacterCodes2[\"dot\"] = 46] = \"dot\";\n  CharacterCodes2[CharacterCodes2[\"doubleQuote\"] = 34] = \"doubleQuote\";\n  CharacterCodes2[CharacterCodes2[\"minus\"] = 45] = \"minus\";\n  CharacterCodes2[CharacterCodes2[\"openBrace\"] = 123] = \"openBrace\";\n  CharacterCodes2[CharacterCodes2[\"openBracket\"] = 91] = \"openBracket\";\n  CharacterCodes2[CharacterCodes2[\"plus\"] = 43] = \"plus\";\n  CharacterCodes2[CharacterCodes2[\"slash\"] = 47] = \"slash\";\n  CharacterCodes2[CharacterCodes2[\"formFeed\"] = 12] = \"formFeed\";\n  CharacterCodes2[CharacterCodes2[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n\n// node_modules/jsonc-parser/lib/esm/impl/string-intern.js\nvar cachedSpaces = new Array(20).fill(0).map((_, index) => {\n  return \" \".repeat(index);\n});\nvar maxCachedValues = 200;\nvar cachedBreakLinesWithSpaces = {\n  \" \": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \" \".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \" \".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \" \".repeat(index);\n    })\n  },\n  \"\t\": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \"\t\".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \"\t\".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \"\t\".repeat(index);\n    })\n  }\n};\nvar supportedEols = [\"\\n\", \"\\r\", \"\\r\\n\"];\n\n// node_modules/jsonc-parser/lib/esm/impl/format.js\nfunction format(documentText, range, options) {\n  let initialIndentLevel;\n  let formatText;\n  let formatTextStart;\n  let rangeStart;\n  let rangeEnd;\n  if (range) {\n    rangeStart = range.offset;\n    rangeEnd = rangeStart + range.length;\n    formatTextStart = rangeStart;\n    while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n      formatTextStart--;\n    }\n    let endOffset = rangeEnd;\n    while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n      endOffset++;\n    }\n    formatText = documentText.substring(formatTextStart, endOffset);\n    initialIndentLevel = computeIndentLevel(formatText, options);\n  } else {\n    formatText = documentText;\n    initialIndentLevel = 0;\n    formatTextStart = 0;\n    rangeStart = 0;\n    rangeEnd = documentText.length;\n  }\n  const eol = getEOL(options, documentText);\n  const eolFastPathSupported = supportedEols.includes(eol);\n  let numberLineBreaks = 0;\n  let indentLevel = 0;\n  let indentValue;\n  if (options.insertSpaces) {\n    indentValue = cachedSpaces[options.tabSize || 4] ?? repeat(cachedSpaces[1], options.tabSize || 4);\n  } else {\n    indentValue = \"\t\";\n  }\n  const indentType = indentValue === \"\t\" ? \"\t\" : \" \";\n  let scanner = createScanner(formatText, false);\n  let hasError = false;\n  function newLinesAndIndent() {\n    if (numberLineBreaks > 1) {\n      return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    const amountOfSpaces = indentValue.length * (initialIndentLevel + indentLevel);\n    if (!eolFastPathSupported || amountOfSpaces > cachedBreakLinesWithSpaces[indentType][eol].length) {\n      return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    if (amountOfSpaces <= 0) {\n      return eol;\n    }\n    return cachedBreakLinesWithSpaces[indentType][eol][amountOfSpaces];\n  }\n  function scanNext() {\n    let token = scanner.scan();\n    numberLineBreaks = 0;\n    while (token === 15 || token === 14) {\n      if (token === 14 && options.keepLines) {\n        numberLineBreaks += 1;\n      } else if (token === 14) {\n        numberLineBreaks = 1;\n      }\n      token = scanner.scan();\n    }\n    hasError = token === 16 || scanner.getTokenError() !== 0;\n    return token;\n  }\n  const editOperations = [];\n  function addEdit(text, startOffset, endOffset) {\n    if (!hasError && (!range || startOffset < rangeEnd && endOffset > rangeStart) && documentText.substring(startOffset, endOffset) !== text) {\n      editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n    }\n  }\n  let firstToken = scanNext();\n  if (options.keepLines && numberLineBreaks > 0) {\n    addEdit(repeat(eol, numberLineBreaks), 0, 0);\n  }\n  if (firstToken !== 17) {\n    let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n    let initialIndent = indentValue.length * initialIndentLevel < 20 && options.insertSpaces ? cachedSpaces[indentValue.length * initialIndentLevel] : repeat(indentValue, initialIndentLevel);\n    addEdit(initialIndent, formatTextStart, firstTokenStart);\n  }\n  while (firstToken !== 17) {\n    let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n    let secondToken = scanNext();\n    let replaceContent = \"\";\n    let needsLineBreak = false;\n    while (numberLineBreaks === 0 && (secondToken === 12 || secondToken === 13)) {\n      let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n      addEdit(cachedSpaces[1], firstTokenEnd, commentTokenStart);\n      firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n      needsLineBreak = secondToken === 12;\n      replaceContent = needsLineBreak ? newLinesAndIndent() : \"\";\n      secondToken = scanNext();\n    }\n    if (secondToken === 2) {\n      if (firstToken !== 1) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else if (secondToken === 4) {\n      if (firstToken !== 3) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else {\n      switch (firstToken) {\n        case 3:\n        case 1:\n          indentLevel++;\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 5:\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 12:\n          replaceContent = newLinesAndIndent();\n          break;\n        case 13:\n          if (numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 6:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 10:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (secondToken === 6 && !needsLineBreak) {\n            replaceContent = \"\";\n          }\n          break;\n        case 7:\n        case 8:\n        case 9:\n        case 11:\n        case 2:\n        case 4:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            if ((secondToken === 12 || secondToken === 13) && !needsLineBreak) {\n              replaceContent = cachedSpaces[1];\n            } else if (secondToken !== 5 && secondToken !== 17) {\n              hasError = true;\n            }\n          }\n          break;\n        case 16:\n          hasError = true;\n          break;\n      }\n      if (numberLineBreaks > 0 && (secondToken === 12 || secondToken === 13)) {\n        replaceContent = newLinesAndIndent();\n      }\n    }\n    if (secondToken === 17) {\n      if (options.keepLines && numberLineBreaks > 0) {\n        replaceContent = newLinesAndIndent();\n      } else {\n        replaceContent = options.insertFinalNewline ? eol : \"\";\n      }\n    }\n    const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n    addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n    firstToken = secondToken;\n  }\n  return editOperations;\n}\nfunction repeat(s, count) {\n  let result = \"\";\n  for (let i = 0; i < count; i++) {\n    result += s;\n  }\n  return result;\n}\nfunction computeIndentLevel(content, options) {\n  let i = 0;\n  let nChars = 0;\n  const tabSize = options.tabSize || 4;\n  while (i < content.length) {\n    let ch = content.charAt(i);\n    if (ch === cachedSpaces[1]) {\n      nChars++;\n    } else if (ch === \"\t\") {\n      nChars += tabSize;\n    } else {\n      break;\n    }\n    i++;\n  }\n  return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n  for (let i = 0; i < text.length; i++) {\n    const ch = text.charAt(i);\n    if (ch === \"\\r\") {\n      if (i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n        return \"\\r\\n\";\n      }\n      return \"\\r\";\n    } else if (ch === \"\\n\") {\n      return \"\\n\";\n    }\n  }\n  return options && options.eol || \"\\n\";\n}\nfunction isEOL(text, offset) {\n  return \"\\r\\n\".indexOf(text.charAt(offset)) !== -1;\n}\n\n// node_modules/jsonc-parser/lib/esm/impl/parser.js\nvar ParseOptions;\n(function(ParseOptions2) {\n  ParseOptions2.DEFAULT = {\n    allowTrailingComma: false\n  };\n})(ParseOptions || (ParseOptions = {}));\nfunction parse(text, errors = [], options = ParseOptions.DEFAULT) {\n  let currentProperty = null;\n  let currentParent = [];\n  const previousParents = [];\n  function onValue(value) {\n    if (Array.isArray(currentParent)) {\n      currentParent.push(value);\n    } else if (currentProperty !== null) {\n      currentParent[currentProperty] = value;\n    }\n  }\n  const visitor = {\n    onObjectBegin: () => {\n      const object = {};\n      onValue(object);\n      previousParents.push(currentParent);\n      currentParent = object;\n      currentProperty = null;\n    },\n    onObjectProperty: (name) => {\n      currentProperty = name;\n    },\n    onObjectEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onArrayBegin: () => {\n      const array = [];\n      onValue(array);\n      previousParents.push(currentParent);\n      currentParent = array;\n      currentProperty = null;\n    },\n    onArrayEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onLiteralValue: onValue,\n    onError: (error, offset, length) => {\n      errors.push({ error, offset, length });\n    }\n  };\n  visit(text, visitor, options);\n  return currentParent[0];\n}\nfunction getNodePath(node) {\n  if (!node.parent || !node.parent.children) {\n    return [];\n  }\n  const path = getNodePath(node.parent);\n  if (node.parent.type === \"property\") {\n    const key = node.parent.children[0].value;\n    path.push(key);\n  } else if (node.parent.type === \"array\") {\n    const index = node.parent.children.indexOf(node);\n    if (index !== -1) {\n      path.push(index);\n    }\n  }\n  return path;\n}\nfunction getNodeValue(node) {\n  switch (node.type) {\n    case \"array\":\n      return node.children.map(getNodeValue);\n    case \"object\":\n      const obj = /* @__PURE__ */ Object.create(null);\n      for (let prop of node.children) {\n        const valueNode = prop.children[1];\n        if (valueNode) {\n          obj[prop.children[0].value] = getNodeValue(valueNode);\n        }\n      }\n      return obj;\n    case \"null\":\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return node.value;\n    default:\n      return void 0;\n  }\n}\nfunction contains(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nfunction findNodeAtOffset(node, offset, includeRightBound = false) {\n  if (contains(node, offset, includeRightBound)) {\n    const children = node.children;\n    if (Array.isArray(children)) {\n      for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n        const item = findNodeAtOffset(children[i], offset, includeRightBound);\n        if (item) {\n          return item;\n        }\n      }\n    }\n    return node;\n  }\n  return void 0;\n}\nfunction visit(text, visitor, options = ParseOptions.DEFAULT) {\n  const _scanner = createScanner(text, false);\n  const _jsonPath = [];\n  function toNoArgVisit(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toNoArgVisitWithPath(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  function toOneArgVisit(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toOneArgVisitWithPath(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n  const disallowComments = options && options.disallowComments;\n  const allowTrailingComma = options && options.allowTrailingComma;\n  function scanNext() {\n    while (true) {\n      const token = _scanner.scan();\n      switch (_scanner.getTokenError()) {\n        case 4:\n          handleError(\n            14\n            /* ParseErrorCode.InvalidUnicode */\n          );\n          break;\n        case 5:\n          handleError(\n            15\n            /* ParseErrorCode.InvalidEscapeCharacter */\n          );\n          break;\n        case 3:\n          handleError(\n            13\n            /* ParseErrorCode.UnexpectedEndOfNumber */\n          );\n          break;\n        case 1:\n          if (!disallowComments) {\n            handleError(\n              11\n              /* ParseErrorCode.UnexpectedEndOfComment */\n            );\n          }\n          break;\n        case 2:\n          handleError(\n            12\n            /* ParseErrorCode.UnexpectedEndOfString */\n          );\n          break;\n        case 6:\n          handleError(\n            16\n            /* ParseErrorCode.InvalidCharacter */\n          );\n          break;\n      }\n      switch (token) {\n        case 12:\n        case 13:\n          if (disallowComments) {\n            handleError(\n              10\n              /* ParseErrorCode.InvalidCommentToken */\n            );\n          } else {\n            onComment();\n          }\n          break;\n        case 16:\n          handleError(\n            1\n            /* ParseErrorCode.InvalidSymbol */\n          );\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token;\n      }\n    }\n  }\n  function handleError(error, skipUntilAfter = [], skipUntil = []) {\n    onError(error);\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token = _scanner.getToken();\n      while (token !== 17) {\n        if (skipUntilAfter.indexOf(token) !== -1) {\n          scanNext();\n          break;\n        } else if (skipUntil.indexOf(token) !== -1) {\n          break;\n        }\n        token = scanNext();\n      }\n    }\n  }\n  function parseString(isValue) {\n    const value = _scanner.getTokenValue();\n    if (isValue) {\n      onLiteralValue(value);\n    } else {\n      onObjectProperty(value);\n      _jsonPath.push(value);\n    }\n    scanNext();\n    return true;\n  }\n  function parseLiteral() {\n    switch (_scanner.getToken()) {\n      case 11:\n        const tokenValue = _scanner.getTokenValue();\n        let value = Number(tokenValue);\n        if (isNaN(value)) {\n          handleError(\n            2\n            /* ParseErrorCode.InvalidNumberFormat */\n          );\n          value = 0;\n        }\n        onLiteralValue(value);\n        break;\n      case 7:\n        onLiteralValue(null);\n        break;\n      case 8:\n        onLiteralValue(true);\n        break;\n      case 9:\n        onLiteralValue(false);\n        break;\n      default:\n        return false;\n    }\n    scanNext();\n    return true;\n  }\n  function parseProperty() {\n    if (_scanner.getToken() !== 10) {\n      handleError(3, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n      return false;\n    }\n    parseString(false);\n    if (_scanner.getToken() === 6) {\n      onSeparator(\":\");\n      scanNext();\n      if (!parseValue()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n    } else {\n      handleError(5, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n    }\n    _jsonPath.pop();\n    return true;\n  }\n  function parseObject() {\n    onObjectBegin();\n    scanNext();\n    let needsComma = false;\n    while (_scanner.getToken() !== 2 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 2 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (!parseProperty()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onObjectEnd();\n    if (_scanner.getToken() !== 2) {\n      handleError(7, [\n        2\n        /* SyntaxKind.CloseBraceToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseArray() {\n    onArrayBegin();\n    scanNext();\n    let isFirstElement = true;\n    let needsComma = false;\n    while (_scanner.getToken() !== 4 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 4 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (isFirstElement) {\n        _jsonPath.push(0);\n        isFirstElement = false;\n      } else {\n        _jsonPath[_jsonPath.length - 1]++;\n      }\n      if (!parseValue()) {\n        handleError(4, [], [\n          4,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onArrayEnd();\n    if (!isFirstElement) {\n      _jsonPath.pop();\n    }\n    if (_scanner.getToken() !== 4) {\n      handleError(8, [\n        4\n        /* SyntaxKind.CloseBracketToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseValue() {\n    switch (_scanner.getToken()) {\n      case 3:\n        return parseArray();\n      case 1:\n        return parseObject();\n      case 10:\n        return parseString(true);\n      default:\n        return parseLiteral();\n    }\n  }\n  scanNext();\n  if (_scanner.getToken() === 17) {\n    if (options.allowEmptyContent) {\n      return true;\n    }\n    handleError(4, [], []);\n    return false;\n  }\n  if (!parseValue()) {\n    handleError(4, [], []);\n    return false;\n  }\n  if (_scanner.getToken() !== 17) {\n    handleError(9, [], []);\n  }\n  return true;\n}\n\n// node_modules/jsonc-parser/lib/esm/main.js\nvar createScanner2 = createScanner;\nvar ScanError;\n(function(ScanError2) {\n  ScanError2[ScanError2[\"None\"] = 0] = \"None\";\n  ScanError2[ScanError2[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n  ScanError2[ScanError2[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n  ScanError2[ScanError2[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n  ScanError2[ScanError2[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n  ScanError2[ScanError2[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n  ScanError2[ScanError2[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nvar SyntaxKind;\n(function(SyntaxKind2) {\n  SyntaxKind2[SyntaxKind2[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CommaToken\"] = 5] = \"CommaToken\";\n  SyntaxKind2[SyntaxKind2[\"ColonToken\"] = 6] = \"ColonToken\";\n  SyntaxKind2[SyntaxKind2[\"NullKeyword\"] = 7] = \"NullKeyword\";\n  SyntaxKind2[SyntaxKind2[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n  SyntaxKind2[SyntaxKind2[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n  SyntaxKind2[SyntaxKind2[\"StringLiteral\"] = 10] = \"StringLiteral\";\n  SyntaxKind2[SyntaxKind2[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n  SyntaxKind2[SyntaxKind2[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n  SyntaxKind2[SyntaxKind2[\"Trivia\"] = 15] = \"Trivia\";\n  SyntaxKind2[SyntaxKind2[\"Unknown\"] = 16] = \"Unknown\";\n  SyntaxKind2[SyntaxKind2[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\nvar parse2 = parse;\nvar findNodeAtOffset2 = findNodeAtOffset;\nvar getNodePath2 = getNodePath;\nvar getNodeValue2 = getNodeValue;\nvar ParseErrorCode;\n(function(ParseErrorCode2) {\n  ParseErrorCode2[ParseErrorCode2[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n  ParseErrorCode2[ParseErrorCode2[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ValueExpected\"] = 4] = \"ValueExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ColonExpected\"] = 5] = \"ColonExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CommaExpected\"] = 6] = \"CommaExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nfunction format2(documentText, range, options) {\n  return format(documentText, range, options);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/objects.js\nfunction equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === void 0 || other === null || other === void 0) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i, key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction isNumber(val) {\n  return typeof val === \"number\";\n}\nfunction isDefined(val) {\n  return typeof val !== \"undefined\";\n}\nfunction isBoolean(val) {\n  return typeof val === \"boolean\";\n}\nfunction isString(val) {\n  return typeof val === \"string\";\n}\nfunction isObject(val) {\n  return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/strings.js\nfunction startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (let i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction endsWith(haystack, needle) {\n  const diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nfunction extendedRegExp(pattern) {\n  let flags = \"\";\n  if (startsWith(pattern, \"(?i)\")) {\n    pattern = pattern.substring(4);\n    flags = \"i\";\n  }\n  try {\n    return new RegExp(pattern, flags + \"u\");\n  } catch (e) {\n    try {\n      return new RegExp(pattern, flags);\n    } catch (e2) {\n      return void 0;\n    }\n  }\n}\nfunction stringLength(str) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    count++;\n    const code = str.charCodeAt(i);\n    if (55296 <= code && code <= 56319) {\n      i++;\n    }\n  }\n  return count;\n}\n\n// node_modules/vscode-languageserver-types/lib/esm/main.js\nvar DocumentUri;\n(function(DocumentUri2) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  DocumentUri2.is = is;\n})(DocumentUri || (DocumentUri = {}));\nvar URI;\n(function(URI3) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  URI3.is = is;\n})(URI || (URI = {}));\nvar integer;\n(function(integer2) {\n  integer2.MIN_VALUE = -2147483648;\n  integer2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\n  }\n  integer2.is = is;\n})(integer || (integer = {}));\nvar uinteger;\n(function(uinteger2) {\n  uinteger2.MIN_VALUE = 0;\n  uinteger2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\n  }\n  uinteger2.is = is;\n})(uinteger || (uinteger = {}));\nvar Position;\n(function(Position2) {\n  function create(line, character) {\n    if (line === Number.MAX_VALUE) {\n      line = uinteger.MAX_VALUE;\n    }\n    if (character === Number.MAX_VALUE) {\n      character = uinteger.MAX_VALUE;\n    }\n    return { line, character };\n  }\n  Position2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n  }\n  Position2.is = is;\n})(Position || (Position = {}));\nvar Range;\n(function(Range2) {\n  function create(one, two, three, four) {\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n      return { start: Position.create(one, two), end: Position.create(three, four) };\n    } else if (Position.is(one) && Position.is(two)) {\n      return { start: one, end: two };\n    } else {\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n    }\n  }\n  Range2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n  Range2.is = is;\n})(Range || (Range = {}));\nvar Location;\n(function(Location2) {\n  function create(uri, range) {\n    return { uri, range };\n  }\n  Location2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n  Location2.is = is;\n})(Location || (Location = {}));\nvar LocationLink;\n(function(LocationLink2) {\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n    return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n  }\n  LocationLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n  }\n  LocationLink2.is = is;\n})(LocationLink || (LocationLink = {}));\nvar Color;\n(function(Color2) {\n  function create(red, green, blue, alpha) {\n    return {\n      red,\n      green,\n      blue,\n      alpha\n    };\n  }\n  Color2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\n  }\n  Color2.is = is;\n})(Color || (Color = {}));\nvar ColorInformation;\n(function(ColorInformation2) {\n  function create(range, color) {\n    return {\n      range,\n      color\n    };\n  }\n  ColorInformation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n  }\n  ColorInformation2.is = is;\n})(ColorInformation || (ColorInformation = {}));\nvar ColorPresentation;\n(function(ColorPresentation2) {\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label,\n      textEdit,\n      additionalTextEdits\n    };\n  }\n  ColorPresentation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n  ColorPresentation2.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\nvar FoldingRangeKind;\n(function(FoldingRangeKind2) {\n  FoldingRangeKind2.Comment = \"comment\";\n  FoldingRangeKind2.Imports = \"imports\";\n  FoldingRangeKind2.Region = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\nvar FoldingRange;\n(function(FoldingRange2) {\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n    const result = {\n      startLine,\n      endLine\n    };\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n    if (Is.defined(collapsedText)) {\n      result.collapsedText = collapsedText;\n    }\n    return result;\n  }\n  FoldingRange2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n  FoldingRange2.is = is;\n})(FoldingRange || (FoldingRange = {}));\nvar DiagnosticRelatedInformation;\n(function(DiagnosticRelatedInformation2) {\n  function create(location, message) {\n    return {\n      location,\n      message\n    };\n  }\n  DiagnosticRelatedInformation2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n  DiagnosticRelatedInformation2.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\nvar DiagnosticSeverity;\n(function(DiagnosticSeverity2) {\n  DiagnosticSeverity2.Error = 1;\n  DiagnosticSeverity2.Warning = 2;\n  DiagnosticSeverity2.Information = 3;\n  DiagnosticSeverity2.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\nvar DiagnosticTag;\n(function(DiagnosticTag2) {\n  DiagnosticTag2.Unnecessary = 1;\n  DiagnosticTag2.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\nvar CodeDescription;\n(function(CodeDescription2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\n  }\n  CodeDescription2.is = is;\n})(CodeDescription || (CodeDescription = {}));\nvar Diagnostic;\n(function(Diagnostic2) {\n  function create(range, message, severity, code, source, relatedInformation) {\n    let result = { range, message };\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n    return result;\n  }\n  Diagnostic2.create = create;\n  function is(value) {\n    var _a;\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n  Diagnostic2.is = is;\n})(Diagnostic || (Diagnostic = {}));\nvar Command;\n(function(Command2) {\n  function create(title, command, ...args) {\n    let result = { title, command };\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n    return result;\n  }\n  Command2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n  Command2.is = is;\n})(Command || (Command = {}));\nvar TextEdit;\n(function(TextEdit2) {\n  function replace(range, newText) {\n    return { range, newText };\n  }\n  TextEdit2.replace = replace;\n  function insert(position, newText) {\n    return { range: { start: position, end: position }, newText };\n  }\n  TextEdit2.insert = insert;\n  function del(range) {\n    return { range, newText: \"\" };\n  }\n  TextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n  TextEdit2.is = is;\n})(TextEdit || (TextEdit = {}));\nvar ChangeAnnotation;\n(function(ChangeAnnotation2) {\n  function create(label, needsConfirmation, description) {\n    const result = { label };\n    if (needsConfirmation !== void 0) {\n      result.needsConfirmation = needsConfirmation;\n    }\n    if (description !== void 0) {\n      result.description = description;\n    }\n    return result;\n  }\n  ChangeAnnotation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  ChangeAnnotation2.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nvar ChangeAnnotationIdentifier;\n(function(ChangeAnnotationIdentifier2) {\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate);\n  }\n  ChangeAnnotationIdentifier2.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nvar AnnotatedTextEdit;\n(function(AnnotatedTextEdit2) {\n  function replace(range, newText, annotation) {\n    return { range, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.replace = replace;\n  function insert(position, newText, annotation) {\n    return { range: { start: position, end: position }, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.insert = insert;\n  function del(range, annotation) {\n    return { range, newText: \"\", annotationId: annotation };\n  }\n  AnnotatedTextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  AnnotatedTextEdit2.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\nvar TextDocumentEdit;\n(function(TextDocumentEdit2) {\n  function create(textDocument, edits) {\n    return { textDocument, edits };\n  }\n  TextDocumentEdit2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n  TextDocumentEdit2.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function(CreateFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"create\",\n      uri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  CreateFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  CreateFile2.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function(RenameFile2) {\n  function create(oldUri, newUri, options, annotation) {\n    let result = {\n      kind: \"rename\",\n      oldUri,\n      newUri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  RenameFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  RenameFile2.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function(DeleteFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"delete\",\n      uri\n    };\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  DeleteFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  DeleteFile2.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function(WorkspaceEdit2) {\n  function is(value) {\n    let candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n  WorkspaceEdit2.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextDocumentIdentifier;\n(function(TextDocumentIdentifier2) {\n  function create(uri) {\n    return { uri };\n  }\n  TextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n  TextDocumentIdentifier2.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\nvar VersionedTextDocumentIdentifier;\n(function(VersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  VersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n  }\n  VersionedTextDocumentIdentifier2.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\nvar OptionalVersionedTextDocumentIdentifier;\n(function(OptionalVersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  OptionalVersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n  }\n  OptionalVersionedTextDocumentIdentifier2.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\nvar TextDocumentItem;\n(function(TextDocumentItem2) {\n  function create(uri, languageId, version, text) {\n    return { uri, languageId, version, text };\n  }\n  TextDocumentItem2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n  }\n  TextDocumentItem2.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\nvar MarkupKind;\n(function(MarkupKind2) {\n  MarkupKind2.PlainText = \"plaintext\";\n  MarkupKind2.Markdown = \"markdown\";\n  function is(value) {\n    const candidate = value;\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\n  }\n  MarkupKind2.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function(MarkupContent2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n  MarkupContent2.is = is;\n})(MarkupContent || (MarkupContent = {}));\nvar CompletionItemKind;\n(function(CompletionItemKind2) {\n  CompletionItemKind2.Text = 1;\n  CompletionItemKind2.Method = 2;\n  CompletionItemKind2.Function = 3;\n  CompletionItemKind2.Constructor = 4;\n  CompletionItemKind2.Field = 5;\n  CompletionItemKind2.Variable = 6;\n  CompletionItemKind2.Class = 7;\n  CompletionItemKind2.Interface = 8;\n  CompletionItemKind2.Module = 9;\n  CompletionItemKind2.Property = 10;\n  CompletionItemKind2.Unit = 11;\n  CompletionItemKind2.Value = 12;\n  CompletionItemKind2.Enum = 13;\n  CompletionItemKind2.Keyword = 14;\n  CompletionItemKind2.Snippet = 15;\n  CompletionItemKind2.Color = 16;\n  CompletionItemKind2.File = 17;\n  CompletionItemKind2.Reference = 18;\n  CompletionItemKind2.Folder = 19;\n  CompletionItemKind2.EnumMember = 20;\n  CompletionItemKind2.Constant = 21;\n  CompletionItemKind2.Struct = 22;\n  CompletionItemKind2.Event = 23;\n  CompletionItemKind2.Operator = 24;\n  CompletionItemKind2.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar InsertTextFormat;\n(function(InsertTextFormat2) {\n  InsertTextFormat2.PlainText = 1;\n  InsertTextFormat2.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\nvar CompletionItemTag;\n(function(CompletionItemTag2) {\n  CompletionItemTag2.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar InsertReplaceEdit;\n(function(InsertReplaceEdit2) {\n  function create(newText, insert, replace) {\n    return { newText, insert, replace };\n  }\n  InsertReplaceEdit2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n  }\n  InsertReplaceEdit2.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\nvar InsertTextMode;\n(function(InsertTextMode2) {\n  InsertTextMode2.asIs = 1;\n  InsertTextMode2.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nvar CompletionItemLabelDetails;\n(function(CompletionItemLabelDetails2) {\n  function is(value) {\n    const candidate = value;\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  CompletionItemLabelDetails2.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\nvar CompletionItem;\n(function(CompletionItem2) {\n  function create(label) {\n    return { label };\n  }\n  CompletionItem2.create = create;\n})(CompletionItem || (CompletionItem = {}));\nvar CompletionList;\n(function(CompletionList2) {\n  function create(items, isIncomplete) {\n    return { items: items ? items : [], isIncomplete: !!isIncomplete };\n  }\n  CompletionList2.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function(MarkedString2) {\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  MarkedString2.fromPlainText = fromPlainText;\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  MarkedString2.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function(Hover2) {\n  function is(value) {\n    let candidate = value;\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n  Hover2.is = is;\n})(Hover || (Hover = {}));\nvar ParameterInformation;\n(function(ParameterInformation2) {\n  function create(label, documentation) {\n    return documentation ? { label, documentation } : { label };\n  }\n  ParameterInformation2.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\nvar SignatureInformation;\n(function(SignatureInformation2) {\n  function create(label, documentation, ...parameters) {\n    let result = { label };\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n    return result;\n  }\n  SignatureInformation2.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\nvar DocumentHighlightKind;\n(function(DocumentHighlightKind2) {\n  DocumentHighlightKind2.Text = 1;\n  DocumentHighlightKind2.Read = 2;\n  DocumentHighlightKind2.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nvar DocumentHighlight;\n(function(DocumentHighlight2) {\n  function create(range, kind) {\n    let result = { range };\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  DocumentHighlight2.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\nvar SymbolKind;\n(function(SymbolKind2) {\n  SymbolKind2.File = 1;\n  SymbolKind2.Module = 2;\n  SymbolKind2.Namespace = 3;\n  SymbolKind2.Package = 4;\n  SymbolKind2.Class = 5;\n  SymbolKind2.Method = 6;\n  SymbolKind2.Property = 7;\n  SymbolKind2.Field = 8;\n  SymbolKind2.Constructor = 9;\n  SymbolKind2.Enum = 10;\n  SymbolKind2.Interface = 11;\n  SymbolKind2.Function = 12;\n  SymbolKind2.Variable = 13;\n  SymbolKind2.Constant = 14;\n  SymbolKind2.String = 15;\n  SymbolKind2.Number = 16;\n  SymbolKind2.Boolean = 17;\n  SymbolKind2.Array = 18;\n  SymbolKind2.Object = 19;\n  SymbolKind2.Key = 20;\n  SymbolKind2.Null = 21;\n  SymbolKind2.EnumMember = 22;\n  SymbolKind2.Struct = 23;\n  SymbolKind2.Event = 24;\n  SymbolKind2.Operator = 25;\n  SymbolKind2.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolTag;\n(function(SymbolTag2) {\n  SymbolTag2.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function(SymbolInformation2) {\n  function create(name, kind, range, uri, containerName) {\n    let result = {\n      name,\n      kind,\n      location: { uri, range }\n    };\n    if (containerName) {\n      result.containerName = containerName;\n    }\n    return result;\n  }\n  SymbolInformation2.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar WorkspaceSymbol;\n(function(WorkspaceSymbol2) {\n  function create(name, kind, uri, range) {\n    return range !== void 0 ? { name, kind, location: { uri, range } } : { name, kind, location: { uri } };\n  }\n  WorkspaceSymbol2.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nvar DocumentSymbol;\n(function(DocumentSymbol2) {\n  function create(name, detail, kind, range, selectionRange, children) {\n    let result = {\n      name,\n      detail,\n      kind,\n      range,\n      selectionRange\n    };\n    if (children !== void 0) {\n      result.children = children;\n    }\n    return result;\n  }\n  DocumentSymbol2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\n  }\n  DocumentSymbol2.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\nvar CodeActionKind;\n(function(CodeActionKind2) {\n  CodeActionKind2.Empty = \"\";\n  CodeActionKind2.QuickFix = \"quickfix\";\n  CodeActionKind2.Refactor = \"refactor\";\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\n  CodeActionKind2.Source = \"source\";\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\n})(CodeActionKind || (CodeActionKind = {}));\nvar CodeActionTriggerKind;\n(function(CodeActionTriggerKind2) {\n  CodeActionTriggerKind2.Invoked = 1;\n  CodeActionTriggerKind2.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\nvar CodeActionContext;\n(function(CodeActionContext2) {\n  function create(diagnostics, only, triggerKind) {\n    let result = { diagnostics };\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n    if (triggerKind !== void 0 && triggerKind !== null) {\n      result.triggerKind = triggerKind;\n    }\n    return result;\n  }\n  CodeActionContext2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n  }\n  CodeActionContext2.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function(CodeAction2) {\n  function create(title, kindOrCommandOrEdit, kind) {\n    let result = { title };\n    let checkKind = true;\n    if (typeof kindOrCommandOrEdit === \"string\") {\n      checkKind = false;\n      result.kind = kindOrCommandOrEdit;\n    } else if (Command.is(kindOrCommandOrEdit)) {\n      result.command = kindOrCommandOrEdit;\n    } else {\n      result.edit = kindOrCommandOrEdit;\n    }\n    if (checkKind && kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  CodeAction2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n  CodeAction2.is = is;\n})(CodeAction || (CodeAction = {}));\nvar CodeLens;\n(function(CodeLens2) {\n  function create(range, data) {\n    let result = { range };\n    if (Is.defined(data)) {\n      result.data = data;\n    }\n    return result;\n  }\n  CodeLens2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n  CodeLens2.is = is;\n})(CodeLens || (CodeLens = {}));\nvar FormattingOptions;\n(function(FormattingOptions2) {\n  function create(tabSize, insertSpaces) {\n    return { tabSize, insertSpaces };\n  }\n  FormattingOptions2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n  FormattingOptions2.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\nvar DocumentLink;\n(function(DocumentLink2) {\n  function create(range, target, data) {\n    return { range, target, data };\n  }\n  DocumentLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n  DocumentLink2.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar SelectionRange;\n(function(SelectionRange2) {\n  function create(range, parent) {\n    return { range, parent };\n  }\n  SelectionRange2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\n  }\n  SelectionRange2.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar SemanticTokenTypes;\n(function(SemanticTokenTypes2) {\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\n  SemanticTokenTypes2[\"type\"] = \"type\";\n  SemanticTokenTypes2[\"class\"] = \"class\";\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\n  SemanticTokenTypes2[\"property\"] = \"property\";\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\n  SemanticTokenTypes2[\"event\"] = \"event\";\n  SemanticTokenTypes2[\"function\"] = \"function\";\n  SemanticTokenTypes2[\"method\"] = \"method\";\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\n  SemanticTokenTypes2[\"string\"] = \"string\";\n  SemanticTokenTypes2[\"number\"] = \"number\";\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\nvar SemanticTokenModifiers;\n(function(SemanticTokenModifiers2) {\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\n  SemanticTokenModifiers2[\"static\"] = \"static\";\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\n  SemanticTokenModifiers2[\"async\"] = \"async\";\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\nvar SemanticTokens;\n(function(SemanticTokens2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\n  }\n  SemanticTokens2.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\nvar InlineValueText;\n(function(InlineValueText2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  InlineValueText2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n  }\n  InlineValueText2.is = is;\n})(InlineValueText || (InlineValueText = {}));\nvar InlineValueVariableLookup;\n(function(InlineValueVariableLookup2) {\n  function create(range, variableName, caseSensitiveLookup) {\n    return { range, variableName, caseSensitiveLookup };\n  }\n  InlineValueVariableLookup2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\n  }\n  InlineValueVariableLookup2.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\nvar InlineValueEvaluatableExpression;\n(function(InlineValueEvaluatableExpression2) {\n  function create(range, expression) {\n    return { range, expression };\n  }\n  InlineValueEvaluatableExpression2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\n  }\n  InlineValueEvaluatableExpression2.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\nvar InlineValueContext;\n(function(InlineValueContext2) {\n  function create(frameId, stoppedLocation) {\n    return { frameId, stoppedLocation };\n  }\n  InlineValueContext2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\n  }\n  InlineValueContext2.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\nvar InlayHintKind;\n(function(InlayHintKind2) {\n  InlayHintKind2.Type = 1;\n  InlayHintKind2.Parameter = 2;\n  function is(value) {\n    return value === 1 || value === 2;\n  }\n  InlayHintKind2.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nvar InlayHintLabelPart;\n(function(InlayHintLabelPart2) {\n  function create(value) {\n    return { value };\n  }\n  InlayHintLabelPart2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\n  }\n  InlayHintLabelPart2.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nvar InlayHint;\n(function(InlayHint2) {\n  function create(position, label, kind) {\n    const result = { position, label };\n    if (kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  InlayHint2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\n  }\n  InlayHint2.is = is;\n})(InlayHint || (InlayHint = {}));\nvar StringValue;\n(function(StringValue2) {\n  function createSnippet(value) {\n    return { kind: \"snippet\", value };\n  }\n  StringValue2.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nvar InlineCompletionItem;\n(function(InlineCompletionItem2) {\n  function create(insertText, filterText, range, command) {\n    return { insertText, filterText, range, command };\n  }\n  InlineCompletionItem2.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nvar InlineCompletionList;\n(function(InlineCompletionList2) {\n  function create(items) {\n    return { items };\n  }\n  InlineCompletionList2.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\nvar InlineCompletionTriggerKind;\n(function(InlineCompletionTriggerKind2) {\n  InlineCompletionTriggerKind2.Invoked = 0;\n  InlineCompletionTriggerKind2.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nvar SelectedCompletionInfo;\n(function(SelectedCompletionInfo2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  SelectedCompletionInfo2.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nvar InlineCompletionContext;\n(function(InlineCompletionContext2) {\n  function create(triggerKind, selectedCompletionInfo) {\n    return { triggerKind, selectedCompletionInfo };\n  }\n  InlineCompletionContext2.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nvar WorkspaceFolder;\n(function(WorkspaceFolder2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n  }\n  WorkspaceFolder2.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nvar TextDocument;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n  TextDocument3.is = is;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort2(edits, (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n      let e = sortedEdits[i];\n      let startOffset = document.offsetAt(e.range.start);\n      let endOffset = document.offsetAt(e.range.end);\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error(\"Overlapping edit\");\n      }\n      lastModifiedOffset = startOffset;\n    }\n    return text;\n  }\n  TextDocument3.applyEdits = applyEdits;\n  function mergeSort2(data, compare) {\n    if (data.length <= 1) {\n      return data;\n    }\n    const p = data.length / 2 | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort2(left, compare);\n    mergeSort2(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n      let ret = compare(left[leftIdx], right[rightIdx]);\n      if (ret <= 0) {\n        data[i++] = left[leftIdx++];\n      } else {\n        data[i++] = right[rightIdx++];\n      }\n    }\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\nvar FullTextDocument = class {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      let start = this.offsetAt(range.start);\n      let end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = void 0;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      let lineOffsets = [];\n      let text = this._content;\n      let isLineStart = true;\n      for (let i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n        let ch = text.charAt(i);\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n          i++;\n        }\n      }\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n      this._lineOffsets = lineOffsets;\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n};\nvar Is;\n(function(Is2) {\n  const toString = Object.prototype.toString;\n  function defined(value) {\n    return typeof value !== \"undefined\";\n  }\n  Is2.defined = defined;\n  function undefined2(value) {\n    return typeof value === \"undefined\";\n  }\n  Is2.undefined = undefined2;\n  function boolean(value) {\n    return value === true || value === false;\n  }\n  Is2.boolean = boolean;\n  function string(value) {\n    return toString.call(value) === \"[object String]\";\n  }\n  Is2.string = string;\n  function number(value) {\n    return toString.call(value) === \"[object Number]\";\n  }\n  Is2.number = number;\n  function numberRange(value, min, max) {\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\n  }\n  Is2.numberRange = numberRange;\n  function integer2(value) {\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\n  }\n  Is2.integer = integer2;\n  function uinteger2(value) {\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\n  }\n  Is2.uinteger = uinteger2;\n  function func(value) {\n    return toString.call(value) === \"[object Function]\";\n  }\n  Is2.func = func;\n  function objectLiteral(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  Is2.objectLiteral = objectLiteral;\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n  Is2.typedArray = typedArray;\n})(Is || (Is = {}));\n\n// node_modules/vscode-languageserver-textdocument/lib/esm/main.js\nvar FullTextDocument2 = class _FullTextDocument {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      const start = this.offsetAt(range.start);\n      const end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(changes, version) {\n    for (let change of changes) {\n      if (_FullTextDocument.isIncremental(change)) {\n        const range = getWellformedRange(change.range);\n        const startOffset = this.offsetAt(range.start);\n        const endOffset = this.offsetAt(range.end);\n        this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n        const startLine = Math.max(range.start.line, 0);\n        const endLine = Math.max(range.end.line, 0);\n        let lineOffsets = this._lineOffsets;\n        const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n        if (endLine - startLine === addedLineOffsets.length) {\n          for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n            lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n          }\n        } else {\n          if (addedLineOffsets.length < 1e4) {\n            lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n          } else {\n            this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n          }\n        }\n        const diff = change.text.length - (endOffset - startOffset);\n        if (diff !== 0) {\n          for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n            lineOffsets[i] = lineOffsets[i] + diff;\n          }\n        }\n      } else if (_FullTextDocument.isFull(change)) {\n        this._content = change.text;\n        this._lineOffsets = void 0;\n      } else {\n        throw new Error(\"Unknown change event received\");\n      }\n    }\n    this._version = version;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      this._lineOffsets = computeLineOffsets(this._content, true);\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return { line: 0, character: offset };\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return { line, character: offset - lineOffsets[line] };\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n  static isIncremental(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range !== void 0 && (candidate.rangeLength === void 0 || typeof candidate.rangeLength === \"number\");\n  }\n  static isFull(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range === void 0 && candidate.rangeLength === void 0;\n  }\n};\nvar TextDocument2;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument2(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function update(document, changes, version) {\n    if (document instanceof FullTextDocument2) {\n      document.update(changes, version);\n      return document;\n    } else {\n      throw new Error(\"TextDocument.update: document must be created by TextDocument.create\");\n    }\n  }\n  TextDocument3.update = update;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = 0;\n    const spans = [];\n    for (const e of sortedEdits) {\n      let startOffset = document.offsetAt(e.range.start);\n      if (startOffset < lastModifiedOffset) {\n        throw new Error(\"Overlapping edit\");\n      } else if (startOffset > lastModifiedOffset) {\n        spans.push(text.substring(lastModifiedOffset, startOffset));\n      }\n      if (e.newText.length) {\n        spans.push(e.newText);\n      }\n      lastModifiedOffset = document.offsetAt(e.range.end);\n    }\n    spans.push(text.substr(lastModifiedOffset));\n    return spans.join(\"\");\n  }\n  TextDocument3.applyEdits = applyEdits;\n})(TextDocument2 || (TextDocument2 = {}));\nfunction mergeSort(data, compare) {\n  if (data.length <= 1) {\n    return data;\n  }\n  const p = data.length / 2 | 0;\n  const left = data.slice(0, p);\n  const right = data.slice(p);\n  mergeSort(left, compare);\n  mergeSort(right, compare);\n  let leftIdx = 0;\n  let rightIdx = 0;\n  let i = 0;\n  while (leftIdx < left.length && rightIdx < right.length) {\n    let ret = compare(left[leftIdx], right[rightIdx]);\n    if (ret <= 0) {\n      data[i++] = left[leftIdx++];\n    } else {\n      data[i++] = right[rightIdx++];\n    }\n  }\n  while (leftIdx < left.length) {\n    data[i++] = left[leftIdx++];\n  }\n  while (rightIdx < right.length) {\n    data[i++] = right[rightIdx++];\n  }\n  return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n  const result = isAtLineStart ? [textOffset] : [];\n  for (let i = 0; i < text.length; i++) {\n    let ch = text.charCodeAt(i);\n    if (ch === 13 || ch === 10) {\n      if (ch === 13 && i + 1 < text.length && text.charCodeAt(i + 1) === 10) {\n        i++;\n      }\n      result.push(textOffset + i + 1);\n    }\n  }\n  return result;\n}\nfunction getWellformedRange(range) {\n  const start = range.start;\n  const end = range.end;\n  if (start.line > end.line || start.line === end.line && start.character > end.character) {\n    return { start: end, end: start };\n  }\n  return range;\n}\nfunction getWellformedEdit(textEdit) {\n  const range = getWellformedRange(textEdit.range);\n  if (range !== textEdit.range) {\n    return { newText: textEdit.newText, range };\n  }\n  return textEdit;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js\nvar ErrorCode;\n(function(ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"Undefined\"] = 0] = \"Undefined\";\n  ErrorCode2[ErrorCode2[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n  ErrorCode2[ErrorCode2[\"Deprecated\"] = 2] = \"Deprecated\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n  ErrorCode2[ErrorCode2[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n  ErrorCode2[ErrorCode2[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n  ErrorCode2[ErrorCode2[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n  ErrorCode2[ErrorCode2[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n  ErrorCode2[ErrorCode2[\"CommaExpected\"] = 514] = \"CommaExpected\";\n  ErrorCode2[ErrorCode2[\"ColonExpected\"] = 515] = \"ColonExpected\";\n  ErrorCode2[ErrorCode2[\"ValueExpected\"] = 516] = \"ValueExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n  ErrorCode2[ErrorCode2[\"TrailingComma\"] = 519] = \"TrailingComma\";\n  ErrorCode2[ErrorCode2[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n  ErrorCode2[ErrorCode2[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n  ErrorCode2[ErrorCode2[\"PropertyKeysMustBeDoublequoted\"] = 528] = \"PropertyKeysMustBeDoublequoted\";\n  ErrorCode2[ErrorCode2[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n  ErrorCode2[ErrorCode2[\"SchemaUnsupportedFeature\"] = 769] = \"SchemaUnsupportedFeature\";\n})(ErrorCode || (ErrorCode = {}));\nvar SchemaDraft;\n(function(SchemaDraft2) {\n  SchemaDraft2[SchemaDraft2[\"v3\"] = 3] = \"v3\";\n  SchemaDraft2[SchemaDraft2[\"v4\"] = 4] = \"v4\";\n  SchemaDraft2[SchemaDraft2[\"v6\"] = 6] = \"v6\";\n  SchemaDraft2[SchemaDraft2[\"v7\"] = 7] = \"v7\";\n  SchemaDraft2[SchemaDraft2[\"v2019_09\"] = 19] = \"v2019_09\";\n  SchemaDraft2[SchemaDraft2[\"v2020_12\"] = 20] = \"v2020_12\";\n})(SchemaDraft || (SchemaDraft = {}));\nvar ClientCapabilities;\n(function(ClientCapabilities2) {\n  ClientCapabilities2.LATEST = {\n    textDocument: {\n      completion: {\n        completionItem: {\n          documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n          commitCharactersSupport: true,\n          labelDetailsSupport: true\n        }\n      }\n    }\n  };\n})(ClientCapabilities || (ClientCapabilities = {}));\n\n// node_modules/@vscode/l10n/dist/browser.js\nvar bundle;\nfunction t(...args) {\n  const firstArg = args[0];\n  let key;\n  let message;\n  let formatArgs;\n  if (typeof firstArg === \"string\") {\n    key = firstArg;\n    message = firstArg;\n    args.splice(0, 1);\n    formatArgs = !args || typeof args[0] !== \"object\" ? args : args[0];\n  } else if (firstArg instanceof Array) {\n    const replacements = args.slice(1);\n    if (firstArg.length !== replacements.length + 1) {\n      throw new Error(\"expected a string as the first argument to l10n.t\");\n    }\n    let str = firstArg[0];\n    for (let i = 1; i < firstArg.length; i++) {\n      str += `{${i - 1}}` + firstArg[i];\n    }\n    return t(str, ...replacements);\n  } else {\n    message = firstArg.message;\n    key = message;\n    if (firstArg.comment && firstArg.comment.length > 0) {\n      key += `/${Array.isArray(firstArg.comment) ? firstArg.comment.join(\"\") : firstArg.comment}`;\n    }\n    formatArgs = firstArg.args ?? {};\n  }\n  const messageFromBundle = bundle?.[key];\n  if (!messageFromBundle) {\n    return format3(message, formatArgs);\n  }\n  if (typeof messageFromBundle === \"string\") {\n    return format3(messageFromBundle, formatArgs);\n  }\n  if (messageFromBundle.comment) {\n    return format3(messageFromBundle.message, formatArgs);\n  }\n  return format3(message, formatArgs);\n}\nvar _format2Regexp = /{([^}]+)}/g;\nfunction format3(template, values) {\n  if (Object.keys(values).length === 0) {\n    return template;\n  }\n  return template.replace(_format2Regexp, (match, group) => values[group] ?? match);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js\nvar formats = {\n  \"color-hex\": { errorMessage: t(\"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.\"), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n  \"date-time\": { errorMessage: t(\"String is not a RFC3339 date-time.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"date\": { errorMessage: t(\"String is not a RFC3339 date.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n  \"time\": { errorMessage: t(\"String is not a RFC3339 time.\"), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"email\": { errorMessage: t(\"String is not an e-mail address.\"), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}))$/ },\n  \"hostname\": { errorMessage: t(\"String is not a hostname.\"), pattern: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i },\n  \"ipv4\": { errorMessage: t(\"String is not an IPv4 address.\"), pattern: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/ },\n  \"ipv6\": { errorMessage: t(\"String is not an IPv6 address.\"), pattern: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i }\n};\nvar ASTNodeImpl = class {\n  constructor(parent, offset, length = 0) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n  get children() {\n    return [];\n  }\n  toString() {\n    return \"type: \" + this.type + \" (\" + this.offset + \"/\" + this.length + \")\" + (this.parent ? \" parent: {\" + this.parent.toString() + \"}\" : \"\");\n  }\n};\nvar NullASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"null\";\n    this.value = null;\n  }\n};\nvar BooleanASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, boolValue, offset) {\n    super(parent, offset);\n    this.type = \"boolean\";\n    this.value = boolValue;\n  }\n};\nvar ArrayASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"array\";\n    this.items = [];\n  }\n  get children() {\n    return this.items;\n  }\n};\nvar NumberASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"number\";\n    this.isInteger = true;\n    this.value = Number.NaN;\n  }\n};\nvar StringASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, length) {\n    super(parent, offset, length);\n    this.type = \"string\";\n    this.value = \"\";\n  }\n};\nvar PropertyASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, keyNode) {\n    super(parent, offset);\n    this.type = \"property\";\n    this.colonOffset = -1;\n    this.keyNode = keyNode;\n  }\n  get children() {\n    return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n  }\n};\nvar ObjectASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"object\";\n    this.properties = [];\n  }\n  get children() {\n    return this.properties;\n  }\n};\nfunction asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : { \"not\": {} };\n  }\n  return schema;\n}\nvar EnumMatch;\n(function(EnumMatch2) {\n  EnumMatch2[EnumMatch2[\"Key\"] = 0] = \"Key\";\n  EnumMatch2[EnumMatch2[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar schemaDraftFromId = {\n  \"http://json-schema.org/draft-03/schema#\": SchemaDraft.v3,\n  \"http://json-schema.org/draft-04/schema#\": SchemaDraft.v4,\n  \"http://json-schema.org/draft-06/schema#\": SchemaDraft.v6,\n  \"http://json-schema.org/draft-07/schema#\": SchemaDraft.v7,\n  \"https://json-schema.org/draft/2019-09/schema\": SchemaDraft.v2019_09,\n  \"https://json-schema.org/draft/2020-12/schema\": SchemaDraft.v2020_12\n};\nvar EvaluationContext = class {\n  constructor(schemaDraft) {\n    this.schemaDraft = schemaDraft;\n  }\n};\nvar SchemaCollector = class _SchemaCollector {\n  constructor(focusOffset = -1, exclude) {\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n  add(schema) {\n    this.schemas.push(schema);\n  }\n  merge(other) {\n    Array.prototype.push.apply(this.schemas, other.schemas);\n  }\n  include(node) {\n    return (this.focusOffset === -1 || contains2(node, this.focusOffset)) && node !== this.exclude;\n  }\n  newSub() {\n    return new _SchemaCollector(-1, this.exclude);\n  }\n};\nvar NoOpSchemaCollector = class {\n  constructor() {\n  }\n  get schemas() {\n    return [];\n  }\n  add(_schema) {\n  }\n  merge(_other) {\n  }\n  include(_node) {\n    return true;\n  }\n  newSub() {\n    return this;\n  }\n};\nNoOpSchemaCollector.instance = new NoOpSchemaCollector();\nvar ValidationResult = class {\n  constructor() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.processedProperties = /* @__PURE__ */ new Set();\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = void 0;\n  }\n  hasProblems() {\n    return !!this.problems.length;\n  }\n  merge(validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n    this.propertiesMatches += validationResult.propertiesMatches;\n    this.propertiesValueMatches += validationResult.propertiesValueMatches;\n    this.mergeProcessedProperties(validationResult);\n  }\n  mergeEnumValues(validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n      for (const error of this.problems) {\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = t(\"Value is not accepted. Valid values: {0}.\", this.enumValues.map((v) => JSON.stringify(v)).join(\", \"));\n        }\n      }\n    }\n  }\n  mergePropertyMatch(propertyValidationResult) {\n    this.problems = this.problems.concat(propertyValidationResult.problems);\n    this.propertiesMatches++;\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  }\n  mergeProcessedProperties(validationResult) {\n    validationResult.processedProperties.forEach((p) => this.processedProperties.add(p));\n  }\n  compare(other) {\n    const hasProblems = this.hasProblems();\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n    return this.propertiesMatches - other.propertiesMatches;\n  }\n};\nfunction newJSONDocument(root, diagnostics = []) {\n  return new JSONDocument(root, diagnostics, []);\n}\nfunction getNodeValue3(node) {\n  return getNodeValue2(node);\n}\nfunction getNodePath3(node) {\n  return getNodePath2(node);\n}\nfunction contains2(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nvar JSONDocument = class {\n  constructor(root, syntaxErrors = [], comments = []) {\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n  getNodeFromOffset(offset, includeRightBound = false) {\n    if (this.root) {\n      return findNodeAtOffset2(this.root, offset, includeRightBound);\n    }\n    return void 0;\n  }\n  visit(visitor) {\n    if (this.root) {\n      const doVisit = (node) => {\n        let ctn = visitor(node);\n        const children = node.children;\n        if (Array.isArray(children)) {\n          for (let i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit(children[i]);\n          }\n        }\n        return ctn;\n      };\n      doVisit(this.root);\n    }\n  }\n  validate(textDocument, schema, severity = DiagnosticSeverity.Warning, schemaDraft) {\n    if (this.root && schema) {\n      const validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance, new EvaluationContext(schemaDraft ?? getSchemaDraft(schema)));\n      return validationResult.problems.map((p) => {\n        const range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity ?? severity, p.code);\n      });\n    }\n    return void 0;\n  }\n  getMatchingSchemas(schema, focusOffset = -1, exclude) {\n    if (this.root && schema) {\n      const matchingSchemas = new SchemaCollector(focusOffset, exclude);\n      const schemaDraft = getSchemaDraft(schema);\n      const context = new EvaluationContext(schemaDraft);\n      validate(this.root, schema, new ValidationResult(), matchingSchemas, context);\n      return matchingSchemas.schemas;\n    }\n    return [];\n  }\n};\nfunction getSchemaDraft(schema, fallBack = SchemaDraft.v2020_12) {\n  let schemaId = schema.$schema;\n  if (schemaId) {\n    return schemaDraftFromId[schemaId] ?? fallBack;\n  }\n  return fallBack;\n}\nfunction validate(n, schema, validationResult, matchingSchemas, context) {\n  if (!n || !matchingSchemas.include(n)) {\n    return;\n  }\n  if (n.type === \"property\") {\n    return validate(n.valueNode, schema, validationResult, matchingSchemas, context);\n  }\n  const node = n;\n  _validateNode();\n  switch (node.type) {\n    case \"object\":\n      _validateObjectNode(node);\n      break;\n    case \"array\":\n      _validateArrayNode(node);\n      break;\n    case \"string\":\n      _validateStringNode(node);\n      break;\n    case \"number\":\n      _validateNumberNode(node);\n      break;\n  }\n  matchingSchemas.add({ node, schema });\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === \"integer\" && node.type === \"number\" && node.isInteger;\n    }\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Incorrect type. Expected one of {0}.\", schema.type.join(\", \"))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t('Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n    if (Array.isArray(schema.allOf)) {\n      for (const subSchemaRef of schema.allOf) {\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, asSchema(subSchemaRef), subValidationResult, subMatchingSchemas, context);\n        validationResult.merge(subValidationResult);\n        matchingSchemas.merge(subMatchingSchemas);\n      }\n    }\n    const notSchema = asSchema(schema.not);\n    if (notSchema) {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas, context);\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Matches a schema that is not allowed.\")\n        });\n      }\n      for (const ms of subMatchingSchemas.schemas) {\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n    const testAlternatives = (alternatives, maxOneMatch) => {\n      const matches = [];\n      let bestMatch = void 0;\n      for (const subSchemaRef of alternatives) {\n        const subSchema = asSchema(subSchemaRef);\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n        if (!bestMatch) {\n          bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            bestMatch.validationResult.mergeProcessedProperties(subValidationResult);\n          } else {\n            const compareResult = subValidationResult.compare(bestMatch.validationResult);\n            if (compareResult > 0) {\n              bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n            } else if (compareResult === 0) {\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: 1 },\n          message: t(\"Matches multiple schemas when only one must validate.\")\n        });\n      }\n      if (bestMatch) {\n        validationResult.merge(bestMatch.validationResult);\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n      return matches.length;\n    };\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n    const testBranch = (schema2) => {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema2), subValidationResult, subMatchingSchemas, context);\n      validationResult.merge(subValidationResult);\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n    const testCondition = (ifSchema2, thenSchema, elseSchema) => {\n      const subSchema = asSchema(ifSchema2);\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n      matchingSchemas.merge(subMatchingSchemas);\n      validationResult.mergeProcessedProperties(subValidationResult);\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n    const ifSchema = asSchema(schema.if);\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n    if (Array.isArray(schema.enum)) {\n      const val = getNodeValue3(node);\n      let enumValueMatch = false;\n      for (const e of schema.enum) {\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value is not accepted. Valid values: {0}.\", schema.enum.map((v) => JSON.stringify(v)).join(\", \"))\n        });\n      }\n    }\n    if (isDefined(schema.const)) {\n      const val = getNodeValue3(node);\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value must be {0}.\", JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n      validationResult.enumValues = [schema.const];\n    }\n    let deprecationMessage = schema.deprecationMessage;\n    if (deprecationMessage || schema.deprecated) {\n      deprecationMessage = deprecationMessage || t(\"Value is deprecated\");\n      let targetNode = node.parent?.type === \"property\" ? node.parent : node;\n      validationResult.problems.push({\n        location: { offset: targetNode.offset, length: targetNode.length },\n        severity: DiagnosticSeverity.Warning,\n        message: deprecationMessage,\n        code: ErrorCode.Deprecated\n      });\n    }\n  }\n  function _validateNumberNode(node2) {\n    const val = node2.value;\n    function normalizeFloats(float) {\n      const parts = /^(-?\\d+)(?:\\.(\\d+))?(?:e([-+]\\d+))?$/.exec(float.toString());\n      return parts && {\n        value: Number(parts[1] + (parts[2] || \"\")),\n        multiplier: (parts[2]?.length || 0) - (parseInt(parts[3]) || 0)\n      };\n    }\n    ;\n    if (isNumber(schema.multipleOf)) {\n      let remainder = -1;\n      if (Number.isInteger(schema.multipleOf)) {\n        remainder = val % schema.multipleOf;\n      } else {\n        let normMultipleOf = normalizeFloats(schema.multipleOf);\n        let normValue = normalizeFloats(val);\n        if (normMultipleOf && normValue) {\n          const multiplier = 10 ** Math.abs(normValue.multiplier - normMultipleOf.multiplier);\n          if (normValue.multiplier < normMultipleOf.multiplier) {\n            normValue.value *= multiplier;\n          } else {\n            normMultipleOf.value *= multiplier;\n          }\n          remainder = normValue.value % normMultipleOf.value;\n        }\n      }\n      if (remainder !== 0) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Value is not divisible by {0}.\", schema.multipleOf)\n        });\n      }\n    }\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    const exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the exclusive minimum of {0}.\", exclusiveMinimum)\n      });\n    }\n    const exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the exclusive maximum of {0}.\", exclusiveMaximum)\n      });\n    }\n    const minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the minimum of {0}.\", minimum)\n      });\n    }\n    const maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the maximum of {0}.\", maximum)\n      });\n    }\n  }\n  function _validateStringNode(node2) {\n    if (isNumber(schema.minLength) && stringLength(node2.value) < schema.minLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is shorter than the minimum length of {0}.\", schema.minLength)\n      });\n    }\n    if (isNumber(schema.maxLength) && stringLength(node2.value) > schema.maxLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is longer than the maximum length of {0}.\", schema.maxLength)\n      });\n    }\n    if (isString(schema.pattern)) {\n      const regex = extendedRegExp(schema.pattern);\n      if (!regex?.test(node2.value)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.patternErrorMessage || schema.errorMessage || t('String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n    if (schema.format) {\n      switch (schema.format) {\n        case \"uri\":\n        case \"uri-reference\":\n          {\n            let errorMessage;\n            if (!node2.value) {\n              errorMessage = t(\"URI expected.\");\n            } else {\n              const match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node2.value);\n              if (!match) {\n                errorMessage = t(\"URI is expected.\");\n              } else if (!match[2] && schema.format === \"uri\") {\n                errorMessage = t(\"URI with a scheme is expected.\");\n              }\n            }\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: { offset: node2.offset, length: node2.length },\n                message: schema.patternErrorMessage || schema.errorMessage || t(\"String is not a URI: {0}\", errorMessage)\n              });\n            }\n          }\n          break;\n        case \"color-hex\":\n        case \"date-time\":\n        case \"date\":\n        case \"time\":\n        case \"email\":\n        case \"hostname\":\n        case \"ipv4\":\n        case \"ipv6\":\n          const format5 = formats[schema.format];\n          if (!node2.value || !format5.pattern.exec(node2.value)) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: schema.patternErrorMessage || schema.errorMessage || format5.errorMessage\n            });\n          }\n        default:\n      }\n    }\n  }\n  function _validateArrayNode(node2) {\n    let prefixItemsSchemas;\n    let additionalItemSchema;\n    if (context.schemaDraft >= SchemaDraft.v2020_12) {\n      prefixItemsSchemas = schema.prefixItems;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : void 0;\n    } else {\n      prefixItemsSchemas = Array.isArray(schema.items) ? schema.items : void 0;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : schema.additionalItems;\n    }\n    let index = 0;\n    if (prefixItemsSchemas !== void 0) {\n      const max = Math.min(prefixItemsSchemas.length, node2.items.length);\n      for (; index < max; index++) {\n        const subSchemaRef = prefixItemsSchemas[index];\n        const subSchema = asSchema(subSchemaRef);\n        const itemValidationResult = new ValidationResult();\n        const item = node2.items[index];\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n        validationResult.processedProperties.add(String(index));\n      }\n    }\n    if (additionalItemSchema !== void 0 && index < node2.items.length) {\n      if (typeof additionalItemSchema === \"boolean\") {\n        if (additionalItemSchema === false) {\n          validationResult.problems.push({\n            location: { offset: node2.offset, length: node2.length },\n            message: t(\"Array has too many items according to schema. Expected {0} or fewer.\", index)\n          });\n        }\n        for (; index < node2.items.length; index++) {\n          validationResult.processedProperties.add(String(index));\n          validationResult.propertiesValueMatches++;\n        }\n      } else {\n        for (; index < node2.items.length; index++) {\n          const itemValidationResult = new ValidationResult();\n          validate(node2.items[index], additionalItemSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n          validationResult.processedProperties.add(String(index));\n        }\n      }\n    }\n    const containsSchema = asSchema(schema.contains);\n    if (containsSchema) {\n      let containsCount = 0;\n      for (let index2 = 0; index2 < node2.items.length; index2++) {\n        const item = node2.items[index2];\n        const itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance, context);\n        if (!itemValidationResult.hasProblems()) {\n          containsCount++;\n          if (context.schemaDraft >= SchemaDraft.v2020_12) {\n            validationResult.processedProperties.add(String(index2));\n          }\n        }\n      }\n      if (containsCount === 0 && !isNumber(schema.minContains)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array does not contain required item.\")\n        });\n      }\n      if (isNumber(schema.minContains) && containsCount < schema.minContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too few items that match the contains contraint. Expected {0} or more.\", schema.minContains)\n        });\n      }\n      if (isNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too many items that match the contains contraint. Expected {0} or less.\", schema.maxContains)\n        });\n      }\n    }\n    const unevaluatedItems = schema.unevaluatedItems;\n    if (unevaluatedItems !== void 0) {\n      for (let i = 0; i < node2.items.length; i++) {\n        if (!validationResult.processedProperties.has(String(i))) {\n          if (unevaluatedItems === false) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Item does not match any validation rule from the array.\")\n            });\n          } else {\n            const itemValidationResult = new ValidationResult();\n            validate(node2.items[i], schema.unevaluatedItems, itemValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        }\n        validationResult.processedProperties.add(String(i));\n        validationResult.propertiesValueMatches++;\n      }\n    }\n    if (isNumber(schema.minItems) && node2.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too few items. Expected {0} or more.\", schema.minItems)\n      });\n    }\n    if (isNumber(schema.maxItems) && node2.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too many items. Expected {0} or fewer.\", schema.maxItems)\n      });\n    }\n    if (schema.uniqueItems === true) {\n      let hasDuplicates = function() {\n        for (let i = 0; i < values.length - 1; i++) {\n          const value = values[i];\n          for (let j = i + 1; j < values.length; j++) {\n            if (equals(value, values[j])) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      const values = getNodeValue3(node2);\n      if (hasDuplicates()) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Array has duplicate items.\")\n        });\n      }\n    }\n  }\n  function _validateObjectNode(node2) {\n    const seenKeys = /* @__PURE__ */ Object.create(null);\n    const unprocessedProperties = /* @__PURE__ */ new Set();\n    for (const propertyNode of node2.properties) {\n      const key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.add(key);\n    }\n    if (Array.isArray(schema.required)) {\n      for (const propertyName of schema.required) {\n        if (!seenKeys[propertyName]) {\n          const keyNode = node2.parent && node2.parent.type === \"property\" && node2.parent.keyNode;\n          const location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node2.offset, length: 1 };\n          validationResult.problems.push({\n            location,\n            message: t('Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n    const propertyProcessed = (prop) => {\n      unprocessedProperties.delete(prop);\n      validationResult.processedProperties.add(prop);\n    };\n    if (schema.properties) {\n      for (const propertyName of Object.keys(schema.properties)) {\n        propertyProcessed(propertyName);\n        const propertySchema = schema.properties[propertyName];\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    if (schema.patternProperties) {\n      for (const propertyPattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(propertyPattern);\n        if (regex) {\n          const processed = [];\n          for (const propertyName of unprocessedProperties) {\n            if (regex.test(propertyName)) {\n              processed.push(propertyName);\n              const child = seenKeys[propertyName];\n              if (child) {\n                const propertySchema = schema.patternProperties[propertyPattern];\n                if (isBoolean(propertySchema)) {\n                  if (!propertySchema) {\n                    const propertyNode = child.parent;\n                    validationResult.problems.push({\n                      location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                      message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n                    });\n                  } else {\n                    validationResult.propertiesMatches++;\n                    validationResult.propertiesValueMatches++;\n                  }\n                } else {\n                  const propertyValidationResult = new ValidationResult();\n                  validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n                  validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n              }\n            }\n          }\n          processed.forEach(propertyProcessed);\n        }\n      }\n    }\n    const additionalProperties = schema.additionalProperties;\n    if (additionalProperties !== void 0) {\n      for (const propertyName of unprocessedProperties) {\n        propertyProcessed(propertyName);\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (additionalProperties === false) {\n            const propertyNode = child.parent;\n            validationResult.problems.push({\n              location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n              message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n            });\n          } else if (additionalProperties !== true) {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, additionalProperties, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    if (unevaluatedProperties !== void 0) {\n      const processed = [];\n      for (const propertyName of unprocessedProperties) {\n        if (!validationResult.processedProperties.has(propertyName)) {\n          processed.push(propertyName);\n          const child = seenKeys[propertyName];\n          if (child) {\n            if (unevaluatedProperties === false) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else if (unevaluatedProperties !== true) {\n              const propertyValidationResult = new ValidationResult();\n              validate(child, unevaluatedProperties, propertyValidationResult, matchingSchemas, context);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n      processed.forEach(propertyProcessed);\n    }\n    if (isNumber(schema.maxProperties)) {\n      if (node2.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has more properties than limit of {0}.\", schema.maxProperties)\n        });\n      }\n    }\n    if (isNumber(schema.minProperties)) {\n      if (node2.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has fewer properties than the required number of {0}\", schema.minProperties)\n        });\n      }\n    }\n    if (schema.dependentRequired) {\n      for (const key in schema.dependentRequired) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentRequired[key];\n        if (prop && Array.isArray(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependentSchemas) {\n      for (const key in schema.dependentSchemas) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentSchemas[key];\n        if (prop && isObject(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependencies) {\n      for (const key in schema.dependencies) {\n        const prop = seenKeys[key];\n        if (prop) {\n          _validatePropertyDependencies(key, schema.dependencies[key]);\n        }\n      }\n    }\n    const propertyNames = asSchema(schema.propertyNames);\n    if (propertyNames) {\n      for (const f2 of node2.properties) {\n        const key = f2.keyNode;\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance, context);\n        }\n      }\n    }\n    function _validatePropertyDependencies(key, propertyDep) {\n      if (Array.isArray(propertyDep)) {\n        for (const requiredProp of propertyDep) {\n          if (!seenKeys[requiredProp]) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Object is missing property {0} required by property {1}.\", requiredProp, key)\n            });\n          } else {\n            validationResult.propertiesValueMatches++;\n          }\n        }\n      } else {\n        const propertySchema = asSchema(propertyDep);\n        if (propertySchema) {\n          const propertyValidationResult = new ValidationResult();\n          validate(node2, propertySchema, propertyValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    }\n  }\n}\nfunction parse3(textDocument, config) {\n  const problems = [];\n  let lastProblemOffset = -1;\n  const text = textDocument.getText();\n  const scanner = createScanner2(text, false);\n  const commentRanges = config && config.collectComments ? [] : void 0;\n  function _scanNext() {\n    while (true) {\n      const token2 = scanner.scan();\n      _checkScanError();\n      switch (token2) {\n        case 12:\n        case 13:\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token2;\n      }\n    }\n  }\n  function _accept(token2) {\n    if (scanner.getToken() === token2) {\n      _scanNext();\n      return true;\n    }\n    return false;\n  }\n  function _errorAtRange(message, code, startOffset, endOffset, severity = DiagnosticSeverity.Error) {\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      const range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n  function _error(message, code, node = void 0, skipUntilAfter = [], skipUntil = []) {\n    let start = scanner.getTokenOffset();\n    let end = scanner.getTokenOffset() + scanner.getTokenLength();\n    if (start === end && start > 0) {\n      start--;\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n      end = start + 1;\n    }\n    _errorAtRange(message, code, start, end);\n    if (node) {\n      _finalize(node, false);\n    }\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token2 = scanner.getToken();\n      while (token2 !== 17) {\n        if (skipUntilAfter.indexOf(token2) !== -1) {\n          _scanNext();\n          break;\n        } else if (skipUntil.indexOf(token2) !== -1) {\n          break;\n        }\n        token2 = _scanNext();\n      }\n    }\n    return node;\n  }\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4:\n        _error(t(\"Invalid unicode sequence in string.\"), ErrorCode.InvalidUnicode);\n        return true;\n      case 5:\n        _error(t(\"Invalid escape character in string.\"), ErrorCode.InvalidEscapeCharacter);\n        return true;\n      case 3:\n        _error(t(\"Unexpected end of number.\"), ErrorCode.UnexpectedEndOfNumber);\n        return true;\n      case 1:\n        _error(t(\"Unexpected end of comment.\"), ErrorCode.UnexpectedEndOfComment);\n        return true;\n      case 2:\n        _error(t(\"Unexpected end of string.\"), ErrorCode.UnexpectedEndOfString);\n        return true;\n      case 6:\n        _error(t(\"Invalid characters in string. Control characters must be escaped.\"), ErrorCode.InvalidCharacter);\n        return true;\n    }\n    return false;\n  }\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n    if (scanNext) {\n      _scanNext();\n    }\n    return node;\n  }\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3) {\n      return void 0;\n    }\n    const node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n    _scanNext();\n    const count = 0;\n    let needsComma = false;\n    while (scanner.getToken() !== 4 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Value expected\"), ErrorCode.ValueExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 4) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const item = _parseValue(node);\n      if (!item) {\n        _error(t(\"Value expected\"), ErrorCode.ValueExpected, void 0, [], [\n          4,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.items.push(item);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 4) {\n      return _error(t(\"Expected comma or closing bracket\"), ErrorCode.CommaOrCloseBacketExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  const keyPlaceholder = new StringASTNodeImpl(void 0, 0, 0);\n  function _parseProperty(parent, keysSeen) {\n    const node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n    let key = _parseString(node);\n    if (!key) {\n      if (scanner.getToken() === 16) {\n        _error(t(\"Property keys must be doublequoted\"), ErrorCode.PropertyKeysMustBeDoublequoted);\n        const keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n        keyNode.value = scanner.getTokenValue();\n        key = keyNode;\n        _scanNext();\n      } else {\n        return void 0;\n      }\n    }\n    node.keyNode = key;\n    if (key.value !== \"//\") {\n      const seen = keysSeen[key.value];\n      if (seen) {\n        _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n        if (isObject(seen)) {\n          _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n        }\n        keysSeen[key.value] = true;\n      } else {\n        keysSeen[key.value] = node;\n      }\n    }\n    if (scanner.getToken() === 6) {\n      node.colonOffset = scanner.getTokenOffset();\n      _scanNext();\n    } else {\n      _error(t(\"Colon expected\"), ErrorCode.ColonExpected);\n      if (scanner.getToken() === 10 && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n    const value = _parseValue(node);\n    if (!value) {\n      return _error(t(\"Value expected\"), ErrorCode.ValueExpected, node, [], [\n        2,\n        5\n        /* Json.SyntaxKind.CommaToken */\n      ]);\n    }\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1) {\n      return void 0;\n    }\n    const node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    const keysSeen = /* @__PURE__ */ Object.create(null);\n    _scanNext();\n    let needsComma = false;\n    while (scanner.getToken() !== 2 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Property expected\"), ErrorCode.PropertyExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 2) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const property = _parseProperty(node, keysSeen);\n      if (!property) {\n        _error(t(\"Property expected\"), ErrorCode.PropertyExpected, void 0, [], [\n          2,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.properties.push(property);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 2) {\n      return _error(t(\"Expected comma or closing brace\"), ErrorCode.CommaOrCloseBraceExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10) {\n      return void 0;\n    }\n    const node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11) {\n      return void 0;\n    }\n    const node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n    if (scanner.getTokenError() === 0) {\n      const tokenValue = scanner.getTokenValue();\n      try {\n        const numberValue = JSON.parse(tokenValue);\n        if (!isNumber(numberValue)) {\n          return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n        }\n        node.value = numberValue;\n      } catch (e) {\n        return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n      }\n      node.isInteger = tokenValue.indexOf(\".\") === -1;\n    }\n    return _finalize(node, true);\n  }\n  function _parseLiteral(parent) {\n    let node;\n    switch (scanner.getToken()) {\n      case 7:\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n      case 8:\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n      case 9:\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n      default:\n        return void 0;\n    }\n  }\n  function _parseValue(parent) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n  let _root = void 0;\n  const token = _scanNext();\n  if (token !== 17) {\n    _root = _parseValue(_root);\n    if (!_root) {\n      _error(t(\"Expected a JSON object, array or literal.\"), ErrorCode.Undefined);\n    } else if (scanner.getToken() !== 17) {\n      _error(t(\"End of file expected.\"), ErrorCode.Undefined);\n    }\n  }\n  return new JSONDocument(_root, problems, commentRanges);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/json.js\nfunction stringifyObject(obj, indent, stringifyLiteral) {\n  if (obj !== null && typeof obj === \"object\") {\n    const newIndent = indent + \"\t\";\n    if (Array.isArray(obj)) {\n      if (obj.length === 0) {\n        return \"[]\";\n      }\n      let result = \"[\\n\";\n      for (let i = 0; i < obj.length; i++) {\n        result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n        if (i < obj.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"]\";\n      return result;\n    } else {\n      const keys = Object.keys(obj);\n      if (keys.length === 0) {\n        return \"{}\";\n      }\n      let result = \"{\\n\";\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        result += newIndent + JSON.stringify(key) + \": \" + stringifyObject(obj[key], newIndent, stringifyLiteral);\n        if (i < keys.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"}\";\n      return result;\n    }\n  }\n  return stringifyLiteral(obj);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js\nvar valueCommitCharacters = [\",\", \"}\", \"]\"];\nvar propertyCommitCharacters = [\":\"];\nvar JSONCompletion = class {\n  constructor(schemaService, contributions = [], promiseConstructor = Promise, clientCapabilities = {}) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promiseConstructor = promiseConstructor;\n    this.clientCapabilities = clientCapabilities;\n  }\n  doResolve(item) {\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const resolveCompletion = this.contributions[i].resolveCompletion;\n      if (resolveCompletion) {\n        const resolver = resolveCompletion(item);\n        if (resolver) {\n          return resolver;\n        }\n      }\n    }\n    return this.promiseConstructor.resolve(item);\n  }\n  doComplete(document, position, doc) {\n    const result = {\n      items: [],\n      isIncomplete: false\n    };\n    const text = document.getText();\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    if (this.isInComment(document, node ? node.offset : 0, offset)) {\n      return Promise.resolve(result);\n    }\n    if (node && offset === node.offset + node.length && offset > 0) {\n      const ch = text[offset - 1];\n      if (node.type === \"object\" && ch === \"}\" || node.type === \"array\" && ch === \"]\") {\n        node = node.parent;\n      }\n    }\n    const currentWord = this.getCurrentWord(document, offset);\n    let overwriteRange;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n    } else {\n      let overwriteStart = offset - currentWord.length;\n      if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n        overwriteStart--;\n      }\n      overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n    }\n    const supportsCommitCharacters = false;\n    const proposed = /* @__PURE__ */ new Map();\n    const collector = {\n      add: (suggestion) => {\n        let label = suggestion.label;\n        const existing = proposed.get(label);\n        if (!existing) {\n          label = label.replace(/[\\n]/g, \"\\u21B5\");\n          if (label.length > 60) {\n            const shortendedLabel = label.substr(0, 57).trim() + \"...\";\n            if (!proposed.has(shortendedLabel)) {\n              label = shortendedLabel;\n            }\n          }\n          suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n          if (supportsCommitCharacters) {\n            suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n          }\n          suggestion.label = label;\n          proposed.set(label, suggestion);\n          result.items.push(suggestion);\n        } else {\n          if (!existing.documentation) {\n            existing.documentation = suggestion.documentation;\n          }\n          if (!existing.detail) {\n            existing.detail = suggestion.detail;\n          }\n          if (!existing.labelDetails) {\n            existing.labelDetails = suggestion.labelDetails;\n          }\n        }\n      },\n      setAsIncomplete: () => {\n        result.isIncomplete = true;\n      },\n      error: (message) => {\n        console.error(message);\n      },\n      getNumberOfProposals: () => {\n        return result.items.length;\n      }\n    };\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const collectionPromises = [];\n      let addValue = true;\n      let currentKey = \"\";\n      let currentProperty = void 0;\n      if (node) {\n        if (node.type === \"string\") {\n          const parent = node.parent;\n          if (parent && parent.type === \"property\" && parent.keyNode === node) {\n            addValue = !parent.valueNode;\n            currentProperty = parent;\n            currentKey = text.substr(node.offset + 1, node.length - 2);\n            if (parent) {\n              node = parent.parent;\n            }\n          }\n        }\n      }\n      if (node && node.type === \"object\") {\n        if (node.offset === offset) {\n          return result;\n        }\n        const properties = node.properties;\n        properties.forEach((p) => {\n          if (!currentProperty || currentProperty !== p) {\n            proposed.set(p.keyNode.value, CompletionItem.create(\"__\"));\n          }\n        });\n        let separatorAfter = \"\";\n        if (addValue) {\n          separatorAfter = this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n        }\n        if (schema) {\n          this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector);\n        } else {\n          this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n        }\n        const location = getNodePath3(node);\n        this.contributions.forEach((contribution) => {\n          const collectPromise = contribution.collectPropertyCompletions(document.uri, location, currentWord, addValue, separatorAfter === \"\", collector);\n          if (collectPromise) {\n            collectionPromises.push(collectPromise);\n          }\n        });\n        if (!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"') {\n          collector.add({\n            kind: CompletionItemKind.Property,\n            label: this.getLabelForValue(currentWord),\n            insertText: this.getInsertTextForProperty(currentWord, void 0, false, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: \"\"\n          });\n          collector.setAsIncomplete();\n        }\n      }\n      const types = {};\n      if (schema) {\n        this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n      } else {\n        this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n      }\n      if (this.contributions.length > 0) {\n        this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n      }\n      return this.promiseConstructor.all(collectionPromises).then(() => {\n        if (collector.getNumberOfProposals() === 0) {\n          let offsetForSeparator = offset;\n          if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n            offsetForSeparator = node.offset + node.length;\n          }\n          const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n          this.addFillerValueCompletions(types, separatorAfter, collector);\n        }\n        return result;\n      });\n    });\n  }\n  getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector) {\n    const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n    matchingSchemas.forEach((s) => {\n      if (s.node === node && !s.inverted) {\n        const schemaProperties = s.schema.properties;\n        if (schemaProperties) {\n          Object.keys(schemaProperties).forEach((key) => {\n            const propertySchema = schemaProperties[key];\n            if (typeof propertySchema === \"object\" && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n              const proposal = {\n                kind: CompletionItemKind.Property,\n                label: key,\n                insertText: this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                filterText: this.getFilterTextForValue(key),\n                documentation: this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || \"\"\n              };\n              if (propertySchema.suggestSortText !== void 0) {\n                proposal.sortText = propertySchema.suggestSortText;\n              }\n              if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n                proposal.command = {\n                  title: \"Suggest\",\n                  command: \"editor.action.triggerSuggest\"\n                };\n              }\n              collector.add(proposal);\n            }\n          });\n        }\n        const schemaPropertyNames = s.schema.propertyNames;\n        if (typeof schemaPropertyNames === \"object\" && !schemaPropertyNames.deprecationMessage && !schemaPropertyNames.doNotSuggest) {\n          const propertyNameCompletionItem = (name, enumDescription = void 0) => {\n            const proposal = {\n              kind: CompletionItemKind.Property,\n              label: name,\n              insertText: this.getInsertTextForProperty(name, void 0, addValue, separatorAfter),\n              insertTextFormat: InsertTextFormat.Snippet,\n              filterText: this.getFilterTextForValue(name),\n              documentation: enumDescription || this.fromMarkup(schemaPropertyNames.markdownDescription) || schemaPropertyNames.description || \"\"\n            };\n            if (schemaPropertyNames.suggestSortText !== void 0) {\n              proposal.sortText = schemaPropertyNames.suggestSortText;\n            }\n            if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n              proposal.command = {\n                title: \"Suggest\",\n                command: \"editor.action.triggerSuggest\"\n              };\n            }\n            collector.add(proposal);\n          };\n          if (schemaPropertyNames.enum) {\n            for (let i = 0; i < schemaPropertyNames.enum.length; i++) {\n              let enumDescription = void 0;\n              if (schemaPropertyNames.markdownEnumDescriptions && i < schemaPropertyNames.markdownEnumDescriptions.length) {\n                enumDescription = this.fromMarkup(schemaPropertyNames.markdownEnumDescriptions[i]);\n              } else if (schemaPropertyNames.enumDescriptions && i < schemaPropertyNames.enumDescriptions.length) {\n                enumDescription = schemaPropertyNames.enumDescriptions[i];\n              }\n              propertyNameCompletionItem(schemaPropertyNames.enum[i], enumDescription);\n            }\n          }\n          if (schemaPropertyNames.const) {\n            propertyNameCompletionItem(schemaPropertyNames.const);\n          }\n        }\n      }\n    });\n  }\n  getSchemaLessPropertyCompletions(doc, node, currentKey, collector) {\n    const collectCompletionsForSimilarObject = (obj) => {\n      obj.properties.forEach((p) => {\n        const key = p.keyNode.value;\n        collector.add({\n          kind: CompletionItemKind.Property,\n          label: key,\n          insertText: this.getInsertTextForValue(key, \"\"),\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText: this.getFilterTextForValue(key),\n          documentation: \"\"\n        });\n      });\n    };\n    if (node.parent) {\n      if (node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n !== node.parent && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"object\") {\n            collectCompletionsForSimilarObject(n.valueNode);\n          }\n          return true;\n        });\n      } else if (node.parent.type === \"array\") {\n        node.parent.items.forEach((n) => {\n          if (n.type === \"object\" && n !== node) {\n            collectCompletionsForSimilarObject(n);\n          }\n        });\n      }\n    } else if (node.type === \"object\") {\n      collector.add({\n        kind: CompletionItemKind.Property,\n        label: \"$schema\",\n        insertText: this.getInsertTextForProperty(\"$schema\", void 0, true, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\",\n        filterText: this.getFilterTextForValue(\"$schema\")\n      });\n    }\n  }\n  getSchemaLessValueCompletions(doc, node, offset, document, collector) {\n    let offsetForSeparator = offset;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      node = node.parent;\n    }\n    if (!node) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"Empty object\",\n        insertText: this.getInsertTextForValue({}, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"Empty array\",\n        insertText: this.getInsertTextForValue([], \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      return;\n    }\n    const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n    const collectSuggestionsForValues = (value) => {\n      if (value.parent && !contains2(value.parent, offset, true)) {\n        collector.add({\n          kind: this.getSuggestionKind(value.type),\n          label: this.getLabelTextForMatchingNode(value, document),\n          insertText: this.getInsertTextForMatchingNode(value, document, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation: \"\"\n        });\n      }\n      if (value.type === \"boolean\") {\n        this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n      }\n    };\n    if (node.type === \"property\") {\n      if (offset > (node.colonOffset || 0)) {\n        const valueNode = node.valueNode;\n        if (valueNode && (offset > valueNode.offset + valueNode.length || valueNode.type === \"object\" || valueNode.type === \"array\")) {\n          return;\n        }\n        const parentKey = node.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode) {\n            collectSuggestionsForValues(n.valueNode);\n          }\n          return true;\n        });\n        if (parentKey === \"$schema\" && node.parent && !node.parent.parent) {\n          this.addDollarSchemaCompletions(separatorAfter, collector);\n        }\n      }\n    }\n    if (node.type === \"array\") {\n      if (node.parent && node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"array\") {\n            n.valueNode.items.forEach(collectSuggestionsForValues);\n          }\n          return true;\n        });\n      } else {\n        node.items.forEach(collectSuggestionsForValues);\n      }\n    }\n  }\n  getValueCompletions(schema, doc, node, offset, document, collector, types) {\n    let offsetForSeparator = offset;\n    let parentKey = void 0;\n    let valueNode = void 0;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      valueNode = node;\n      node = node.parent;\n    }\n    if (!node) {\n      this.addSchemaValueCompletions(schema.schema, \"\", collector, types);\n      return;\n    }\n    if (node.type === \"property\" && offset > (node.colonOffset || 0)) {\n      const valueNode2 = node.valueNode;\n      if (valueNode2 && offset > valueNode2.offset + valueNode2.length) {\n        return;\n      }\n      parentKey = node.keyNode.value;\n      node = node.parent;\n    }\n    if (node && (parentKey !== void 0 || node.type === \"array\")) {\n      const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n      const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n      for (const s of matchingSchemas) {\n        if (s.node === node && !s.inverted && s.schema) {\n          if (node.type === \"array\" && s.schema.items) {\n            let c = collector;\n            if (s.schema.uniqueItems) {\n              const existingValues = /* @__PURE__ */ new Set();\n              node.children.forEach((n) => {\n                if (n.type !== \"array\" && n.type !== \"object\") {\n                  existingValues.add(this.getLabelForValue(getNodeValue3(n)));\n                }\n              });\n              c = {\n                ...collector,\n                add(suggestion) {\n                  if (!existingValues.has(suggestion.label)) {\n                    collector.add(suggestion);\n                  }\n                }\n              };\n            }\n            if (Array.isArray(s.schema.items)) {\n              const index = this.findItemAtOffset(node, document, offset);\n              if (index < s.schema.items.length) {\n                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, c, types);\n              }\n            } else {\n              this.addSchemaValueCompletions(s.schema.items, separatorAfter, c, types);\n            }\n          }\n          if (parentKey !== void 0) {\n            let propertyMatched = false;\n            if (s.schema.properties) {\n              const propertySchema = s.schema.properties[parentKey];\n              if (propertySchema) {\n                propertyMatched = true;\n                this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n              }\n            }\n            if (s.schema.patternProperties && !propertyMatched) {\n              for (const pattern of Object.keys(s.schema.patternProperties)) {\n                const regex = extendedRegExp(pattern);\n                if (regex?.test(parentKey)) {\n                  propertyMatched = true;\n                  const propertySchema = s.schema.patternProperties[pattern];\n                  this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                }\n              }\n            }\n            if (s.schema.additionalProperties && !propertyMatched) {\n              const propertySchema = s.schema.additionalProperties;\n              this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n            }\n          }\n        }\n      }\n      if (parentKey === \"$schema\" && !node.parent) {\n        this.addDollarSchemaCompletions(separatorAfter, collector);\n      }\n      if (types[\"boolean\"]) {\n        this.addBooleanValueCompletion(true, separatorAfter, collector);\n        this.addBooleanValueCompletion(false, separatorAfter, collector);\n      }\n      if (types[\"null\"]) {\n        this.addNullValueCompletion(separatorAfter, collector);\n      }\n    }\n  }\n  getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises) {\n    if (!node) {\n      this.contributions.forEach((contribution) => {\n        const collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n        if (collectPromise) {\n          collectionPromises.push(collectPromise);\n        }\n      });\n    } else {\n      if (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\") {\n        node = node.parent;\n      }\n      if (node && node.type === \"property\" && offset > (node.colonOffset || 0)) {\n        const parentKey = node.keyNode.value;\n        const valueNode = node.valueNode;\n        if ((!valueNode || offset <= valueNode.offset + valueNode.length) && node.parent) {\n          const location = getNodePath3(node.parent);\n          this.contributions.forEach((contribution) => {\n            const collectPromise = contribution.collectValueCompletions(document.uri, location, parentKey, collector);\n            if (collectPromise) {\n              collectionPromises.push(collectPromise);\n            }\n          });\n        }\n      }\n    }\n  }\n  addSchemaValueCompletions(schema, separatorAfter, collector, types) {\n    if (typeof schema === \"object\") {\n      this.addEnumValueCompletions(schema, separatorAfter, collector);\n      this.addDefaultValueCompletions(schema, separatorAfter, collector);\n      this.collectTypes(schema, types);\n      if (Array.isArray(schema.allOf)) {\n        schema.allOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.anyOf)) {\n        schema.anyOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.oneOf)) {\n        schema.oneOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n    }\n  }\n  addDefaultValueCompletions(schema, separatorAfter, collector, arrayDepth = 0) {\n    let hasProposals = false;\n    if (isDefined(schema.default)) {\n      let type = schema.type;\n      let value = schema.default;\n      for (let i = arrayDepth; i > 0; i--) {\n        value = [value];\n        type = \"array\";\n      }\n      const completionItem = {\n        kind: this.getSuggestionKind(type),\n        label: this.getLabelForValue(value),\n        insertText: this.getInsertTextForValue(value, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet\n      };\n      if (this.doesSupportsLabelDetails()) {\n        completionItem.labelDetails = { description: t(\"Default value\") };\n      } else {\n        completionItem.detail = t(\"Default value\");\n      }\n      collector.add(completionItem);\n      hasProposals = true;\n    }\n    if (Array.isArray(schema.examples)) {\n      schema.examples.forEach((example) => {\n        let type = schema.type;\n        let value = example;\n        for (let i = arrayDepth; i > 0; i--) {\n          value = [value];\n          type = \"array\";\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label: this.getLabelForValue(value),\n          insertText: this.getInsertTextForValue(value, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet\n        });\n        hasProposals = true;\n      });\n    }\n    if (Array.isArray(schema.defaultSnippets)) {\n      schema.defaultSnippets.forEach((s) => {\n        let type = schema.type;\n        let value = s.body;\n        let label = s.label;\n        let insertText;\n        let filterText;\n        if (isDefined(value)) {\n          let type2 = schema.type;\n          for (let i = arrayDepth; i > 0; i--) {\n            value = [value];\n            type2 = \"array\";\n          }\n          insertText = this.getInsertTextForSnippetValue(value, separatorAfter);\n          filterText = this.getFilterTextForSnippetValue(value);\n          label = label || this.getLabelForSnippetValue(value);\n        } else if (typeof s.bodyText === \"string\") {\n          let prefix = \"\", suffix = \"\", indent = \"\";\n          for (let i = arrayDepth; i > 0; i--) {\n            prefix = prefix + indent + \"[\\n\";\n            suffix = suffix + \"\\n\" + indent + \"]\";\n            indent += \"\t\";\n            type = \"array\";\n          }\n          insertText = prefix + indent + s.bodyText.split(\"\\n\").join(\"\\n\" + indent) + suffix + separatorAfter;\n          label = label || insertText, filterText = insertText.replace(/[\\n]/g, \"\");\n        } else {\n          return;\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label,\n          documentation: this.fromMarkup(s.markdownDescription) || s.description,\n          insertText,\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText\n        });\n        hasProposals = true;\n      });\n    }\n    if (!hasProposals && typeof schema.items === \"object\" && !Array.isArray(schema.items) && arrayDepth < 5) {\n      this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n    }\n  }\n  addEnumValueCompletions(schema, separatorAfter, collector) {\n    if (isDefined(schema.const)) {\n      collector.add({\n        kind: this.getSuggestionKind(schema.type),\n        label: this.getLabelForValue(schema.const),\n        insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n      });\n    }\n    if (Array.isArray(schema.enum)) {\n      for (let i = 0, length = schema.enum.length; i < length; i++) {\n        const enm = schema.enum[i];\n        let documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n        if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n          documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n        } else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n          documentation = schema.enumDescriptions[i];\n        }\n        collector.add({\n          kind: this.getSuggestionKind(schema.type),\n          label: this.getLabelForValue(enm),\n          insertText: this.getInsertTextForValue(enm, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation\n        });\n      }\n    }\n  }\n  collectTypes(schema, types) {\n    if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n      return;\n    }\n    const type = schema.type;\n    if (Array.isArray(type)) {\n      type.forEach((t2) => types[t2] = true);\n    } else if (type) {\n      types[type] = true;\n    }\n  }\n  addFillerValueCompletions(types, separatorAfter, collector) {\n    if (types[\"object\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"{}\",\n        insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New object\"),\n        documentation: \"\"\n      });\n    }\n    if (types[\"array\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"[]\",\n        insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New array\"),\n        documentation: \"\"\n      });\n    }\n  }\n  addBooleanValueCompletion(value, separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"boolean\"),\n      label: value ? \"true\" : \"false\",\n      insertText: this.getInsertTextForValue(value, separatorAfter),\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addNullValueCompletion(separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"null\"),\n      label: \"null\",\n      insertText: \"null\" + separatorAfter,\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addDollarSchemaCompletions(separatorAfter, collector) {\n    const schemaIds = this.schemaService.getRegisteredSchemaIds((schema) => schema === \"http\" || schema === \"https\");\n    schemaIds.forEach((schemaId) => {\n      if (schemaId.startsWith(\"http://json-schema.org/draft-\")) {\n        schemaId = schemaId + \"#\";\n      }\n      collector.add({\n        kind: CompletionItemKind.Module,\n        label: this.getLabelForValue(schemaId),\n        filterText: this.getFilterTextForValue(schemaId),\n        insertText: this.getInsertTextForValue(schemaId, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n    });\n  }\n  getLabelForValue(value) {\n    return JSON.stringify(value);\n  }\n  getValueFromLabel(value) {\n    return JSON.parse(value);\n  }\n  getFilterTextForValue(value) {\n    return JSON.stringify(value);\n  }\n  getFilterTextForSnippetValue(value) {\n    return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getLabelForSnippetValue(value) {\n    const label = JSON.stringify(value);\n    return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getInsertTextForPlainText(text) {\n    return text.replace(/[\\\\\\$\\}]/g, \"\\\\$&\");\n  }\n  getInsertTextForValue(value, separatorAfter) {\n    const text = JSON.stringify(value, null, \"\t\");\n    if (text === \"{}\") {\n      return \"{$1}\" + separatorAfter;\n    } else if (text === \"[]\") {\n      return \"[$1]\" + separatorAfter;\n    }\n    return this.getInsertTextForPlainText(text + separatorAfter);\n  }\n  getInsertTextForSnippetValue(value, separatorAfter) {\n    const replacer = (value2) => {\n      if (typeof value2 === \"string\") {\n        if (value2[0] === \"^\") {\n          return value2.substr(1);\n        }\n      }\n      return JSON.stringify(value2);\n    };\n    return stringifyObject(value, \"\", replacer) + separatorAfter;\n  }\n  getInsertTextForGuessedValue(value, separatorAfter) {\n    switch (typeof value) {\n      case \"object\":\n        if (value === null) {\n          return \"${1:null}\" + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n      case \"string\":\n        let snippetValue = JSON.stringify(value);\n        snippetValue = snippetValue.substr(1, snippetValue.length - 2);\n        snippetValue = this.getInsertTextForPlainText(snippetValue);\n        return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n      case \"number\":\n      case \"boolean\":\n        return \"${1:\" + JSON.stringify(value) + \"}\" + separatorAfter;\n    }\n    return this.getInsertTextForValue(value, separatorAfter);\n  }\n  getSuggestionKind(type) {\n    if (Array.isArray(type)) {\n      const array = type;\n      type = array.length > 0 ? array[0] : void 0;\n    }\n    if (!type) {\n      return CompletionItemKind.Value;\n    }\n    switch (type) {\n      case \"string\":\n        return CompletionItemKind.Value;\n      case \"object\":\n        return CompletionItemKind.Module;\n      case \"property\":\n        return CompletionItemKind.Property;\n      default:\n        return CompletionItemKind.Value;\n    }\n  }\n  getLabelTextForMatchingNode(node, document) {\n    switch (node.type) {\n      case \"array\":\n        return \"[]\";\n      case \"object\":\n        return \"{}\";\n      default:\n        const content = document.getText().substr(node.offset, node.length);\n        return content;\n    }\n  }\n  getInsertTextForMatchingNode(node, document, separatorAfter) {\n    switch (node.type) {\n      case \"array\":\n        return this.getInsertTextForValue([], separatorAfter);\n      case \"object\":\n        return this.getInsertTextForValue({}, separatorAfter);\n      default:\n        const content = document.getText().substr(node.offset, node.length) + separatorAfter;\n        return this.getInsertTextForPlainText(content);\n    }\n  }\n  getInsertTextForProperty(key, propertySchema, addValue, separatorAfter) {\n    const propertyText = this.getInsertTextForValue(key, \"\");\n    if (!addValue) {\n      return propertyText;\n    }\n    const resultText = propertyText + \": \";\n    let value;\n    let nValueProposals = 0;\n    if (propertySchema) {\n      if (Array.isArray(propertySchema.defaultSnippets)) {\n        if (propertySchema.defaultSnippets.length === 1) {\n          const body = propertySchema.defaultSnippets[0].body;\n          if (isDefined(body)) {\n            value = this.getInsertTextForSnippetValue(body, \"\");\n          }\n        }\n        nValueProposals += propertySchema.defaultSnippets.length;\n      }\n      if (propertySchema.enum) {\n        if (!value && propertySchema.enum.length === 1) {\n          value = this.getInsertTextForGuessedValue(propertySchema.enum[0], \"\");\n        }\n        nValueProposals += propertySchema.enum.length;\n      }\n      if (isDefined(propertySchema.const)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.const, \"\");\n        }\n        nValueProposals++;\n      }\n      if (isDefined(propertySchema.default)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.default, \"\");\n        }\n        nValueProposals++;\n      }\n      if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.examples[0], \"\");\n        }\n        nValueProposals += propertySchema.examples.length;\n      }\n      if (nValueProposals === 0) {\n        let type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n        if (!type) {\n          if (propertySchema.properties) {\n            type = \"object\";\n          } else if (propertySchema.items) {\n            type = \"array\";\n          }\n        }\n        switch (type) {\n          case \"boolean\":\n            value = \"$1\";\n            break;\n          case \"string\":\n            value = '\"$1\"';\n            break;\n          case \"object\":\n            value = \"{$1}\";\n            break;\n          case \"array\":\n            value = \"[$1]\";\n            break;\n          case \"number\":\n          case \"integer\":\n            value = \"${1:0}\";\n            break;\n          case \"null\":\n            value = \"${1:null}\";\n            break;\n          default:\n            return propertyText;\n        }\n      }\n    }\n    if (!value || nValueProposals > 1) {\n      value = \"$1\";\n    }\n    return resultText + value + separatorAfter;\n  }\n  getCurrentWord(document, offset) {\n    let i = offset - 1;\n    const text = document.getText();\n    while (i >= 0 && ' \t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n      i--;\n    }\n    return text.substring(i + 1, offset);\n  }\n  evaluateSeparatorAfter(document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    scanner.setPosition(offset);\n    const token = scanner.scan();\n    switch (token) {\n      case 5:\n      case 2:\n      case 4:\n      case 17:\n        return \"\";\n      default:\n        return \",\";\n    }\n  }\n  findItemAtOffset(node, document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    const children = node.items;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (offset > child.offset + child.length) {\n        scanner.setPosition(child.offset + child.length);\n        const token = scanner.scan();\n        if (token === 5 && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n          return i + 1;\n        }\n        return i;\n      } else if (offset >= child.offset) {\n        return i;\n      }\n    }\n    return 0;\n  }\n  isInComment(document, start, offset) {\n    const scanner = createScanner2(document.getText(), false);\n    scanner.setPosition(start);\n    let token = scanner.scan();\n    while (token !== 17 && scanner.getTokenOffset() + scanner.getTokenLength() < offset) {\n      token = scanner.scan();\n    }\n    return (token === 12 || token === 13) && scanner.getTokenOffset() <= offset;\n  }\n  fromMarkup(markupString) {\n    if (markupString && this.doesSupportMarkdown()) {\n      return {\n        kind: MarkupKind.Markdown,\n        value: markupString\n      };\n    }\n    return void 0;\n  }\n  doesSupportMarkdown() {\n    if (!isDefined(this.supportsMarkdown)) {\n      const documentationFormat = this.clientCapabilities.textDocument?.completion?.completionItem?.documentationFormat;\n      this.supportsMarkdown = Array.isArray(documentationFormat) && documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n    }\n    return this.supportsMarkdown;\n  }\n  doesSupportsCommitCharacters() {\n    if (!isDefined(this.supportsCommitCharacters)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.commitCharactersSupport;\n    }\n    return this.supportsCommitCharacters;\n  }\n  doesSupportsLabelDetails() {\n    if (!isDefined(this.labelDetailsSupport)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.labelDetailsSupport;\n    }\n    return this.labelDetailsSupport;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js\nvar JSONHover = class {\n  constructor(schemaService, contributions = [], promiseConstructor) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promise = promiseConstructor || Promise;\n  }\n  doHover(document, position, doc) {\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset);\n    if (!node || (node.type === \"object\" || node.type === \"array\") && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n      return this.promise.resolve(null);\n    }\n    const hoverRangeNode = node;\n    if (node.type === \"string\") {\n      const parent = node.parent;\n      if (parent && parent.type === \"property\" && parent.keyNode === node) {\n        node = parent.valueNode;\n        if (!node) {\n          return this.promise.resolve(null);\n        }\n      }\n    }\n    const hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n    const createHover = (contents) => {\n      const result = {\n        contents,\n        range: hoverRange\n      };\n      return result;\n    };\n    const location = getNodePath3(node);\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const contribution = this.contributions[i];\n      const promise = contribution.getInfoContribution(document.uri, location);\n      if (promise) {\n        return promise.then((htmlContent) => createHover(htmlContent));\n      }\n    }\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      if (schema && node) {\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        let title = void 0;\n        let markdownDescription = void 0;\n        let markdownEnumValueDescription = void 0, enumValue = void 0;\n        matchingSchemas.every((s) => {\n          if (s.node === node && !s.inverted && s.schema) {\n            title = title || s.schema.title;\n            markdownDescription = markdownDescription || s.schema.markdownDescription || toMarkdown(s.schema.description);\n            if (s.schema.enum) {\n              const idx = s.schema.enum.indexOf(getNodeValue3(node));\n              if (s.schema.markdownEnumDescriptions) {\n                markdownEnumValueDescription = s.schema.markdownEnumDescriptions[idx];\n              } else if (s.schema.enumDescriptions) {\n                markdownEnumValueDescription = toMarkdown(s.schema.enumDescriptions[idx]);\n              }\n              if (markdownEnumValueDescription) {\n                enumValue = s.schema.enum[idx];\n                if (typeof enumValue !== \"string\") {\n                  enumValue = JSON.stringify(enumValue);\n                }\n              }\n            }\n          }\n          return true;\n        });\n        let result = \"\";\n        if (title) {\n          result = toMarkdown(title);\n        }\n        if (markdownDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += markdownDescription;\n        }\n        if (markdownEnumValueDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += `\\`${toMarkdownCodeBlock(enumValue)}\\`: ${markdownEnumValueDescription}`;\n        }\n        return createHover([result]);\n      }\n      return null;\n    });\n  }\n};\nfunction toMarkdown(plain) {\n  if (plain) {\n    const res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, \"$1\\n\\n$3\");\n    return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  return void 0;\n}\nfunction toMarkdownCodeBlock(content) {\n  if (content.indexOf(\"`\") !== -1) {\n    return \"`` \" + content + \" ``\";\n  }\n  return content;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js\nvar JSONValidation = class {\n  constructor(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n  configure(raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate !== false;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  }\n  doValidation(textDocument, jsonDocument, documentSettings, schema) {\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n    const diagnostics = [];\n    const added = {};\n    const addProblem = (problem) => {\n      const signature = problem.range.start.line + \" \" + problem.range.start.character + \" \" + problem.message;\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n    const getDiagnostics = (schema2) => {\n      let trailingCommaSeverity = documentSettings?.trailingCommas ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      let commentSeverity = documentSettings?.comments ? toDiagnosticSeverity(documentSettings.comments) : this.commentSeverity;\n      let schemaValidation = documentSettings?.schemaValidation ? toDiagnosticSeverity(documentSettings.schemaValidation) : DiagnosticSeverity.Warning;\n      let schemaRequest = documentSettings?.schemaRequest ? toDiagnosticSeverity(documentSettings.schemaRequest) : DiagnosticSeverity.Warning;\n      if (schema2) {\n        const addSchemaProblem = (errorMessage, errorCode) => {\n          if (jsonDocument.root && schemaRequest) {\n            const astRoot = jsonDocument.root;\n            const property = astRoot.type === \"object\" ? astRoot.properties[0] : void 0;\n            if (property && property.keyNode.value === \"$schema\") {\n              const node = property.valueNode || property;\n              const range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            } else {\n              const range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            }\n          }\n        };\n        if (schema2.errors.length) {\n          addSchemaProblem(schema2.errors[0], ErrorCode.SchemaResolveError);\n        } else if (schemaValidation) {\n          for (const warning of schema2.warnings) {\n            addSchemaProblem(warning, ErrorCode.SchemaUnsupportedFeature);\n          }\n          const semanticErrors = jsonDocument.validate(textDocument, schema2.schema, schemaValidation, documentSettings?.schemaDraft);\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n        if (schemaAllowsComments(schema2.schema)) {\n          commentSeverity = void 0;\n        }\n        if (schemaAllowsTrailingCommas(schema2.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n      for (const p of jsonDocument.syntaxErrors) {\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== \"number\") {\n            continue;\n          }\n          p.severity = trailingCommaSeverity;\n        }\n        addProblem(p);\n      }\n      if (typeof commentSeverity === \"number\") {\n        const message = t(\"Comments are not permitted in JSON.\");\n        jsonDocument.comments.forEach((c) => {\n          addProblem(Diagnostic.create(c, message, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n      return diagnostics;\n    };\n    if (schema) {\n      const uri = schema.id || \"schemaservice://untitled/\" + idCounter++;\n      const handle = this.jsonSchemaService.registerExternalSchema({ uri, schema });\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then((schema2) => {\n      return getDiagnostics(schema2);\n    });\n  }\n  getLanguageStatus(textDocument, jsonDocument) {\n    return { schemas: this.jsonSchemaService.getSchemaURIsForResource(textDocument.uri, jsonDocument) };\n  }\n};\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsComments(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n    const deprSchemaRef = schemaRef;\n    if (isBoolean(deprSchemaRef[\"allowsTrailingCommas\"])) {\n      return deprSchemaRef[\"allowsTrailingCommas\"];\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsTrailingCommas(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case \"error\":\n      return DiagnosticSeverity.Error;\n    case \"warning\":\n      return DiagnosticSeverity.Warning;\n    case \"ignore\":\n      return void 0;\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/colors.js\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n  if (charCode < Digit0) {\n    return 0;\n  }\n  if (charCode <= Digit9) {\n    return charCode - Digit0;\n  }\n  if (charCode < a) {\n    charCode += a - A;\n  }\n  if (charCode >= a && charCode <= f) {\n    return charCode - a + 10;\n  }\n  return 0;\n}\nfunction colorFromHex(text) {\n  if (text[0] !== \"#\") {\n    return void 0;\n  }\n  switch (text.length) {\n    case 4:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: 1\n      };\n    case 5:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: hexDigit(text.charCodeAt(4)) * 17 / 255\n      };\n    case 7:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: 1\n      };\n    case 9:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: (hexDigit(text.charCodeAt(7)) * 16 + hexDigit(text.charCodeAt(8))) / 255\n      };\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js\nvar JSONDocumentSymbols = class {\n  constructor(schemaService) {\n    this.schemaService = schemaService;\n  }\n  findDocumentSymbols(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const location = Location.create(document.uri, getRange(document, item));\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, location });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const toVisit = [\n      { node: root, containerName: \"\" }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const result = [];\n    const collectOutlineEntries = (node, containerName) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2) => {\n          if (node2) {\n            toVisit.push({ node: node2, containerName });\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const location = Location.create(document.uri, getRange(document, property));\n              const childContainerName = containerName ? containerName + \".\" + property.keyNode.value : property.keyNode.value;\n              result.push({ name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), location, containerName });\n              toVisit.push({ node: valueNode, containerName: childContainerName });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.containerName);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  findDocumentSymbols2(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const range = getRange(document, item);\n                const selectionRange = getRange(document, property.keyNode);\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, range, selectionRange });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const result = [];\n    const toVisit = [\n      { node: root, result }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const collectOutlineEntries = (node, result2) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2, index) => {\n          if (node2) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, node2);\n              const selectionRange = range;\n              const name = String(index);\n              const symbol = { name, kind: this.getSymbolKind(node2.type), range, selectionRange, children: [] };\n              result2.push(symbol);\n              toVisit.push({ result: symbol.children, node: node2 });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, property);\n              const selectionRange = getRange(document, property.keyNode);\n              const children = [];\n              const symbol = { name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), range, selectionRange, children, detail: this.getDetail(valueNode) };\n              result2.push(symbol);\n              toVisit.push({ result: children, node: valueNode });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.result);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  getSymbolKind(nodeType) {\n    switch (nodeType) {\n      case \"object\":\n        return SymbolKind.Module;\n      case \"string\":\n        return SymbolKind.String;\n      case \"number\":\n        return SymbolKind.Number;\n      case \"array\":\n        return SymbolKind.Array;\n      case \"boolean\":\n        return SymbolKind.Boolean;\n      default:\n        return SymbolKind.Variable;\n    }\n  }\n  getKeyLabel(property) {\n    let name = property.keyNode.value;\n    if (name) {\n      name = name.replace(/[\\n]/g, \"\\u21B5\");\n    }\n    if (name && name.trim()) {\n      return name;\n    }\n    return `\"${name}\"`;\n  }\n  getDetail(node) {\n    if (!node) {\n      return void 0;\n    }\n    if (node.type === \"boolean\" || node.type === \"number\" || node.type === \"null\" || node.type === \"string\") {\n      return String(node.value);\n    } else {\n      if (node.type === \"array\") {\n        return node.children.length ? void 0 : \"[]\";\n      } else if (node.type === \"object\") {\n        return node.children.length ? void 0 : \"{}\";\n      }\n    }\n    return void 0;\n  }\n  findDocumentColors(document, doc, context) {\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const result = [];\n      if (schema) {\n        let limit = context && typeof context.resultLimit === \"number\" ? context.resultLimit : Number.MAX_VALUE;\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema);\n        const visitedNode = {};\n        for (const s of matchingSchemas) {\n          if (!s.inverted && s.schema && (s.schema.format === \"color\" || s.schema.format === \"color-hex\") && s.node && s.node.type === \"string\") {\n            const nodeId = String(s.node.offset);\n            if (!visitedNode[nodeId]) {\n              const color = colorFromHex(getNodeValue3(s.node));\n              if (color) {\n                const range = getRange(document, s.node);\n                result.push({ color, range });\n              }\n              visitedNode[nodeId] = true;\n              limit--;\n              if (limit <= 0) {\n                if (context && context.onResultLimitExceeded) {\n                  context.onResultLimitExceeded(document.uri);\n                }\n                return result;\n              }\n            }\n          }\n        }\n      }\n      return result;\n    });\n  }\n  getColorPresentations(document, doc, color, range) {\n    const result = [];\n    const red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n    function toTwoDigitHex(n) {\n      const r = n.toString(16);\n      return r.length !== 2 ? \"0\" + r : r;\n    }\n    let label;\n    if (color.alpha === 1) {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}`;\n    } else {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}${toTwoDigitHex(Math.round(color.alpha * 255))}`;\n    }\n    result.push({ label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n    return result;\n  }\n};\nfunction getRange(document, node) {\n  return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\nfunction getName(node) {\n  return getNodeValue3(node) || t(\"<empty>\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/configuration.js\nvar schemaContributions = {\n  schemaAssociations: [],\n  schemas: {\n    // bundle the schema-schema to include (localized) descriptions\n    \"http://json-schema.org/draft-04/schema#\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#\"\n          }\n        },\n        \"positiveInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"positiveIntegerDefault0\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            },\n            {\n              \"default\": 0\n            }\n          ]\n        },\n        \"simpleTypes\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#\"\n            },\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"maxItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"required\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/stringArray\"\n            }\n          ]\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#\"\n              },\n              {\n                \"$ref\": \"#/definitions/stringArray\"\n              }\n            ]\n          }\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/simpleTypes\"\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/simpleTypes\"\n              },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\",\n              \"enum\": [\n                \"date-time\",\n                \"uri\",\n                \"email\",\n                \"hostname\",\n                \"ipv4\",\n                \"ipv6\",\n                \"regex\"\n              ]\n            },\n            {\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"allOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"anyOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"oneOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"not\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#\"\n            }\n          ]\n        }\n      },\n      \"dependencies\": {\n        \"exclusiveMaximum\": [\n          \"maximum\"\n        ],\n        \"exclusiveMinimum\": [\n          \"minimum\"\n        ]\n      },\n      \"default\": {}\n    },\n    \"http://json-schema.org/draft-07/schema#\": {\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": { \"$ref\": \"#\" }\n        },\n        \"nonNegativeInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"nonNegativeIntegerDefault0\": {\n          \"allOf\": [\n            { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n            { \"default\": 0 }\n          ]\n        },\n        \"simpleTypes\": {\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" },\n          \"uniqueItems\": true,\n          \"default\": []\n        }\n      },\n      \"type\": [\"object\", \"boolean\"],\n      \"properties\": {\n        \"$id\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$comment\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": true,\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"examples\": {\n          \"type\": \"array\",\n          \"items\": true\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"exclusiveMinimum\": 0\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"number\"\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"number\"\n        },\n        \"maxLength\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minLength\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": { \"$ref\": \"#\" },\n        \"items\": {\n          \"anyOf\": [\n            { \"$ref\": \"#\" },\n            { \"$ref\": \"#/definitions/schemaArray\" }\n          ],\n          \"default\": true\n        },\n        \"maxItems\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minItems\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"contains\": { \"$ref\": \"#\" },\n        \"maxProperties\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minProperties\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"required\": { \"$ref\": \"#/definitions/stringArray\" },\n        \"additionalProperties\": { \"$ref\": \"#\" },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"propertyNames\": { \"format\": \"regex\" },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              { \"$ref\": \"#\" },\n              { \"$ref\": \"#/definitions/stringArray\" }\n            ]\n          }\n        },\n        \"propertyNames\": { \"$ref\": \"#\" },\n        \"const\": true,\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": true,\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            { \"$ref\": \"#/definitions/simpleTypes\" },\n            {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/definitions/simpleTypes\" },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": { \"type\": \"string\" },\n        \"contentMediaType\": { \"type\": \"string\" },\n        \"contentEncoding\": { \"type\": \"string\" },\n        \"if\": { \"$ref\": \"#\" },\n        \"then\": { \"$ref\": \"#\" },\n        \"else\": { \"$ref\": \"#\" },\n        \"allOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"anyOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"oneOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"not\": { \"$ref\": \"#\" }\n      },\n      \"default\": true\n    }\n  }\n};\nvar descriptions = {\n  id: t(\"A unique identifier for the schema.\"),\n  $schema: t(\"The schema to verify this document against.\"),\n  title: t(\"A descriptive title of the element.\"),\n  description: t(\"A long description of the element. Used in hover menus and suggestions.\"),\n  default: t(\"A default value. Used by suggestions.\"),\n  multipleOf: t(\"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n  maximum: t(\"The maximum numerical value, inclusive by default.\"),\n  exclusiveMaximum: t(\"Makes the maximum property exclusive.\"),\n  minimum: t(\"The minimum numerical value, inclusive by default.\"),\n  exclusiveMinimum: t(\"Makes the minimum property exclusive.\"),\n  maxLength: t(\"The maximum length of a string.\"),\n  minLength: t(\"The minimum length of a string.\"),\n  pattern: t(\"A regular expression to match the string against. It is not implicitly anchored.\"),\n  additionalItems: t(\"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n  items: t(\"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n  maxItems: t(\"The maximum number of items that can be inside an array. Inclusive.\"),\n  minItems: t(\"The minimum number of items that can be inside an array. Inclusive.\"),\n  uniqueItems: t(\"If all of the items in the array must be unique. Defaults to false.\"),\n  maxProperties: t(\"The maximum number of properties an object can have. Inclusive.\"),\n  minProperties: t(\"The minimum number of properties an object can have. Inclusive.\"),\n  required: t(\"An array of strings that lists the names of all properties required on this object.\"),\n  additionalProperties: t(\"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n  definitions: t(\"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n  properties: t(\"A map of property names to schemas for each property.\"),\n  patternProperties: t(\"A map of regular expressions on property names to schemas for matching properties.\"),\n  dependencies: t(\"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n  enum: t(\"The set of literal values that are valid.\"),\n  type: t(\"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n  format: t(\"Describes the format expected for the value.\"),\n  allOf: t(\"An array of schemas, all of which must match.\"),\n  anyOf: t(\"An array of schemas, where at least one must match.\"),\n  oneOf: t(\"An array of schemas, exactly one of which must match.\"),\n  not: t(\"A schema which must not match.\"),\n  $id: t(\"A unique identifier for the schema.\"),\n  $ref: t(\"Reference a definition hosted on any location.\"),\n  $comment: t(\"Comments from schema authors to readers or maintainers of the schema.\"),\n  readOnly: t(\"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n  examples: t(\"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n  contains: t('An array instance is valid against \"contains\" if at least one of its elements is valid against the given schema.'),\n  propertyNames: t(\"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n  const: t(\"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n  contentMediaType: t(\"Describes the media type of a string property.\"),\n  contentEncoding: t(\"Describes the content encoding of a string property.\"),\n  if: t('The validation outcome of the \"if\" subschema controls which of the \"then\" or \"else\" keywords are evaluated.'),\n  then: t('The \"if\" subschema is used for validation when the \"if\" subschema succeeds.'),\n  else: t('The \"else\" subschema is used for validation when the \"if\" subschema fails.')\n};\nfor (const schemaName in schemaContributions.schemas) {\n  const schema = schemaContributions.schemas[schemaName];\n  for (const property in schema.properties) {\n    let propertyObject = schema.properties[property];\n    if (typeof propertyObject === \"boolean\") {\n      propertyObject = schema.properties[property] = {};\n    }\n    const description = descriptions[property];\n    if (description) {\n      propertyObject[\"description\"] = description;\n    }\n  }\n}\n\n// node_modules/vscode-uri/lib/esm/index.mjs\nvar LIB;\n(() => {\n  \"use strict\";\n  var t2 = { 470: (t3) => {\n    function e2(t4) {\n      if (\"string\" != typeof t4)\n        throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(t4));\n    }\n    function r2(t4, e3) {\n      for (var r3, n3 = \"\", i = 0, o = -1, s = 0, h = 0; h <= t4.length; ++h) {\n        if (h < t4.length)\n          r3 = t4.charCodeAt(h);\n        else {\n          if (47 === r3)\n            break;\n          r3 = 47;\n        }\n        if (47 === r3) {\n          if (o === h - 1 || 1 === s)\n            ;\n          else if (o !== h - 1 && 2 === s) {\n            if (n3.length < 2 || 2 !== i || 46 !== n3.charCodeAt(n3.length - 1) || 46 !== n3.charCodeAt(n3.length - 2)) {\n              if (n3.length > 2) {\n                var a2 = n3.lastIndexOf(\"/\");\n                if (a2 !== n3.length - 1) {\n                  -1 === a2 ? (n3 = \"\", i = 0) : i = (n3 = n3.slice(0, a2)).length - 1 - n3.lastIndexOf(\"/\"), o = h, s = 0;\n                  continue;\n                }\n              } else if (2 === n3.length || 1 === n3.length) {\n                n3 = \"\", i = 0, o = h, s = 0;\n                continue;\n              }\n            }\n            e3 && (n3.length > 0 ? n3 += \"/..\" : n3 = \"..\", i = 2);\n          } else\n            n3.length > 0 ? n3 += \"/\" + t4.slice(o + 1, h) : n3 = t4.slice(o + 1, h), i = h - o - 1;\n          o = h, s = 0;\n        } else\n          46 === r3 && -1 !== s ? ++s : s = -1;\n      }\n      return n3;\n    }\n    var n2 = { resolve: function() {\n      for (var t4, n3 = \"\", i = false, o = arguments.length - 1; o >= -1 && !i; o--) {\n        var s;\n        o >= 0 ? s = arguments[o] : (void 0 === t4 && (t4 = process.cwd()), s = t4), e2(s), 0 !== s.length && (n3 = s + \"/\" + n3, i = 47 === s.charCodeAt(0));\n      }\n      return n3 = r2(n3, !i), i ? n3.length > 0 ? \"/\" + n3 : \"/\" : n3.length > 0 ? n3 : \".\";\n    }, normalize: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      var n3 = 47 === t4.charCodeAt(0), i = 47 === t4.charCodeAt(t4.length - 1);\n      return 0 !== (t4 = r2(t4, !n3)).length || n3 || (t4 = \".\"), t4.length > 0 && i && (t4 += \"/\"), n3 ? \"/\" + t4 : t4;\n    }, isAbsolute: function(t4) {\n      return e2(t4), t4.length > 0 && 47 === t4.charCodeAt(0);\n    }, join: function() {\n      if (0 === arguments.length)\n        return \".\";\n      for (var t4, r3 = 0; r3 < arguments.length; ++r3) {\n        var i = arguments[r3];\n        e2(i), i.length > 0 && (void 0 === t4 ? t4 = i : t4 += \"/\" + i);\n      }\n      return void 0 === t4 ? \".\" : n2.normalize(t4);\n    }, relative: function(t4, r3) {\n      if (e2(t4), e2(r3), t4 === r3)\n        return \"\";\n      if ((t4 = n2.resolve(t4)) === (r3 = n2.resolve(r3)))\n        return \"\";\n      for (var i = 1; i < t4.length && 47 === t4.charCodeAt(i); ++i)\n        ;\n      for (var o = t4.length, s = o - i, h = 1; h < r3.length && 47 === r3.charCodeAt(h); ++h)\n        ;\n      for (var a2 = r3.length - h, c = s < a2 ? s : a2, f2 = -1, u = 0; u <= c; ++u) {\n        if (u === c) {\n          if (a2 > c) {\n            if (47 === r3.charCodeAt(h + u))\n              return r3.slice(h + u + 1);\n            if (0 === u)\n              return r3.slice(h + u);\n          } else\n            s > c && (47 === t4.charCodeAt(i + u) ? f2 = u : 0 === u && (f2 = 0));\n          break;\n        }\n        var l = t4.charCodeAt(i + u);\n        if (l !== r3.charCodeAt(h + u))\n          break;\n        47 === l && (f2 = u);\n      }\n      var g = \"\";\n      for (u = i + f2 + 1; u <= o; ++u)\n        u !== o && 47 !== t4.charCodeAt(u) || (0 === g.length ? g += \"..\" : g += \"/..\");\n      return g.length > 0 ? g + r3.slice(h + f2) : (h += f2, 47 === r3.charCodeAt(h) && ++h, r3.slice(h));\n    }, _makeLong: function(t4) {\n      return t4;\n    }, dirname: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      for (var r3 = t4.charCodeAt(0), n3 = 47 === r3, i = -1, o = true, s = t4.length - 1; s >= 1; --s)\n        if (47 === (r3 = t4.charCodeAt(s))) {\n          if (!o) {\n            i = s;\n            break;\n          }\n        } else\n          o = false;\n      return -1 === i ? n3 ? \"/\" : \".\" : n3 && 1 === i ? \"//\" : t4.slice(0, i);\n    }, basename: function(t4, r3) {\n      if (void 0 !== r3 && \"string\" != typeof r3)\n        throw new TypeError('\"ext\" argument must be a string');\n      e2(t4);\n      var n3, i = 0, o = -1, s = true;\n      if (void 0 !== r3 && r3.length > 0 && r3.length <= t4.length) {\n        if (r3.length === t4.length && r3 === t4)\n          return \"\";\n        var h = r3.length - 1, a2 = -1;\n        for (n3 = t4.length - 1; n3 >= 0; --n3) {\n          var c = t4.charCodeAt(n3);\n          if (47 === c) {\n            if (!s) {\n              i = n3 + 1;\n              break;\n            }\n          } else\n            -1 === a2 && (s = false, a2 = n3 + 1), h >= 0 && (c === r3.charCodeAt(h) ? -1 == --h && (o = n3) : (h = -1, o = a2));\n        }\n        return i === o ? o = a2 : -1 === o && (o = t4.length), t4.slice(i, o);\n      }\n      for (n3 = t4.length - 1; n3 >= 0; --n3)\n        if (47 === t4.charCodeAt(n3)) {\n          if (!s) {\n            i = n3 + 1;\n            break;\n          }\n        } else\n          -1 === o && (s = false, o = n3 + 1);\n      return -1 === o ? \"\" : t4.slice(i, o);\n    }, extname: function(t4) {\n      e2(t4);\n      for (var r3 = -1, n3 = 0, i = -1, o = true, s = 0, h = t4.length - 1; h >= 0; --h) {\n        var a2 = t4.charCodeAt(h);\n        if (47 !== a2)\n          -1 === i && (o = false, i = h + 1), 46 === a2 ? -1 === r3 ? r3 = h : 1 !== s && (s = 1) : -1 !== r3 && (s = -1);\n        else if (!o) {\n          n3 = h + 1;\n          break;\n        }\n      }\n      return -1 === r3 || -1 === i || 0 === s || 1 === s && r3 === i - 1 && r3 === n3 + 1 ? \"\" : t4.slice(r3, i);\n    }, format: function(t4) {\n      if (null === t4 || \"object\" != typeof t4)\n        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof t4);\n      return function(t5, e3) {\n        var r3 = e3.dir || e3.root, n3 = e3.base || (e3.name || \"\") + (e3.ext || \"\");\n        return r3 ? r3 === e3.root ? r3 + n3 : r3 + \"/\" + n3 : n3;\n      }(0, t4);\n    }, parse: function(t4) {\n      e2(t4);\n      var r3 = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" };\n      if (0 === t4.length)\n        return r3;\n      var n3, i = t4.charCodeAt(0), o = 47 === i;\n      o ? (r3.root = \"/\", n3 = 1) : n3 = 0;\n      for (var s = -1, h = 0, a2 = -1, c = true, f2 = t4.length - 1, u = 0; f2 >= n3; --f2)\n        if (47 !== (i = t4.charCodeAt(f2)))\n          -1 === a2 && (c = false, a2 = f2 + 1), 46 === i ? -1 === s ? s = f2 : 1 !== u && (u = 1) : -1 !== s && (u = -1);\n        else if (!c) {\n          h = f2 + 1;\n          break;\n        }\n      return -1 === s || -1 === a2 || 0 === u || 1 === u && s === a2 - 1 && s === h + 1 ? -1 !== a2 && (r3.base = r3.name = 0 === h && o ? t4.slice(1, a2) : t4.slice(h, a2)) : (0 === h && o ? (r3.name = t4.slice(1, s), r3.base = t4.slice(1, a2)) : (r3.name = t4.slice(h, s), r3.base = t4.slice(h, a2)), r3.ext = t4.slice(s, a2)), h > 0 ? r3.dir = t4.slice(0, h - 1) : o && (r3.dir = \"/\"), r3;\n    }, sep: \"/\", delimiter: \":\", win32: null, posix: null };\n    n2.posix = n2, t3.exports = n2;\n  } }, e = {};\n  function r(n2) {\n    var i = e[n2];\n    if (void 0 !== i)\n      return i.exports;\n    var o = e[n2] = { exports: {} };\n    return t2[n2](o, o.exports, r), o.exports;\n  }\n  r.d = (t3, e2) => {\n    for (var n2 in e2)\n      r.o(e2, n2) && !r.o(t3, n2) && Object.defineProperty(t3, n2, { enumerable: true, get: e2[n2] });\n  }, r.o = (t3, e2) => Object.prototype.hasOwnProperty.call(t3, e2), r.r = (t3) => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(t3, \"__esModule\", { value: true });\n  };\n  var n = {};\n  (() => {\n    let t3;\n    if (r.r(n), r.d(n, { URI: () => f2, Utils: () => P }), \"object\" == typeof process)\n      t3 = \"win32\" === process.platform;\n    else if (\"object\" == typeof navigator) {\n      let e3 = navigator.userAgent;\n      t3 = e3.indexOf(\"Windows\") >= 0;\n    }\n    const e2 = /^\\w[\\w\\d+.-]*$/, i = /^\\//, o = /^\\/\\//;\n    function s(t4, r2) {\n      if (!t4.scheme && r2)\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t4.authority}\", path: \"${t4.path}\", query: \"${t4.query}\", fragment: \"${t4.fragment}\"}`);\n      if (t4.scheme && !e2.test(t4.scheme))\n        throw new Error(\"[UriError]: Scheme contains illegal characters.\");\n      if (t4.path) {\n        if (t4.authority) {\n          if (!i.test(t4.path))\n            throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n        } else if (o.test(t4.path))\n          throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n    const h = \"\", a2 = \"/\", c = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    class f2 {\n      static isUri(t4) {\n        return t4 instanceof f2 || !!t4 && \"string\" == typeof t4.authority && \"string\" == typeof t4.fragment && \"string\" == typeof t4.path && \"string\" == typeof t4.query && \"string\" == typeof t4.scheme && \"string\" == typeof t4.fsPath && \"function\" == typeof t4.with && \"function\" == typeof t4.toString;\n      }\n      scheme;\n      authority;\n      path;\n      query;\n      fragment;\n      constructor(t4, e3, r2, n2, i2, o2 = false) {\n        \"object\" == typeof t4 ? (this.scheme = t4.scheme || h, this.authority = t4.authority || h, this.path = t4.path || h, this.query = t4.query || h, this.fragment = t4.fragment || h) : (this.scheme = /* @__PURE__ */ function(t5, e4) {\n          return t5 || e4 ? t5 : \"file\";\n        }(t4, o2), this.authority = e3 || h, this.path = function(t5, e4) {\n          switch (t5) {\n            case \"https\":\n            case \"http\":\n            case \"file\":\n              e4 ? e4[0] !== a2 && (e4 = a2 + e4) : e4 = a2;\n          }\n          return e4;\n        }(this.scheme, r2 || h), this.query = n2 || h, this.fragment = i2 || h, s(this, o2));\n      }\n      get fsPath() {\n        return m(this, false);\n      }\n      with(t4) {\n        if (!t4)\n          return this;\n        let { scheme: e3, authority: r2, path: n2, query: i2, fragment: o2 } = t4;\n        return void 0 === e3 ? e3 = this.scheme : null === e3 && (e3 = h), void 0 === r2 ? r2 = this.authority : null === r2 && (r2 = h), void 0 === n2 ? n2 = this.path : null === n2 && (n2 = h), void 0 === i2 ? i2 = this.query : null === i2 && (i2 = h), void 0 === o2 ? o2 = this.fragment : null === o2 && (o2 = h), e3 === this.scheme && r2 === this.authority && n2 === this.path && i2 === this.query && o2 === this.fragment ? this : new l(e3, r2, n2, i2, o2);\n      }\n      static parse(t4, e3 = false) {\n        const r2 = c.exec(t4);\n        return r2 ? new l(r2[2] || h, C(r2[4] || h), C(r2[5] || h), C(r2[7] || h), C(r2[9] || h), e3) : new l(h, h, h, h, h);\n      }\n      static file(e3) {\n        let r2 = h;\n        if (t3 && (e3 = e3.replace(/\\\\/g, a2)), e3[0] === a2 && e3[1] === a2) {\n          const t4 = e3.indexOf(a2, 2);\n          -1 === t4 ? (r2 = e3.substring(2), e3 = a2) : (r2 = e3.substring(2, t4), e3 = e3.substring(t4) || a2);\n        }\n        return new l(\"file\", r2, e3, h, h);\n      }\n      static from(t4) {\n        const e3 = new l(t4.scheme, t4.authority, t4.path, t4.query, t4.fragment);\n        return s(e3, true), e3;\n      }\n      toString(t4 = false) {\n        return y(this, t4);\n      }\n      toJSON() {\n        return this;\n      }\n      static revive(t4) {\n        if (t4) {\n          if (t4 instanceof f2)\n            return t4;\n          {\n            const e3 = new l(t4);\n            return e3._formatted = t4.external, e3._fsPath = t4._sep === u ? t4.fsPath : null, e3;\n          }\n        }\n        return t4;\n      }\n    }\n    const u = t3 ? 1 : void 0;\n    class l extends f2 {\n      _formatted = null;\n      _fsPath = null;\n      get fsPath() {\n        return this._fsPath || (this._fsPath = m(this, false)), this._fsPath;\n      }\n      toString(t4 = false) {\n        return t4 ? y(this, true) : (this._formatted || (this._formatted = y(this, false)), this._formatted);\n      }\n      toJSON() {\n        const t4 = { $mid: 1 };\n        return this._fsPath && (t4.fsPath = this._fsPath, t4._sep = u), this._formatted && (t4.external = this._formatted), this.path && (t4.path = this.path), this.scheme && (t4.scheme = this.scheme), this.authority && (t4.authority = this.authority), this.query && (t4.query = this.query), this.fragment && (t4.fragment = this.fragment), t4;\n      }\n    }\n    const g = { 58: \"%3A\", 47: \"%2F\", 63: \"%3F\", 35: \"%23\", 91: \"%5B\", 93: \"%5D\", 64: \"%40\", 33: \"%21\", 36: \"%24\", 38: \"%26\", 39: \"%27\", 40: \"%28\", 41: \"%29\", 42: \"%2A\", 43: \"%2B\", 44: \"%2C\", 59: \"%3B\", 61: \"%3D\", 32: \"%20\" };\n    function d(t4, e3, r2) {\n      let n2, i2 = -1;\n      for (let o2 = 0; o2 < t4.length; o2++) {\n        const s2 = t4.charCodeAt(o2);\n        if (s2 >= 97 && s2 <= 122 || s2 >= 65 && s2 <= 90 || s2 >= 48 && s2 <= 57 || 45 === s2 || 46 === s2 || 95 === s2 || 126 === s2 || e3 && 47 === s2 || r2 && 91 === s2 || r2 && 93 === s2 || r2 && 58 === s2)\n          -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), void 0 !== n2 && (n2 += t4.charAt(o2));\n        else {\n          void 0 === n2 && (n2 = t4.substr(0, o2));\n          const e4 = g[s2];\n          void 0 !== e4 ? (-1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), n2 += e4) : -1 === i2 && (i2 = o2);\n        }\n      }\n      return -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2))), void 0 !== n2 ? n2 : t4;\n    }\n    function p(t4) {\n      let e3;\n      for (let r2 = 0; r2 < t4.length; r2++) {\n        const n2 = t4.charCodeAt(r2);\n        35 === n2 || 63 === n2 ? (void 0 === e3 && (e3 = t4.substr(0, r2)), e3 += g[n2]) : void 0 !== e3 && (e3 += t4[r2]);\n      }\n      return void 0 !== e3 ? e3 : t4;\n    }\n    function m(e3, r2) {\n      let n2;\n      return n2 = e3.authority && e3.path.length > 1 && \"file\" === e3.scheme ? `//${e3.authority}${e3.path}` : 47 === e3.path.charCodeAt(0) && (e3.path.charCodeAt(1) >= 65 && e3.path.charCodeAt(1) <= 90 || e3.path.charCodeAt(1) >= 97 && e3.path.charCodeAt(1) <= 122) && 58 === e3.path.charCodeAt(2) ? r2 ? e3.path.substr(1) : e3.path[1].toLowerCase() + e3.path.substr(2) : e3.path, t3 && (n2 = n2.replace(/\\//g, \"\\\\\")), n2;\n    }\n    function y(t4, e3) {\n      const r2 = e3 ? p : d;\n      let n2 = \"\", { scheme: i2, authority: o2, path: s2, query: h2, fragment: c2 } = t4;\n      if (i2 && (n2 += i2, n2 += \":\"), (o2 || \"file\" === i2) && (n2 += a2, n2 += a2), o2) {\n        let t5 = o2.indexOf(\"@\");\n        if (-1 !== t5) {\n          const e4 = o2.substr(0, t5);\n          o2 = o2.substr(t5 + 1), t5 = e4.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(e4, false, false) : (n2 += r2(e4.substr(0, t5), false, false), n2 += \":\", n2 += r2(e4.substr(t5 + 1), false, true)), n2 += \"@\";\n        }\n        o2 = o2.toLowerCase(), t5 = o2.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(o2, false, true) : (n2 += r2(o2.substr(0, t5), false, true), n2 += o2.substr(t5));\n      }\n      if (s2) {\n        if (s2.length >= 3 && 47 === s2.charCodeAt(0) && 58 === s2.charCodeAt(2)) {\n          const t5 = s2.charCodeAt(1);\n          t5 >= 65 && t5 <= 90 && (s2 = `/${String.fromCharCode(t5 + 32)}:${s2.substr(3)}`);\n        } else if (s2.length >= 2 && 58 === s2.charCodeAt(1)) {\n          const t5 = s2.charCodeAt(0);\n          t5 >= 65 && t5 <= 90 && (s2 = `${String.fromCharCode(t5 + 32)}:${s2.substr(2)}`);\n        }\n        n2 += r2(s2, true, false);\n      }\n      return h2 && (n2 += \"?\", n2 += r2(h2, false, false)), c2 && (n2 += \"#\", n2 += e3 ? c2 : d(c2, false, false)), n2;\n    }\n    function v(t4) {\n      try {\n        return decodeURIComponent(t4);\n      } catch {\n        return t4.length > 3 ? t4.substr(0, 3) + v(t4.substr(3)) : t4;\n      }\n    }\n    const b = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n    function C(t4) {\n      return t4.match(b) ? t4.replace(b, (t5) => v(t5)) : t4;\n    }\n    var A2 = r(470);\n    const w = A2.posix || A2, x = \"/\";\n    var P;\n    !function(t4) {\n      t4.joinPath = function(t5, ...e3) {\n        return t5.with({ path: w.join(t5.path, ...e3) });\n      }, t4.resolvePath = function(t5, ...e3) {\n        let r2 = t5.path, n2 = false;\n        r2[0] !== x && (r2 = x + r2, n2 = true);\n        let i2 = w.resolve(r2, ...e3);\n        return n2 && i2[0] === x && !t5.authority && (i2 = i2.substring(1)), t5.with({ path: i2 });\n      }, t4.dirname = function(t5) {\n        if (0 === t5.path.length || t5.path === x)\n          return t5;\n        let e3 = w.dirname(t5.path);\n        return 1 === e3.length && 46 === e3.charCodeAt(0) && (e3 = \"\"), t5.with({ path: e3 });\n      }, t4.basename = function(t5) {\n        return w.basename(t5.path);\n      }, t4.extname = function(t5) {\n        return w.extname(t5.path);\n      };\n    }(P || (P = {}));\n  })(), LIB = n;\n})();\nvar { URI: URI2, Utils } = LIB;\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/glob.js\nfunction createRegex(glob, opts) {\n  if (typeof glob !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  const str = String(glob);\n  let reStr = \"\";\n  const extended = opts ? !!opts.extended : false;\n  const globstar = opts ? !!opts.globstar : false;\n  let inGroup = false;\n  const flags = opts && typeof opts.flags === \"string\" ? opts.flags : \"\";\n  let c;\n  for (let i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n    switch (c) {\n      case \"/\":\n      case \"$\":\n      case \"^\":\n      case \"+\":\n      case \".\":\n      case \"(\":\n      case \")\":\n      case \"=\":\n      case \"!\":\n      case \"|\":\n        reStr += \"\\\\\" + c;\n        break;\n      case \"?\":\n        if (extended) {\n          reStr += \".\";\n          break;\n        }\n      case \"[\":\n      case \"]\":\n        if (extended) {\n          reStr += c;\n          break;\n        }\n      case \"{\":\n        if (extended) {\n          inGroup = true;\n          reStr += \"(\";\n          break;\n        }\n      case \"}\":\n        if (extended) {\n          inGroup = false;\n          reStr += \")\";\n          break;\n        }\n      case \",\":\n        if (inGroup) {\n          reStr += \"|\";\n          break;\n        }\n        reStr += \"\\\\\" + c;\n        break;\n      case \"*\":\n        const prevChar = str[i - 1];\n        let starCount = 1;\n        while (str[i + 1] === \"*\") {\n          starCount++;\n          i++;\n        }\n        const nextChar = str[i + 1];\n        if (!globstar) {\n          reStr += \".*\";\n        } else {\n          const isGlobstar = starCount > 1 && (prevChar === \"/\" || prevChar === void 0 || prevChar === \"{\" || prevChar === \",\") && (nextChar === \"/\" || nextChar === void 0 || nextChar === \",\" || nextChar === \"}\");\n          if (isGlobstar) {\n            if (nextChar === \"/\") {\n              i++;\n            } else if (prevChar === \"/\" && reStr.endsWith(\"\\\\/\")) {\n              reStr = reStr.substr(0, reStr.length - 2);\n            }\n            reStr += \"((?:[^/]*(?:/|$))*)\";\n          } else {\n            reStr += \"([^/]*)\";\n          }\n        }\n        break;\n      default:\n        reStr += c;\n    }\n  }\n  if (!flags || !~flags.indexOf(\"g\")) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n  return new RegExp(reStr, flags);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js\nvar BANG = \"!\";\nvar PATH_SEP = \"/\";\nvar FilePatternAssociation = class {\n  constructor(pattern, folderUri, uris) {\n    this.folderUri = folderUri;\n    this.uris = uris;\n    this.globWrappers = [];\n    try {\n      for (let patternString of pattern) {\n        const include = patternString[0] !== BANG;\n        if (!include) {\n          patternString = patternString.substring(1);\n        }\n        if (patternString.length > 0) {\n          if (patternString[0] === PATH_SEP) {\n            patternString = patternString.substring(1);\n          }\n          this.globWrappers.push({\n            regexp: createRegex(\"**/\" + patternString, { extended: true, globstar: true }),\n            include\n          });\n        }\n      }\n      ;\n      if (folderUri) {\n        folderUri = normalizeResourceForMatching(folderUri);\n        if (!folderUri.endsWith(\"/\")) {\n          folderUri = folderUri + \"/\";\n        }\n        this.folderUri = folderUri;\n      }\n    } catch (e) {\n      this.globWrappers.length = 0;\n      this.uris = [];\n    }\n  }\n  matchesPattern(fileName) {\n    if (this.folderUri && !fileName.startsWith(this.folderUri)) {\n      return false;\n    }\n    let match = false;\n    for (const { regexp, include } of this.globWrappers) {\n      if (regexp.test(fileName)) {\n        match = include;\n      }\n    }\n    return match;\n  }\n  getURIs() {\n    return this.uris;\n  }\n};\nvar SchemaHandle = class {\n  constructor(service, uri, unresolvedSchemaContent) {\n    this.service = service;\n    this.uri = uri;\n    this.dependencies = /* @__PURE__ */ new Set();\n    this.anchors = void 0;\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n  getUnresolvedSchema() {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.uri);\n    }\n    return this.unresolvedSchema;\n  }\n  getResolvedSchema() {\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then((unresolved) => {\n        return this.service.resolveSchemaContent(unresolved, this);\n      });\n    }\n    return this.resolvedSchema;\n  }\n  clearSchema() {\n    const hasChanges = !!this.unresolvedSchema;\n    this.resolvedSchema = void 0;\n    this.unresolvedSchema = void 0;\n    this.dependencies.clear();\n    this.anchors = void 0;\n    return hasChanges;\n  }\n};\nvar UnresolvedSchema = class {\n  constructor(schema, errors = []) {\n    this.schema = schema;\n    this.errors = errors;\n  }\n};\nvar ResolvedSchema = class {\n  constructor(schema, errors = [], warnings = [], schemaDraft) {\n    this.schema = schema;\n    this.errors = errors;\n    this.warnings = warnings;\n    this.schemaDraft = schemaDraft;\n  }\n  getSection(path) {\n    const schemaRef = this.getSectionRecursive(path, this.schema);\n    if (schemaRef) {\n      return asSchema(schemaRef);\n    }\n    return void 0;\n  }\n  getSectionRecursive(path, schema) {\n    if (!schema || typeof schema === \"boolean\" || path.length === 0) {\n      return schema;\n    }\n    const next = path.shift();\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (const pattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(pattern);\n        if (regex?.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === \"object\") {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match(\"[0-9]+\")) {\n      if (Array.isArray(schema.items)) {\n        const index = parseInt(next, 10);\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n    return void 0;\n  }\n};\nvar JSONSchemaService = class {\n  constructor(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = [];\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n  }\n  getRegisteredSchemaIds(filter) {\n    return Object.keys(this.registeredSchemasIds).filter((id) => {\n      const scheme = URI2.parse(id).scheme;\n      return scheme !== \"schemaservice\" && (!filter || filter(scheme));\n    });\n  }\n  get promise() {\n    return this.promiseConstructor;\n  }\n  dispose() {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  }\n  onResourceChange(uri) {\n    this.cachedSchemaForResource = void 0;\n    let hasChanges = false;\n    uri = normalizeId(uri);\n    const toWalk = [uri];\n    const all = Object.keys(this.schemasById).map((key) => this.schemasById[key]);\n    while (toWalk.length) {\n      const curr = toWalk.pop();\n      for (let i = 0; i < all.length; i++) {\n        const handle = all[i];\n        if (handle && (handle.uri === curr || handle.dependencies.has(curr))) {\n          if (handle.uri !== curr) {\n            toWalk.push(handle.uri);\n          }\n          if (handle.clearSchema()) {\n            hasChanges = true;\n          }\n          all[i] = void 0;\n        }\n      }\n    }\n    return hasChanges;\n  }\n  setSchemaContributions(schemaContributions2) {\n    if (schemaContributions2.schemas) {\n      const schemas = schemaContributions2.schemas;\n      for (const id in schemas) {\n        const normalizedId = normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n    if (Array.isArray(schemaContributions2.schemaAssociations)) {\n      const schemaAssociations = schemaContributions2.schemaAssociations;\n      for (let schemaAssociation of schemaAssociations) {\n        const uris = schemaAssociation.uris.map(normalizeId);\n        const association = this.addFilePatternAssociation(schemaAssociation.pattern, schemaAssociation.folderUri, uris);\n        this.contributionAssociations.push(association);\n      }\n    }\n  }\n  addSchemaHandle(id, unresolvedSchemaContent) {\n    const schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  }\n  getOrAddSchemaHandle(id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  }\n  addFilePatternAssociation(pattern, folderUri, uris) {\n    const fpa = new FilePatternAssociation(pattern, folderUri, uris);\n    this.filePatternAssociations.push(fpa);\n    return fpa;\n  }\n  registerExternalSchema(config) {\n    const id = normalizeId(config.uri);\n    this.registeredSchemasIds[id] = true;\n    this.cachedSchemaForResource = void 0;\n    if (config.fileMatch && config.fileMatch.length) {\n      this.addFilePatternAssociation(config.fileMatch, config.folderUri, [id]);\n    }\n    return config.schema ? this.addSchemaHandle(id, config.schema) : this.getOrAddSchemaHandle(id);\n  }\n  clearExternalSchemas() {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n    this.cachedSchemaForResource = void 0;\n    for (const id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n    for (const contributionAssociation of this.contributionAssociations) {\n      this.filePatternAssociations.push(contributionAssociation);\n    }\n  }\n  getResolvedSchema(schemaId) {\n    const id = normalizeId(schemaId);\n    const schemaHandle = this.schemasById[id];\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n    return this.promise.resolve(void 0);\n  }\n  loadSchema(url) {\n    if (!this.requestService) {\n      const errorMessage = t(\"Unable to load schema from '{0}'. No schema request service available\", toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n    if (url.startsWith(\"http://json-schema.org/\")) {\n      url = \"https\" + url.substring(4);\n    }\n    return this.requestService(url).then((content) => {\n      if (!content) {\n        const errorMessage = t(\"Unable to load schema from '{0}': No content.\", toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n      const errors = [];\n      if (content.charCodeAt(0) === 65279) {\n        errors.push(t(\"Problem reading content from '{0}': UTF-8 with BOM detected, only UTF 8 is allowed.\", toDisplayString(url)));\n        content = content.trimStart();\n      }\n      let schemaContent = {};\n      const jsonErrors = [];\n      schemaContent = parse2(content, jsonErrors);\n      if (jsonErrors.length) {\n        errors.push(t(\"Unable to parse content from '{0}': Parse error at offset {1}.\", toDisplayString(url), jsonErrors[0].offset));\n      }\n      return new UnresolvedSchema(schemaContent, errors);\n    }, (error) => {\n      let errorMessage = error.toString();\n      const errorSplit = error.toString().split(\"Error: \");\n      if (errorSplit.length > 1) {\n        errorMessage = errorSplit[1];\n      }\n      if (endsWith(errorMessage, \".\")) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n      return new UnresolvedSchema({}, [t(\"Unable to load schema from '{0}': {1}.\", toDisplayString(url), errorMessage)]);\n    });\n  }\n  resolveSchemaContent(schemaToResolve, handle) {\n    const resolveErrors = schemaToResolve.errors.slice(0);\n    const schema = schemaToResolve.schema;\n    let schemaDraft = schema.$schema ? normalizeId(schema.$schema) : void 0;\n    if (schemaDraft === \"http://json-schema.org/draft-03/schema\") {\n      return this.promise.resolve(new ResolvedSchema({}, [t(\"Draft-03 schemas are not supported.\")], [], schemaDraft));\n    }\n    let usesUnsupportedFeatures = /* @__PURE__ */ new Set();\n    const contextService = this.contextService;\n    const findSectionByJSONPointer = (schema2, path) => {\n      path = decodeURIComponent(path);\n      let current = schema2;\n      if (path[0] === \"/\") {\n        path = path.substring(1);\n      }\n      path.split(\"/\").some((part) => {\n        part = part.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n    const findSchemaById = (schema2, handle2, id) => {\n      if (!handle2.anchors) {\n        handle2.anchors = collectAnchors(schema2);\n      }\n      return handle2.anchors.get(id);\n    };\n    const merge = (target, section) => {\n      for (const key in section) {\n        if (section.hasOwnProperty(key) && key !== \"id\" && key !== \"$id\") {\n          target[key] = section[key];\n        }\n      }\n    };\n    const mergeRef = (target, sourceRoot, sourceHandle, refSegment) => {\n      let section;\n      if (refSegment === void 0 || refSegment.length === 0) {\n        section = sourceRoot;\n      } else if (refSegment.charAt(0) === \"/\") {\n        section = findSectionByJSONPointer(sourceRoot, refSegment);\n      } else {\n        section = findSchemaById(sourceRoot, sourceHandle, refSegment);\n      }\n      if (section) {\n        merge(target, section);\n      } else {\n        resolveErrors.push(t(\"$ref '{0}' in '{1}' can not be resolved.\", refSegment || \"\", sourceHandle.uri));\n      }\n    };\n    const resolveExternalLink = (node, uri, refSegment, parentHandle) => {\n      if (contextService && !/^[A-Za-z][A-Za-z0-9+\\-.+]*:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentHandle.uri);\n      }\n      uri = normalizeId(uri);\n      const referencedHandle = this.getOrAddSchemaHandle(uri);\n      return referencedHandle.getUnresolvedSchema().then((unresolvedSchema) => {\n        parentHandle.dependencies.add(uri);\n        if (unresolvedSchema.errors.length) {\n          const loc = refSegment ? uri + \"#\" + refSegment : uri;\n          resolveErrors.push(t(\"Problems loading reference '{0}': {1}\", loc, unresolvedSchema.errors[0]));\n        }\n        mergeRef(node, unresolvedSchema.schema, referencedHandle, refSegment);\n        return resolveRefs(node, unresolvedSchema.schema, referencedHandle);\n      });\n    };\n    const resolveRefs = (node, parentSchema, parentHandle) => {\n      const openPromises = [];\n      this.traverseNodes(node, (next) => {\n        const seenRefs = /* @__PURE__ */ new Set();\n        while (next.$ref) {\n          const ref = next.$ref;\n          const segments = ref.split(\"#\", 2);\n          delete next.$ref;\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentHandle));\n            return;\n          } else {\n            if (!seenRefs.has(ref)) {\n              const id = segments[1];\n              mergeRef(next, parentSchema, parentHandle, id);\n              seenRefs.add(ref);\n            }\n          }\n        }\n        if (next.$recursiveRef) {\n          usesUnsupportedFeatures.add(\"$recursiveRef\");\n        }\n        if (next.$dynamicRef) {\n          usesUnsupportedFeatures.add(\"$dynamicRef\");\n        }\n      });\n      return this.promise.all(openPromises);\n    };\n    const collectAnchors = (root) => {\n      const result = /* @__PURE__ */ new Map();\n      this.traverseNodes(root, (next) => {\n        const id = next.$id || next.id;\n        const anchor = isString(id) && id.charAt(0) === \"#\" ? id.substring(1) : next.$anchor;\n        if (anchor) {\n          if (result.has(anchor)) {\n            resolveErrors.push(t(\"Duplicate anchor declaration: '{0}'\", anchor));\n          } else {\n            result.set(anchor, next);\n          }\n        }\n        if (next.$recursiveAnchor) {\n          usesUnsupportedFeatures.add(\"$recursiveAnchor\");\n        }\n        if (next.$dynamicAnchor) {\n          usesUnsupportedFeatures.add(\"$dynamicAnchor\");\n        }\n      });\n      return result;\n    };\n    return resolveRefs(schema, schema, handle).then((_) => {\n      let resolveWarnings = [];\n      if (usesUnsupportedFeatures.size) {\n        resolveWarnings.push(t(\"The schema uses meta-schema features ({0}) that are not yet supported by the validator.\", Array.from(usesUnsupportedFeatures.keys()).join(\", \")));\n      }\n      return new ResolvedSchema(schema, resolveErrors, resolveWarnings, schemaDraft);\n    });\n  }\n  traverseNodes(root, handle) {\n    if (!root || typeof root !== \"object\") {\n      return Promise.resolve(null);\n    }\n    const seen = /* @__PURE__ */ new Set();\n    const collectEntries = (...entries) => {\n      for (const entry of entries) {\n        if (isObject(entry)) {\n          toWalk.push(entry);\n        }\n      }\n    };\n    const collectMapEntries = (...maps) => {\n      for (const map of maps) {\n        if (isObject(map)) {\n          for (const k in map) {\n            const key = k;\n            const entry = map[key];\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectArrayEntries = (...arrays) => {\n      for (const array of arrays) {\n        if (Array.isArray(array)) {\n          for (const entry of array) {\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectEntryOrArrayEntries = (items) => {\n      if (Array.isArray(items)) {\n        for (const entry of items) {\n          if (isObject(entry)) {\n            toWalk.push(entry);\n          }\n        }\n      } else if (isObject(items)) {\n        toWalk.push(items);\n      }\n    };\n    const toWalk = [root];\n    let next = toWalk.pop();\n    while (next) {\n      if (!seen.has(next)) {\n        seen.add(next);\n        handle(next);\n        collectEntries(next.additionalItems, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else, next.unevaluatedItems, next.unevaluatedProperties);\n        collectMapEntries(next.definitions, next.$defs, next.properties, next.patternProperties, next.dependencies, next.dependentSchemas);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.prefixItems);\n        collectEntryOrArrayEntries(next.items);\n      }\n      next = toWalk.pop();\n    }\n  }\n  getSchemaFromProperty(resource, document) {\n    if (document.root?.type === \"object\") {\n      for (const p of document.root.properties) {\n        if (p.keyNode.value === \"$schema\" && p.valueNode?.type === \"string\") {\n          let schemaId = p.valueNode.value;\n          if (this.contextService && !/^\\w[\\w\\d+.-]*:/.test(schemaId)) {\n            schemaId = this.contextService.resolveRelativePath(schemaId, resource);\n          }\n          return schemaId;\n        }\n      }\n    }\n    return void 0;\n  }\n  getAssociatedSchemas(resource) {\n    const seen = /* @__PURE__ */ Object.create(null);\n    const schemas = [];\n    const normalizedResource = normalizeResourceForMatching(resource);\n    for (const entry of this.filePatternAssociations) {\n      if (entry.matchesPattern(normalizedResource)) {\n        for (const schemaId of entry.getURIs()) {\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n    return schemas;\n  }\n  getSchemaURIsForResource(resource, document) {\n    let schemeId = document && this.getSchemaFromProperty(resource, document);\n    if (schemeId) {\n      return [schemeId];\n    }\n    return this.getAssociatedSchemas(resource);\n  }\n  getSchemaForResource(resource, document) {\n    if (document) {\n      let schemeId = this.getSchemaFromProperty(resource, document);\n      if (schemeId) {\n        const id = normalizeId(schemeId);\n        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n      }\n    }\n    if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n      return this.cachedSchemaForResource.resolvedSchema;\n    }\n    const schemas = this.getAssociatedSchemas(resource);\n    const resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(void 0);\n    this.cachedSchemaForResource = { resource, resolvedSchema };\n    return resolvedSchema;\n  }\n  createCombinedSchema(resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      const combinedSchemaId = \"schemaservice://combinedSchema/\" + encodeURIComponent(resource);\n      const combinedSchema = {\n        allOf: schemaIds.map((schemaId) => ({ $ref: schemaId }))\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  }\n  getMatchingSchemas(document, jsonDocument, schema) {\n    if (schema) {\n      const id = schema.id || \"schemaservice://untitled/matchingSchemas/\" + idCounter2++;\n      const handle = this.addSchemaHandle(id, schema);\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return jsonDocument.getMatchingSchemas(resolvedSchema.schema).filter((s) => !s.inverted);\n      });\n    }\n    return this.getSchemaForResource(document.uri, jsonDocument).then((schema2) => {\n      if (schema2) {\n        return jsonDocument.getMatchingSchemas(schema2.schema).filter((s) => !s.inverted);\n      }\n      return [];\n    });\n  }\n};\nvar idCounter2 = 0;\nfunction normalizeId(id) {\n  try {\n    return URI2.parse(id).toString(true);\n  } catch (e) {\n    return id;\n  }\n}\nfunction normalizeResourceForMatching(resource) {\n  try {\n    return URI2.parse(resource).with({ fragment: null, query: null }).toString(true);\n  } catch (e) {\n    return resource;\n  }\n}\nfunction toDisplayString(url) {\n  try {\n    const uri = URI2.parse(url);\n    if (uri.scheme === \"file\") {\n      return uri.fsPath;\n    }\n  } catch (e) {\n  }\n  return url;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js\nfunction getFoldingRanges(document, context) {\n  const ranges = [];\n  const nestingLevels = [];\n  const stack = [];\n  let prevStart = -1;\n  const scanner = createScanner2(document.getText(), false);\n  let token = scanner.scan();\n  function addRange(range) {\n    ranges.push(range);\n    nestingLevels.push(stack.length);\n  }\n  while (token !== 17) {\n    switch (token) {\n      case 1:\n      case 3: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const range = { startLine, endLine: startLine, kind: token === 1 ? \"object\" : \"array\" };\n        stack.push(range);\n        break;\n      }\n      case 2:\n      case 4: {\n        const kind = token === 2 ? \"object\" : \"array\";\n        if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n          const range = stack.pop();\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n            range.endLine = line - 1;\n            addRange(range);\n            prevStart = range.startLine;\n          }\n        }\n        break;\n      }\n      case 13: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n        if (scanner.getTokenError() === 1 && startLine + 1 < document.lineCount) {\n          scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n        } else {\n          if (startLine < endLine) {\n            addRange({ startLine, endLine, kind: FoldingRangeKind.Comment });\n            prevStart = startLine;\n          }\n        }\n        break;\n      }\n      case 12: {\n        const text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n        const m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n        if (m) {\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (m[1]) {\n            const range = { startLine: line, endLine: line, kind: FoldingRangeKind.Region };\n            stack.push(range);\n          } else {\n            let i = stack.length - 1;\n            while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n              i--;\n            }\n            if (i >= 0) {\n              const range = stack[i];\n              stack.length = i;\n              if (line > range.startLine && prevStart !== range.startLine) {\n                range.endLine = line;\n                addRange(range);\n                prevStart = range.startLine;\n              }\n            }\n          }\n        }\n        break;\n      }\n    }\n    token = scanner.scan();\n  }\n  const rangeLimit = context && context.rangeLimit;\n  if (typeof rangeLimit !== \"number\" || ranges.length <= rangeLimit) {\n    return ranges;\n  }\n  if (context && context.onRangeLimitExceeded) {\n    context.onRangeLimitExceeded(document.uri);\n  }\n  const counts = [];\n  for (let level of nestingLevels) {\n    if (level < 30) {\n      counts[level] = (counts[level] || 0) + 1;\n    }\n  }\n  let entries = 0;\n  let maxLevel = 0;\n  for (let i = 0; i < counts.length; i++) {\n    const n = counts[i];\n    if (n) {\n      if (n + entries > rangeLimit) {\n        maxLevel = i;\n        break;\n      }\n      entries += n;\n    }\n  }\n  const result = [];\n  for (let i = 0; i < ranges.length; i++) {\n    const level = nestingLevels[i];\n    if (typeof level === \"number\") {\n      if (level < maxLevel || level === maxLevel && entries++ < rangeLimit) {\n        result.push(ranges[i]);\n      }\n    }\n  }\n  return result;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js\nfunction getSelectionRanges(document, positions, doc) {\n  function getSelectionRange(position) {\n    let offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    const result = [];\n    while (node) {\n      switch (node.type) {\n        case \"string\":\n        case \"object\":\n        case \"array\":\n          const cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n          if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n            result.push(newRange(cStart, cEnd));\n          }\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n        case \"number\":\n        case \"boolean\":\n        case \"null\":\n        case \"property\":\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n      }\n      if (node.type === \"property\" || node.parent && node.parent.type === \"array\") {\n        const afterCommaOffset = getOffsetAfterNextToken(\n          node.offset + node.length,\n          5\n          /* SyntaxKind.CommaToken */\n        );\n        if (afterCommaOffset !== -1) {\n          result.push(newRange(node.offset, afterCommaOffset));\n        }\n      }\n      node = node.parent;\n    }\n    let current = void 0;\n    for (let index = result.length - 1; index >= 0; index--) {\n      current = SelectionRange.create(result[index], current);\n    }\n    if (!current) {\n      current = SelectionRange.create(Range.create(position, position));\n    }\n    return current;\n  }\n  function newRange(start, end) {\n    return Range.create(document.positionAt(start), document.positionAt(end));\n  }\n  const scanner = createScanner2(document.getText(), true);\n  function getOffsetAfterNextToken(offset, expectedToken) {\n    scanner.setPosition(offset);\n    let token = scanner.scan();\n    if (token === expectedToken) {\n      return scanner.getTokenOffset() + scanner.getTokenLength();\n    }\n    return -1;\n  }\n  return positions.map(getSelectionRange);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/format.js\nfunction format4(documentToFormat, formattingOptions, formattingRange) {\n  let range = void 0;\n  if (formattingRange) {\n    const offset = documentToFormat.offsetAt(formattingRange.start);\n    const length = documentToFormat.offsetAt(formattingRange.end) - offset;\n    range = { offset, length };\n  }\n  const options = {\n    tabSize: formattingOptions ? formattingOptions.tabSize : 4,\n    insertSpaces: formattingOptions?.insertSpaces === true,\n    insertFinalNewline: formattingOptions?.insertFinalNewline === true,\n    eol: \"\\n\",\n    keepLines: formattingOptions?.keepLines === true\n  };\n  return format2(documentToFormat.getText(), range, options).map((edit) => {\n    return TextEdit.replace(Range.create(documentToFormat.positionAt(edit.offset), documentToFormat.positionAt(edit.offset + edit.length)), edit.content);\n  });\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/propertyTree.js\nvar Container;\n(function(Container2) {\n  Container2[Container2[\"Object\"] = 0] = \"Object\";\n  Container2[Container2[\"Array\"] = 1] = \"Array\";\n})(Container || (Container = {}));\nvar PropertyTree = class {\n  constructor(propertyName, beginningLineNumber) {\n    this.propertyName = propertyName ?? \"\";\n    this.beginningLineNumber = beginningLineNumber;\n    this.childrenProperties = [];\n    this.lastProperty = false;\n    this.noKeyName = false;\n  }\n  addChildProperty(childProperty) {\n    childProperty.parent = this;\n    if (this.childrenProperties.length > 0) {\n      let insertionIndex = 0;\n      if (childProperty.noKeyName) {\n        insertionIndex = this.childrenProperties.length;\n      } else {\n        insertionIndex = binarySearchOnPropertyArray(this.childrenProperties, childProperty, compareProperties);\n      }\n      if (insertionIndex < 0) {\n        insertionIndex = insertionIndex * -1 - 1;\n      }\n      this.childrenProperties.splice(insertionIndex, 0, childProperty);\n    } else {\n      this.childrenProperties.push(childProperty);\n    }\n    return childProperty;\n  }\n};\nfunction compareProperties(propertyTree1, propertyTree2) {\n  const propertyName1 = propertyTree1.propertyName.toLowerCase();\n  const propertyName2 = propertyTree2.propertyName.toLowerCase();\n  if (propertyName1 < propertyName2) {\n    return -1;\n  } else if (propertyName1 > propertyName2) {\n    return 1;\n  }\n  return 0;\n}\nfunction binarySearchOnPropertyArray(propertyTreeArray, propertyTree, compare_fn) {\n  const propertyName = propertyTree.propertyName.toLowerCase();\n  const firstPropertyInArrayName = propertyTreeArray[0].propertyName.toLowerCase();\n  const lastPropertyInArrayName = propertyTreeArray[propertyTreeArray.length - 1].propertyName.toLowerCase();\n  if (propertyName < firstPropertyInArrayName) {\n    return 0;\n  }\n  if (propertyName > lastPropertyInArrayName) {\n    return propertyTreeArray.length;\n  }\n  let m = 0;\n  let n = propertyTreeArray.length - 1;\n  while (m <= n) {\n    let k = n + m >> 1;\n    let cmp = compare_fn(propertyTree, propertyTreeArray[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/sort.js\nfunction sort(documentToSort, formattingOptions) {\n  const options = {\n    ...formattingOptions,\n    keepLines: false\n    // keepLines must be false so that the properties are on separate lines for the sorting\n  };\n  const formattedJsonString = TextDocument2.applyEdits(documentToSort, format4(documentToSort, options, void 0));\n  const formattedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, formattedJsonString);\n  const jsonPropertyTree = findJsoncPropertyTree(formattedJsonDocument);\n  const sortedJsonDocument = sortJsoncDocument(formattedJsonDocument, jsonPropertyTree);\n  const edits = format4(sortedJsonDocument, options, void 0);\n  const sortedAndFormattedJsonDocument = TextDocument2.applyEdits(sortedJsonDocument, edits);\n  return [TextEdit.replace(Range.create(Position.create(0, 0), documentToSort.positionAt(documentToSort.getText().length)), sortedAndFormattedJsonDocument)];\n}\nfunction findJsoncPropertyTree(formattedDocument) {\n  const formattedString = formattedDocument.getText();\n  const scanner = createScanner2(formattedString, false);\n  let rootTree = new PropertyTree();\n  let currentTree = rootTree;\n  let currentProperty = rootTree;\n  let lastProperty = rootTree;\n  let token = void 0;\n  let lastTokenLine = 0;\n  let numberOfCharactersOnPreviousLines = 0;\n  let lastNonTriviaNonCommentToken = void 0;\n  let secondToLastNonTriviaNonCommentToken = void 0;\n  let lineOfLastNonTriviaNonCommentToken = -1;\n  let endIndexOfLastNonTriviaNonCommentToken = -1;\n  let beginningLineNumber = 0;\n  let endLineNumber = 0;\n  let currentContainerStack = [];\n  let updateLastPropertyEndLineNumber = false;\n  let updateBeginningLineNumber = false;\n  while ((token = scanner.scan()) !== 17) {\n    if (updateLastPropertyEndLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13 && currentProperty.endLineNumber === void 0) {\n      let endLineNumber2 = scanner.getTokenStartLine();\n      if (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) {\n        lastProperty.endLineNumber = endLineNumber2 - 1;\n      } else {\n        currentProperty.endLineNumber = endLineNumber2 - 1;\n      }\n      beginningLineNumber = endLineNumber2;\n      updateLastPropertyEndLineNumber = false;\n    }\n    if (updateBeginningLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13) {\n      beginningLineNumber = scanner.getTokenStartLine();\n      updateBeginningLineNumber = false;\n    }\n    if (scanner.getTokenStartLine() !== lastTokenLine) {\n      for (let i = lastTokenLine; i < scanner.getTokenStartLine(); i++) {\n        const lengthOfLine = formattedDocument.getText(Range.create(Position.create(i, 0), Position.create(i + 1, 0))).length;\n        numberOfCharactersOnPreviousLines = numberOfCharactersOnPreviousLines + lengthOfLine;\n      }\n      lastTokenLine = scanner.getTokenStartLine();\n    }\n    switch (token) {\n      case 10: {\n        if (lastNonTriviaNonCommentToken === void 0 || lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 5 && currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        break;\n      }\n      case 3: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        }\n        if (currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          currentTree = currentProperty;\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n          currentTree = currentProperty;\n        }\n        currentContainerStack.push(Container.Array);\n        currentProperty.type = Container.Array;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 1: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        currentProperty.type = Container.Object;\n        currentContainerStack.push(Container.Object);\n        currentTree = currentProperty;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 4: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (currentProperty.endLineNumber === void 0 && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4)) {\n          currentProperty.endLineNumber = endLineNumber - 1;\n          currentProperty.lastProperty = true;\n          currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n          currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = endLineNumber;\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 2: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (lastNonTriviaNonCommentToken !== 1) {\n          if (currentProperty.endLineNumber === void 0) {\n            currentProperty.endLineNumber = endLineNumber - 1;\n            currentProperty.lastProperty = true;\n            currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n            currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          }\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 5: {\n        endLineNumber = scanner.getTokenStartLine();\n        if (currentProperty.endLineNumber === void 0 && (currentContainerStack[currentContainerStack.length - 1] === Container.Object || currentContainerStack[currentContainerStack.length - 1] === Container.Array && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4))) {\n          currentProperty.endLineNumber = endLineNumber;\n          currentProperty.commaIndex = scanner.getTokenOffset() - numberOfCharactersOnPreviousLines;\n          currentProperty.commaLine = endLineNumber;\n        }\n        if (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4) {\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 13: {\n        if (lastNonTriviaNonCommentToken === 5 && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine() && (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object)) {\n          if (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n            currentProperty.endLineNumber = void 0;\n            updateLastPropertyEndLineNumber = true;\n          }\n        }\n        if ((lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 3) && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine()) {\n          updateBeginningLineNumber = true;\n        }\n        break;\n      }\n    }\n    if (token !== 14 && token !== 13 && token !== 12 && token !== 15) {\n      secondToLastNonTriviaNonCommentToken = lastNonTriviaNonCommentToken;\n      lastNonTriviaNonCommentToken = token;\n      lineOfLastNonTriviaNonCommentToken = scanner.getTokenStartLine();\n      endIndexOfLastNonTriviaNonCommentToken = scanner.getTokenOffset() + scanner.getTokenLength() - numberOfCharactersOnPreviousLines;\n    }\n  }\n  return rootTree;\n}\nfunction sortJsoncDocument(jsonDocument, propertyTree) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return jsonDocument;\n  }\n  const sortedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonDocument.getText());\n  const queueToSort = [];\n  updateSortingQueue(queueToSort, propertyTree, propertyTree.beginningLineNumber);\n  while (queueToSort.length > 0) {\n    const dataToSort = queueToSort.shift();\n    const propertyTreeArray = dataToSort.propertyTreeArray;\n    let beginningLineNumber = dataToSort.beginningLineNumber;\n    for (let i = 0; i < propertyTreeArray.length; i++) {\n      const propertyTree2 = propertyTreeArray[i];\n      const range = Range.create(Position.create(propertyTree2.beginningLineNumber, 0), Position.create(propertyTree2.endLineNumber + 1, 0));\n      const jsonContentToReplace = jsonDocument.getText(range);\n      const jsonDocumentToReplace = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonContentToReplace);\n      if (propertyTree2.lastProperty === true && i !== propertyTreeArray.length - 1) {\n        const lineWhereToAddComma = propertyTree2.lineWhereToAddComma - propertyTree2.beginningLineNumber;\n        const indexWhereToAddComma = propertyTree2.indexWhereToAddComa;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToAddComma, indexWhereToAddComma), Position.create(lineWhereToAddComma, indexWhereToAddComma)),\n          text: \",\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      } else if (propertyTree2.lastProperty === false && i === propertyTreeArray.length - 1) {\n        const commaIndex = propertyTree2.commaIndex;\n        const commaLine = propertyTree2.commaLine;\n        const lineWhereToRemoveComma = commaLine - propertyTree2.beginningLineNumber;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToRemoveComma, commaIndex), Position.create(lineWhereToRemoveComma, commaIndex + 1)),\n          text: \"\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      }\n      const length = propertyTree2.endLineNumber - propertyTree2.beginningLineNumber + 1;\n      const edit = {\n        range: Range.create(Position.create(beginningLineNumber, 0), Position.create(beginningLineNumber + length, 0)),\n        text: jsonDocumentToReplace.getText()\n      };\n      TextDocument2.update(sortedJsonDocument, [edit], 1);\n      updateSortingQueue(queueToSort, propertyTree2, beginningLineNumber);\n      beginningLineNumber = beginningLineNumber + length;\n    }\n  }\n  return sortedJsonDocument;\n}\nfunction updateSortingQueue(queue, propertyTree, beginningLineNumber) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return;\n  }\n  if (propertyTree.type === Container.Object) {\n    let minimumBeginningLineNumber = Infinity;\n    for (const childProperty of propertyTree.childrenProperties) {\n      if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n        minimumBeginningLineNumber = childProperty.beginningLineNumber;\n      }\n    }\n    const diff = minimumBeginningLineNumber - propertyTree.beginningLineNumber;\n    beginningLineNumber = beginningLineNumber + diff;\n    queue.push(new SortingRange(beginningLineNumber, propertyTree.childrenProperties));\n  } else if (propertyTree.type === Container.Array) {\n    updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber);\n  }\n}\nfunction updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber) {\n  for (const subObject of propertyTree.childrenProperties) {\n    if (subObject.type === Container.Object) {\n      let minimumBeginningLineNumber = Infinity;\n      for (const childProperty of subObject.childrenProperties) {\n        if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n          minimumBeginningLineNumber = childProperty.beginningLineNumber;\n        }\n      }\n      const diff = minimumBeginningLineNumber - subObject.beginningLineNumber;\n      queue.push(new SortingRange(beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber + diff, subObject.childrenProperties));\n    }\n    if (subObject.type === Container.Array) {\n      updateSortingQueueForArrayProperties(queue, subObject, beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber);\n    }\n  }\n}\nvar SortingRange = class {\n  constructor(beginningLineNumber, propertyTreeArray) {\n    this.beginningLineNumber = beginningLineNumber;\n    this.propertyTreeArray = propertyTreeArray;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonLinks.js\nfunction findLinks(document, doc) {\n  const links = [];\n  doc.visit((node) => {\n    if (node.type === \"property\" && node.keyNode.value === \"$ref\" && node.valueNode?.type === \"string\") {\n      const path = node.valueNode.value;\n      const targetNode = findTargetNode(doc, path);\n      if (targetNode) {\n        const targetPos = document.positionAt(targetNode.offset);\n        links.push({\n          target: `${document.uri}#${targetPos.line + 1},${targetPos.character + 1}`,\n          range: createRange(document, node.valueNode)\n        });\n      }\n    }\n    return true;\n  });\n  return Promise.resolve(links);\n}\nfunction createRange(document, node) {\n  return Range.create(document.positionAt(node.offset + 1), document.positionAt(node.offset + node.length - 1));\n}\nfunction findTargetNode(doc, path) {\n  const tokens = parseJSONPointer(path);\n  if (!tokens) {\n    return null;\n  }\n  return findNode(tokens, doc.root);\n}\nfunction findNode(pointer, node) {\n  if (!node) {\n    return null;\n  }\n  if (pointer.length === 0) {\n    return node;\n  }\n  const token = pointer.shift();\n  if (node && node.type === \"object\") {\n    const propertyNode = node.properties.find((propertyNode2) => propertyNode2.keyNode.value === token);\n    if (!propertyNode) {\n      return null;\n    }\n    return findNode(pointer, propertyNode.valueNode);\n  } else if (node && node.type === \"array\") {\n    if (token.match(/^(0|[1-9][0-9]*)$/)) {\n      const index = Number.parseInt(token);\n      const arrayItem = node.items[index];\n      if (!arrayItem) {\n        return null;\n      }\n      return findNode(pointer, arrayItem);\n    }\n  }\n  return null;\n}\nfunction parseJSONPointer(path) {\n  if (path === \"#\") {\n    return [];\n  }\n  if (path[0] !== \"#\" || path[1] !== \"/\") {\n    return null;\n  }\n  return path.substring(2).split(/\\//).map(unescape);\n}\nfunction unescape(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js\nfunction getLanguageService(params) {\n  const promise = params.promiseConstructor || Promise;\n  const jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n  jsonSchemaService.setSchemaContributions(schemaContributions);\n  const jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n  const jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n  const jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n  const jsonValidation = new JSONValidation(jsonSchemaService, promise);\n  return {\n    configure: (settings) => {\n      jsonSchemaService.clearExternalSchemas();\n      settings.schemas?.forEach(jsonSchemaService.registerExternalSchema.bind(jsonSchemaService));\n      jsonValidation.configure(settings);\n    },\n    resetSchema: (uri) => jsonSchemaService.onResourceChange(uri),\n    doValidation: jsonValidation.doValidation.bind(jsonValidation),\n    getLanguageStatus: jsonValidation.getLanguageStatus.bind(jsonValidation),\n    parseJSONDocument: (document) => parse3(document, { collectComments: true }),\n    newJSONDocument: (root, diagnostics) => newJSONDocument(root, diagnostics),\n    getMatchingSchemas: jsonSchemaService.getMatchingSchemas.bind(jsonSchemaService),\n    doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n    doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n    findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n    findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n    findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n    getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n    doHover: jsonHover.doHover.bind(jsonHover),\n    getFoldingRanges,\n    getSelectionRanges,\n    findDefinition: () => Promise.resolve([]),\n    findLinks,\n    format: (document, range, options) => format4(document, options, range),\n    sort: (document, options) => sort(document, options)\n  };\n}\n\n// src/language/json/jsonWorker.ts\nvar defaultSchemaRequestService;\nif (typeof fetch !== \"undefined\") {\n  defaultSchemaRequestService = function(url) {\n    return fetch(url).then((response) => response.text());\n  };\n}\nvar JSONWorker = class {\n  constructor(ctx, createData) {\n    this._ctx = ctx;\n    this._languageSettings = createData.languageSettings;\n    this._languageId = createData.languageId;\n    this._languageService = getLanguageService({\n      workspaceContext: {\n        resolveRelativePath: (relativePath, resource) => {\n          const base = resource.substr(0, resource.lastIndexOf(\"/\") + 1);\n          return resolvePath(base, relativePath);\n        }\n      },\n      schemaRequestService: createData.enableSchemaRequest ? defaultSchemaRequestService : void 0,\n      clientCapabilities: ClientCapabilities.LATEST\n    });\n    this._languageService.configure(this._languageSettings);\n  }\n  async doValidation(uri) {\n    let document = this._getTextDocument(uri);\n    if (document) {\n      let jsonDocument = this._languageService.parseJSONDocument(document);\n      return this._languageService.doValidation(document, jsonDocument, this._languageSettings);\n    }\n    return Promise.resolve([]);\n  }\n  async doComplete(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doComplete(document, position, jsonDocument);\n  }\n  async doResolve(item) {\n    return this._languageService.doResolve(item);\n  }\n  async doHover(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doHover(document, position, jsonDocument);\n  }\n  async format(uri, range, options) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let textEdits = this._languageService.format(document, range, options);\n    return Promise.resolve(textEdits);\n  }\n  async resetSchema(uri) {\n    return Promise.resolve(this._languageService.resetSchema(uri));\n  }\n  async findDocumentSymbols(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let symbols = this._languageService.findDocumentSymbols2(document, jsonDocument);\n    return Promise.resolve(symbols);\n  }\n  async findDocumentColors(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorSymbols = this._languageService.findDocumentColors(document, jsonDocument);\n    return Promise.resolve(colorSymbols);\n  }\n  async getColorPresentations(uri, color, range) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorPresentations = this._languageService.getColorPresentations(\n      document,\n      jsonDocument,\n      color,\n      range\n    );\n    return Promise.resolve(colorPresentations);\n  }\n  async getFoldingRanges(uri, context) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let ranges = this._languageService.getFoldingRanges(document, context);\n    return Promise.resolve(ranges);\n  }\n  async getSelectionRanges(uri, positions) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let ranges = this._languageService.getSelectionRanges(document, positions, jsonDocument);\n    return Promise.resolve(ranges);\n  }\n  async parseJSONDocument(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(jsonDocument);\n  }\n  async getMatchingSchemas(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(this._languageService.getMatchingSchemas(document, jsonDocument));\n  }\n  _getTextDocument(uri) {\n    let models = this._ctx.getMirrorModels();\n    for (let model of models) {\n      if (model.uri.toString() === uri) {\n        return TextDocument2.create(\n          uri,\n          this._languageId,\n          model.version,\n          model.getValue()\n        );\n      }\n    }\n    return null;\n  }\n};\nvar Slash = \"/\".charCodeAt(0);\nvar Dot = \".\".charCodeAt(0);\nfunction isAbsolutePath(path) {\n  return path.charCodeAt(0) === Slash;\n}\nfunction resolvePath(uriString, path) {\n  if (isAbsolutePath(path)) {\n    const uri = URI2.parse(uriString);\n    const parts = path.split(\"/\");\n    return uri.with({ path: normalizePath(parts) }).toString();\n  }\n  return joinPath(uriString, path);\n}\nfunction normalizePath(parts) {\n  const newParts = [];\n  for (const part of parts) {\n    if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {\n    } else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\n      newParts.pop();\n    } else {\n      newParts.push(part);\n    }\n  }\n  if (parts.length > 1 && parts[parts.length - 1].length === 0) {\n    newParts.push(\"\");\n  }\n  let res = newParts.join(\"/\");\n  if (parts[0].length === 0) {\n    res = \"/\" + res;\n  }\n  return res;\n}\nfunction joinPath(uriString, ...paths) {\n  const uri = URI2.parse(uriString);\n  const parts = uri.path.split(\"/\");\n  for (let path of paths) {\n    parts.push(...path.split(\"/\"));\n  }\n  return uri.with({ path: normalizePath(parts) }).toString();\n}\n\n// src/language/json/json.worker.ts\nself.onmessage = () => {\n  worker.initialize((ctx, createData) => {\n    return new JSONWorker(ctx, createData);\n  });\n};\n"],"mappings":"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,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;EAClDA,eAAe,CAACA,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;EAClDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EACjDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG;EAChDA,eAAe,CAACA,eAAe,CAAC,GAAG,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}