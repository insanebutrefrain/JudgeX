{"ast":null,"code":"var _LightBulbWidget;\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar LightBulbWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Gesture } from '../../../../base/browser/touch.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './lightBulbWidget.css';\nimport { GlyphMarginLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { computeIndentLevel } from '../../../common/model/utils.js';\nimport { autoFixCommandId, quickFixCommandId } from './codeAction.js';\nimport * as nls from '../../../../nls.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Range } from '../../../common/core/range.js';\nconst GUTTER_LIGHTBULB_ICON = registerIcon('gutter-lightbulb', Codicon.lightBulb, nls.localize('gutterLightbulbWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor.'));\nconst GUTTER_LIGHTBULB_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-auto-fix', Codicon.lightbulbAutofix, nls.localize('gutterLightbulbAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and a quick fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_ICON = registerIcon('gutter-lightbulb-sparkle', Codicon.lightbulbSparkle, nls.localize('gutterLightbulbAIFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-aifix-auto-fix', Codicon.lightbulbSparkleAutofix, nls.localize('gutterLightbulbAIFixAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\nconst GUTTER_SPARKLE_FILLED_ICON = registerIcon('gutter-lightbulb-sparkle-filled', Codicon.sparkleFilled, nls.localize('gutterLightbulbSparkleFilledWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\nvar LightBulbState;\n(function (LightBulbState) {\n  LightBulbState.Hidden = {\n    type: 0 /* Type.Hidden */\n  };\n  class Showing {\n    constructor(actions, trigger, editorPosition, widgetPosition) {\n      this.actions = actions;\n      this.trigger = trigger;\n      this.editorPosition = editorPosition;\n      this.widgetPosition = widgetPosition;\n      this.type = 1 /* Type.Showing */;\n    }\n  }\n  LightBulbState.Showing = Showing;\n})(LightBulbState || (LightBulbState = {}));\nlet LightBulbWidget = (_LightBulbWidget = class LightBulbWidget extends Disposable {\n  constructor(_editor, _keybindingService) {\n    super();\n    this._editor = _editor;\n    this._keybindingService = _keybindingService;\n    this._onClick = this._register(new Emitter());\n    this.onClick = this._onClick.event;\n    this._state = LightBulbState.Hidden;\n    this._gutterState = LightBulbState.Hidden;\n    this._iconClasses = [];\n    this.lightbulbClasses = ['codicon-' + GUTTER_LIGHTBULB_ICON.id, 'codicon-' + GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON.id, 'codicon-' + GUTTER_LIGHTBULB_AUTO_FIX_ICON.id, 'codicon-' + GUTTER_LIGHTBULB_AIFIX_ICON.id, 'codicon-' + GUTTER_SPARKLE_FILLED_ICON.id];\n    this.gutterDecoration = LightBulbWidget_1.GUTTER_DECORATION;\n    this._domNode = dom.$('div.lightBulbWidget');\n    this._domNode.role = 'listbox';\n    this._register(Gesture.ignoreTarget(this._domNode));\n    this._editor.addContentWidget(this);\n    this._register(this._editor.onDidChangeModelContent(_ => {\n      // cancel when the line in question has been removed\n      const editorModel = this._editor.getModel();\n      if (this.state.type !== 1 /* LightBulbState.Type.Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\n        this.hide();\n      }\n      if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */ || !editorModel || this.gutterState.editorPosition.lineNumber >= editorModel.getLineCount()) {\n        this.gutterHide();\n      }\n    }));\n    this._register(dom.addStandardDisposableGenericMouseDownListener(this._domNode, e => {\n      if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n        return;\n      }\n      // Make sure that focus / cursor location is not lost when clicking widget icon\n      this._editor.focus();\n      e.preventDefault();\n      // a bit of extra work to make sure the menu\n      // doesn't cover the line-text\n      const {\n        top,\n        height\n      } = dom.getDomNodePagePosition(this._domNode);\n      const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n      let pad = Math.floor(lineHeight / 3);\n      if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\n        pad += lineHeight;\n      }\n      this._onClick.fire({\n        x: e.posx,\n        y: top + height + pad,\n        actions: this.state.actions,\n        trigger: this.state.trigger\n      });\n    }));\n    this._register(dom.addDisposableListener(this._domNode, 'mouseenter', e => {\n      if ((e.buttons & 1) !== 1) {\n        return;\n      }\n      // mouse enters lightbulb while the primary/left button\n      // is being pressed -> hide the lightbulb\n      this.hide();\n    }));\n    this._register(Event.runAndSubscribe(this._keybindingService.onDidUpdateKeybindings, () => {\n      this._preferredKbLabel = this._keybindingService.lookupKeybinding(autoFixCommandId)?.getLabel() ?? undefined;\n      this._quickFixKbLabel = this._keybindingService.lookupKeybinding(quickFixCommandId)?.getLabel() ?? undefined;\n      this._updateLightBulbTitleAndIcon();\n    }));\n    this._register(this._editor.onMouseDown(async e => {\n      if (!e.target.element || !this.lightbulbClasses.some(cls => e.target.element && e.target.element.classList.contains(cls))) {\n        return;\n      }\n      if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */) {\n        return;\n      }\n      // Make sure that focus / cursor location is not lost when clicking widget icon\n      this._editor.focus();\n      // a bit of extra work to make sure the menu\n      // doesn't cover the line-text\n      const {\n        top,\n        height\n      } = dom.getDomNodePagePosition(e.target.element);\n      const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n      let pad = Math.floor(lineHeight / 3);\n      if (this.gutterState.widgetPosition.position !== null && this.gutterState.widgetPosition.position.lineNumber < this.gutterState.editorPosition.lineNumber) {\n        pad += lineHeight;\n      }\n      this._onClick.fire({\n        x: e.event.posx,\n        y: top + height + pad,\n        actions: this.gutterState.actions,\n        trigger: this.gutterState.trigger\n      });\n    }));\n  }\n  dispose() {\n    super.dispose();\n    this._editor.removeContentWidget(this);\n    if (this._gutterDecorationID) {\n      this._removeGutterDecoration(this._gutterDecorationID);\n    }\n  }\n  getId() {\n    return 'LightBulbWidget';\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  getPosition() {\n    return this._state.type === 1 /* LightBulbState.Type.Showing */ ? this._state.widgetPosition : null;\n  }\n  update(actions, trigger, atPosition) {\n    if (actions.validActions.length <= 0) {\n      this.gutterHide();\n      return this.hide();\n    }\n    const hasTextFocus = this._editor.hasTextFocus();\n    if (!hasTextFocus) {\n      this.gutterHide();\n      return this.hide();\n    }\n    const options = this._editor.getOptions();\n    if (!options.get(65 /* EditorOption.lightbulb */).enabled) {\n      this.gutterHide();\n      return this.hide();\n    }\n    const model = this._editor.getModel();\n    if (!model) {\n      this.gutterHide();\n      return this.hide();\n    }\n    const {\n      lineNumber,\n      column\n    } = model.validatePosition(atPosition);\n    const tabSize = model.getOptions().tabSize;\n    const fontInfo = this._editor.getOptions().get(50 /* EditorOption.fontInfo */);\n    const lineContent = model.getLineContent(lineNumber);\n    const indent = computeIndentLevel(lineContent, tabSize);\n    const lineHasSpace = fontInfo.spaceWidth * indent > 22;\n    const isFolded = lineNumber => {\n      return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\n    };\n    // Check for glyph margin decorations of any kind\n    const currLineDecorations = this._editor.getLineDecorations(lineNumber);\n    let hasDecoration = false;\n    if (currLineDecorations) {\n      for (const decoration of currLineDecorations) {\n        const glyphClass = decoration.options.glyphMarginClassName;\n        if (glyphClass && !this.lightbulbClasses.some(className => glyphClass.includes(className))) {\n          hasDecoration = true;\n          break;\n        }\n      }\n    }\n    let effectiveLineNumber = lineNumber;\n    let effectiveColumnNumber = 1;\n    if (!lineHasSpace) {\n      // Checks if line is empty or starts with any amount of whitespace\n      const isLineEmptyOrIndented = lineNumber => {\n        const lineContent = model.getLineContent(lineNumber);\n        return /^\\s*$|^\\s+/.test(lineContent) || lineContent.length <= effectiveColumnNumber;\n      };\n      if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n        const lineCount = model.getLineCount();\n        const endLine = lineNumber === lineCount;\n        const prevLineEmptyOrIndented = lineNumber > 1 && isLineEmptyOrIndented(lineNumber - 1);\n        const nextLineEmptyOrIndented = !endLine && isLineEmptyOrIndented(lineNumber + 1);\n        const currLineEmptyOrIndented = isLineEmptyOrIndented(lineNumber);\n        const notEmpty = !nextLineEmptyOrIndented && !prevLineEmptyOrIndented;\n        // check above and below. if both are blocked, display lightbulb in the gutter.\n        if (!nextLineEmptyOrIndented && !prevLineEmptyOrIndented && !hasDecoration) {\n          this.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n            position: {\n              lineNumber: effectiveLineNumber,\n              column: effectiveColumnNumber\n            },\n            preference: LightBulbWidget_1._posPref\n          });\n          this.renderGutterLightbub();\n          return this.hide();\n        } else if (prevLineEmptyOrIndented || endLine || prevLineEmptyOrIndented && !currLineEmptyOrIndented) {\n          effectiveLineNumber -= 1;\n        } else if (nextLineEmptyOrIndented || notEmpty && currLineEmptyOrIndented) {\n          effectiveLineNumber += 1;\n        }\n      } else if (lineNumber === 1 && (lineNumber === model.getLineCount() || !isLineEmptyOrIndented(lineNumber + 1) && !isLineEmptyOrIndented(lineNumber))) {\n        // special checks for first line blocked vs. not blocked.\n        this.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n          position: {\n            lineNumber: effectiveLineNumber,\n            column: effectiveColumnNumber\n          },\n          preference: LightBulbWidget_1._posPref\n        });\n        if (hasDecoration) {\n          this.gutterHide();\n        } else {\n          this.renderGutterLightbub();\n          return this.hide();\n        }\n      } else if (lineNumber < model.getLineCount() && !isFolded(lineNumber + 1)) {\n        effectiveLineNumber += 1;\n      } else if (column * fontInfo.spaceWidth < 22) {\n        // cannot show lightbulb above/below and showing\n        // it inline would overlay the cursor...\n        return this.hide();\n      }\n      effectiveColumnNumber = /^\\S\\s*$/.test(model.getLineContent(effectiveLineNumber)) ? 2 : 1;\n    }\n    this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\n      position: {\n        lineNumber: effectiveLineNumber,\n        column: effectiveColumnNumber\n      },\n      preference: LightBulbWidget_1._posPref\n    });\n    if (this._gutterDecorationID) {\n      this._removeGutterDecoration(this._gutterDecorationID);\n      this.gutterHide();\n    }\n    const validActions = actions.validActions;\n    const actionKind = actions.validActions[0].action.kind;\n    if (validActions.length !== 1 || !actionKind) {\n      this._editor.layoutContentWidget(this);\n      return;\n    }\n    this._editor.layoutContentWidget(this);\n  }\n  hide() {\n    if (this.state === LightBulbState.Hidden) {\n      return;\n    }\n    this.state = LightBulbState.Hidden;\n    this._editor.layoutContentWidget(this);\n  }\n  gutterHide() {\n    if (this.gutterState === LightBulbState.Hidden) {\n      return;\n    }\n    if (this._gutterDecorationID) {\n      this._removeGutterDecoration(this._gutterDecorationID);\n    }\n    this.gutterState = LightBulbState.Hidden;\n  }\n  get state() {\n    return this._state;\n  }\n  set state(value) {\n    this._state = value;\n    this._updateLightBulbTitleAndIcon();\n  }\n  get gutterState() {\n    return this._gutterState;\n  }\n  set gutterState(value) {\n    this._gutterState = value;\n    this._updateGutterLightBulbTitleAndIcon();\n  }\n  _updateLightBulbTitleAndIcon() {\n    this._domNode.classList.remove(...this._iconClasses);\n    this._iconClasses = [];\n    if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n      return;\n    }\n    let icon;\n    let autoRun = false;\n    if (this.state.actions.allAIFixes) {\n      icon = Codicon.sparkleFilled;\n      if (this.state.actions.validActions.length === 1) {\n        autoRun = true;\n      }\n    } else if (this.state.actions.hasAutoFix) {\n      if (this.state.actions.hasAIFix) {\n        icon = Codicon.lightbulbSparkleAutofix;\n      } else {\n        icon = Codicon.lightbulbAutofix;\n      }\n    } else if (this.state.actions.hasAIFix) {\n      icon = Codicon.lightbulbSparkle;\n    } else {\n      icon = Codicon.lightBulb;\n    }\n    this._updateLightbulbTitle(this.state.actions.hasAutoFix, autoRun);\n    this._iconClasses = ThemeIcon.asClassNameArray(icon);\n    this._domNode.classList.add(...this._iconClasses);\n  }\n  _updateGutterLightBulbTitleAndIcon() {\n    if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */) {\n      return;\n    }\n    let icon;\n    let autoRun = false;\n    if (this.gutterState.actions.allAIFixes) {\n      icon = GUTTER_SPARKLE_FILLED_ICON;\n      if (this.gutterState.actions.validActions.length === 1) {\n        autoRun = true;\n      }\n    } else if (this.gutterState.actions.hasAutoFix) {\n      if (this.gutterState.actions.hasAIFix) {\n        icon = GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON;\n      } else {\n        icon = GUTTER_LIGHTBULB_AUTO_FIX_ICON;\n      }\n    } else if (this.gutterState.actions.hasAIFix) {\n      icon = GUTTER_LIGHTBULB_AIFIX_ICON;\n    } else {\n      icon = GUTTER_LIGHTBULB_ICON;\n    }\n    this._updateLightbulbTitle(this.gutterState.actions.hasAutoFix, autoRun);\n    const GUTTER_DECORATION = ModelDecorationOptions.register({\n      description: 'codicon-gutter-lightbulb-decoration',\n      glyphMarginClassName: ThemeIcon.asClassName(icon),\n      glyphMargin: {\n        position: GlyphMarginLane.Left\n      },\n      stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n    });\n    this.gutterDecoration = GUTTER_DECORATION;\n  }\n  /* Gutter Helper Functions */\n  renderGutterLightbub() {\n    const selection = this._editor.getSelection();\n    if (!selection) {\n      return;\n    }\n    if (this._gutterDecorationID === undefined) {\n      this._addGutterDecoration(selection.startLineNumber);\n    } else {\n      this._updateGutterDecoration(this._gutterDecorationID, selection.startLineNumber);\n    }\n  }\n  _addGutterDecoration(lineNumber) {\n    this._editor.changeDecorations(accessor => {\n      this._gutterDecorationID = accessor.addDecoration(new Range(lineNumber, 0, lineNumber, 0), this.gutterDecoration);\n    });\n  }\n  _removeGutterDecoration(decorationId) {\n    this._editor.changeDecorations(accessor => {\n      accessor.removeDecoration(decorationId);\n      this._gutterDecorationID = undefined;\n    });\n  }\n  _updateGutterDecoration(decorationId, lineNumber) {\n    this._editor.changeDecorations(accessor => {\n      accessor.changeDecoration(decorationId, new Range(lineNumber, 0, lineNumber, 0));\n      accessor.changeDecorationOptions(decorationId, this.gutterDecoration);\n    });\n  }\n  _updateLightbulbTitle(autoFix, autoRun) {\n    if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n      return;\n    }\n    if (autoRun) {\n      this.title = nls.localize('codeActionAutoRun', \"Run: {0}\", this.state.actions.validActions[0].action.title);\n    } else if (autoFix && this._preferredKbLabel) {\n      this.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", this._preferredKbLabel);\n    } else if (!autoFix && this._quickFixKbLabel) {\n      this.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", this._quickFixKbLabel);\n    } else if (!autoFix) {\n      this.title = nls.localize('codeAction', \"Show Code Actions\");\n    }\n  }\n  set title(value) {\n    this._domNode.title = value;\n  }\n}, LightBulbWidget_1 = _LightBulbWidget, _LightBulbWidget.GUTTER_DECORATION = ModelDecorationOptions.register({\n  description: 'codicon-gutter-lightbulb-decoration',\n  glyphMarginClassName: ThemeIcon.asClassName(Codicon.lightBulb),\n  glyphMargin: {\n    position: GlyphMarginLane.Left\n  },\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n}), _LightBulbWidget.ID = 'editor.contrib.lightbulbWidget', _LightBulbWidget._posPref = [0 /* ContentWidgetPositionPreference.EXACT */], _LightBulbWidget);\nLightBulbWidget = LightBulbWidget_1 = __decorate([__param(1, IKeybindingService)], LightBulbWidget);\nexport { LightBulbWidget };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","LightBulbWidget_1","dom","Gesture","Codicon","Emitter","Event","Disposable","ThemeIcon","GlyphMarginLane","ModelDecorationOptions","computeIndentLevel","autoFixCommandId","quickFixCommandId","nls","IKeybindingService","registerIcon","Range","GUTTER_LIGHTBULB_ICON","lightBulb","localize","GUTTER_LIGHTBULB_AUTO_FIX_ICON","lightbulbAutofix","GUTTER_LIGHTBULB_AIFIX_ICON","lightbulbSparkle","GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON","lightbulbSparkleAutofix","GUTTER_SPARKLE_FILLED_ICON","sparkleFilled","LightBulbState","Hidden","type","Showing","constructor","actions","trigger","editorPosition","widgetPosition","LightBulbWidget","_LightBulbWidget","_editor","_keybindingService","_onClick","_register","onClick","event","_state","_gutterState","_iconClasses","lightbulbClasses","id","gutterDecoration","GUTTER_DECORATION","_domNode","$","role","ignoreTarget","addContentWidget","onDidChangeModelContent","_","editorModel","getModel","state","lineNumber","getLineCount","hide","gutterState","gutterHide","addStandardDisposableGenericMouseDownListener","e","focus","preventDefault","top","height","getDomNodePagePosition","lineHeight","getOption","pad","Math","floor","position","fire","x","posx","y","addDisposableListener","buttons","runAndSubscribe","onDidUpdateKeybindings","_preferredKbLabel","lookupKeybinding","getLabel","undefined","_quickFixKbLabel","_updateLightBulbTitleAndIcon","onMouseDown","element","some","cls","classList","contains","dispose","removeContentWidget","_gutterDecorationID","_removeGutterDecoration","getId","getDomNode","getPosition","update","atPosition","validActions","hasTextFocus","options","getOptions","get","enabled","model","column","validatePosition","tabSize","fontInfo","lineContent","getLineContent","indent","lineHasSpace","spaceWidth","isFolded","getTopForLineNumber","currLineDecorations","getLineDecorations","hasDecoration","decoration","glyphClass","glyphMarginClassName","className","includes","effectiveLineNumber","effectiveColumnNumber","isLineEmptyOrIndented","test","lineCount","endLine","prevLineEmptyOrIndented","nextLineEmptyOrIndented","currLineEmptyOrIndented","notEmpty","preference","_posPref","renderGutterLightbub","actionKind","action","kind","layoutContentWidget","value","_updateGutterLightBulbTitleAndIcon","remove","icon","autoRun","allAIFixes","hasAutoFix","hasAIFix","_updateLightbulbTitle","asClassNameArray","add","register","description","asClassName","glyphMargin","Left","stickiness","selection","getSelection","_addGutterDecoration","startLineNumber","_updateGutterDecoration","changeDecorations","accessor","addDecoration","decorationId","removeDecoration","changeDecoration","changeDecorationOptions","autoFix","title","ID"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/lightBulbWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar LightBulbWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Gesture } from '../../../../base/browser/touch.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './lightBulbWidget.css';\nimport { GlyphMarginLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { computeIndentLevel } from '../../../common/model/utils.js';\nimport { autoFixCommandId, quickFixCommandId } from './codeAction.js';\nimport * as nls from '../../../../nls.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Range } from '../../../common/core/range.js';\nconst GUTTER_LIGHTBULB_ICON = registerIcon('gutter-lightbulb', Codicon.lightBulb, nls.localize('gutterLightbulbWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor.'));\nconst GUTTER_LIGHTBULB_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-auto-fix', Codicon.lightbulbAutofix, nls.localize('gutterLightbulbAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and a quick fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_ICON = registerIcon('gutter-lightbulb-sparkle', Codicon.lightbulbSparkle, nls.localize('gutterLightbulbAIFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix is available.'));\nconst GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON = registerIcon('gutter-lightbulb-aifix-auto-fix', Codicon.lightbulbSparkleAutofix, nls.localize('gutterLightbulbAIFixAutoFixWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\nconst GUTTER_SPARKLE_FILLED_ICON = registerIcon('gutter-lightbulb-sparkle-filled', Codicon.sparkleFilled, nls.localize('gutterLightbulbSparkleFilledWidget', 'Icon which spawns code actions menu from the gutter when there is no space in the editor and an AI fix and a quick fix is available.'));\nvar LightBulbState;\n(function (LightBulbState) {\n    LightBulbState.Hidden = { type: 0 /* Type.Hidden */ };\n    class Showing {\n        constructor(actions, trigger, editorPosition, widgetPosition) {\n            this.actions = actions;\n            this.trigger = trigger;\n            this.editorPosition = editorPosition;\n            this.widgetPosition = widgetPosition;\n            this.type = 1 /* Type.Showing */;\n        }\n    }\n    LightBulbState.Showing = Showing;\n})(LightBulbState || (LightBulbState = {}));\nlet LightBulbWidget = class LightBulbWidget extends Disposable {\n    static { LightBulbWidget_1 = this; }\n    static { this.GUTTER_DECORATION = ModelDecorationOptions.register({\n        description: 'codicon-gutter-lightbulb-decoration',\n        glyphMarginClassName: ThemeIcon.asClassName(Codicon.lightBulb),\n        glyphMargin: { position: GlyphMarginLane.Left },\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    }); }\n    static { this.ID = 'editor.contrib.lightbulbWidget'; }\n    static { this._posPref = [0 /* ContentWidgetPositionPreference.EXACT */]; }\n    constructor(_editor, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._keybindingService = _keybindingService;\n        this._onClick = this._register(new Emitter());\n        this.onClick = this._onClick.event;\n        this._state = LightBulbState.Hidden;\n        this._gutterState = LightBulbState.Hidden;\n        this._iconClasses = [];\n        this.lightbulbClasses = [\n            'codicon-' + GUTTER_LIGHTBULB_ICON.id,\n            'codicon-' + GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON.id,\n            'codicon-' + GUTTER_LIGHTBULB_AUTO_FIX_ICON.id,\n            'codicon-' + GUTTER_LIGHTBULB_AIFIX_ICON.id,\n            'codicon-' + GUTTER_SPARKLE_FILLED_ICON.id\n        ];\n        this.gutterDecoration = LightBulbWidget_1.GUTTER_DECORATION;\n        this._domNode = dom.$('div.lightBulbWidget');\n        this._domNode.role = 'listbox';\n        this._register(Gesture.ignoreTarget(this._domNode));\n        this._editor.addContentWidget(this);\n        this._register(this._editor.onDidChangeModelContent(_ => {\n            // cancel when the line in question has been removed\n            const editorModel = this._editor.getModel();\n            if (this.state.type !== 1 /* LightBulbState.Type.Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\n                this.hide();\n            }\n            if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */ || !editorModel || this.gutterState.editorPosition.lineNumber >= editorModel.getLineCount()) {\n                this.gutterHide();\n            }\n        }));\n        this._register(dom.addStandardDisposableGenericMouseDownListener(this._domNode, e => {\n            if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n                return;\n            }\n            // Make sure that focus / cursor location is not lost when clicking widget icon\n            this._editor.focus();\n            e.preventDefault();\n            // a bit of extra work to make sure the menu\n            // doesn't cover the line-text\n            const { top, height } = dom.getDomNodePagePosition(this._domNode);\n            const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            let pad = Math.floor(lineHeight / 3);\n            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\n                pad += lineHeight;\n            }\n            this._onClick.fire({\n                x: e.posx,\n                y: top + height + pad,\n                actions: this.state.actions,\n                trigger: this.state.trigger,\n            });\n        }));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e) => {\n            if ((e.buttons & 1) !== 1) {\n                return;\n            }\n            // mouse enters lightbulb while the primary/left button\n            // is being pressed -> hide the lightbulb\n            this.hide();\n        }));\n        this._register(Event.runAndSubscribe(this._keybindingService.onDidUpdateKeybindings, () => {\n            this._preferredKbLabel = this._keybindingService.lookupKeybinding(autoFixCommandId)?.getLabel() ?? undefined;\n            this._quickFixKbLabel = this._keybindingService.lookupKeybinding(quickFixCommandId)?.getLabel() ?? undefined;\n            this._updateLightBulbTitleAndIcon();\n        }));\n        this._register(this._editor.onMouseDown(async (e) => {\n            if (!e.target.element || !this.lightbulbClasses.some(cls => e.target.element && e.target.element.classList.contains(cls))) {\n                return;\n            }\n            if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */) {\n                return;\n            }\n            // Make sure that focus / cursor location is not lost when clicking widget icon\n            this._editor.focus();\n            // a bit of extra work to make sure the menu\n            // doesn't cover the line-text\n            const { top, height } = dom.getDomNodePagePosition(e.target.element);\n            const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            let pad = Math.floor(lineHeight / 3);\n            if (this.gutterState.widgetPosition.position !== null && this.gutterState.widgetPosition.position.lineNumber < this.gutterState.editorPosition.lineNumber) {\n                pad += lineHeight;\n            }\n            this._onClick.fire({\n                x: e.event.posx,\n                y: top + height + pad,\n                actions: this.gutterState.actions,\n                trigger: this.gutterState.trigger,\n            });\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this._editor.removeContentWidget(this);\n        if (this._gutterDecorationID) {\n            this._removeGutterDecoration(this._gutterDecorationID);\n        }\n    }\n    getId() {\n        return 'LightBulbWidget';\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._state.type === 1 /* LightBulbState.Type.Showing */ ? this._state.widgetPosition : null;\n    }\n    update(actions, trigger, atPosition) {\n        if (actions.validActions.length <= 0) {\n            this.gutterHide();\n            return this.hide();\n        }\n        const hasTextFocus = this._editor.hasTextFocus();\n        if (!hasTextFocus) {\n            this.gutterHide();\n            return this.hide();\n        }\n        const options = this._editor.getOptions();\n        if (!options.get(65 /* EditorOption.lightbulb */).enabled) {\n            this.gutterHide();\n            return this.hide();\n        }\n        const model = this._editor.getModel();\n        if (!model) {\n            this.gutterHide();\n            return this.hide();\n        }\n        const { lineNumber, column } = model.validatePosition(atPosition);\n        const tabSize = model.getOptions().tabSize;\n        const fontInfo = this._editor.getOptions().get(50 /* EditorOption.fontInfo */);\n        const lineContent = model.getLineContent(lineNumber);\n        const indent = computeIndentLevel(lineContent, tabSize);\n        const lineHasSpace = fontInfo.spaceWidth * indent > 22;\n        const isFolded = (lineNumber) => {\n            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\n        };\n        // Check for glyph margin decorations of any kind\n        const currLineDecorations = this._editor.getLineDecorations(lineNumber);\n        let hasDecoration = false;\n        if (currLineDecorations) {\n            for (const decoration of currLineDecorations) {\n                const glyphClass = decoration.options.glyphMarginClassName;\n                if (glyphClass && !this.lightbulbClasses.some(className => glyphClass.includes(className))) {\n                    hasDecoration = true;\n                    break;\n                }\n            }\n        }\n        let effectiveLineNumber = lineNumber;\n        let effectiveColumnNumber = 1;\n        if (!lineHasSpace) {\n            // Checks if line is empty or starts with any amount of whitespace\n            const isLineEmptyOrIndented = (lineNumber) => {\n                const lineContent = model.getLineContent(lineNumber);\n                return /^\\s*$|^\\s+/.test(lineContent) || lineContent.length <= effectiveColumnNumber;\n            };\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n                const lineCount = model.getLineCount();\n                const endLine = lineNumber === lineCount;\n                const prevLineEmptyOrIndented = lineNumber > 1 && isLineEmptyOrIndented(lineNumber - 1);\n                const nextLineEmptyOrIndented = !endLine && isLineEmptyOrIndented(lineNumber + 1);\n                const currLineEmptyOrIndented = isLineEmptyOrIndented(lineNumber);\n                const notEmpty = !nextLineEmptyOrIndented && !prevLineEmptyOrIndented;\n                // check above and below. if both are blocked, display lightbulb in the gutter.\n                if (!nextLineEmptyOrIndented && !prevLineEmptyOrIndented && !hasDecoration) {\n                    this.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n                        position: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n                        preference: LightBulbWidget_1._posPref\n                    });\n                    this.renderGutterLightbub();\n                    return this.hide();\n                }\n                else if (prevLineEmptyOrIndented || endLine || (prevLineEmptyOrIndented && !currLineEmptyOrIndented)) {\n                    effectiveLineNumber -= 1;\n                }\n                else if (nextLineEmptyOrIndented || (notEmpty && currLineEmptyOrIndented)) {\n                    effectiveLineNumber += 1;\n                }\n            }\n            else if (lineNumber === 1 && (lineNumber === model.getLineCount() || !isLineEmptyOrIndented(lineNumber + 1) && !isLineEmptyOrIndented(lineNumber))) {\n                // special checks for first line blocked vs. not blocked.\n                this.gutterState = new LightBulbState.Showing(actions, trigger, atPosition, {\n                    position: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n                    preference: LightBulbWidget_1._posPref\n                });\n                if (hasDecoration) {\n                    this.gutterHide();\n                }\n                else {\n                    this.renderGutterLightbub();\n                    return this.hide();\n                }\n            }\n            else if ((lineNumber < model.getLineCount()) && !isFolded(lineNumber + 1)) {\n                effectiveLineNumber += 1;\n            }\n            else if (column * fontInfo.spaceWidth < 22) {\n                // cannot show lightbulb above/below and showing\n                // it inline would overlay the cursor...\n                return this.hide();\n            }\n            effectiveColumnNumber = /^\\S\\s*$/.test(model.getLineContent(effectiveLineNumber)) ? 2 : 1;\n        }\n        this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\n            position: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n            preference: LightBulbWidget_1._posPref\n        });\n        if (this._gutterDecorationID) {\n            this._removeGutterDecoration(this._gutterDecorationID);\n            this.gutterHide();\n        }\n        const validActions = actions.validActions;\n        const actionKind = actions.validActions[0].action.kind;\n        if (validActions.length !== 1 || !actionKind) {\n            this._editor.layoutContentWidget(this);\n            return;\n        }\n        this._editor.layoutContentWidget(this);\n    }\n    hide() {\n        if (this.state === LightBulbState.Hidden) {\n            return;\n        }\n        this.state = LightBulbState.Hidden;\n        this._editor.layoutContentWidget(this);\n    }\n    gutterHide() {\n        if (this.gutterState === LightBulbState.Hidden) {\n            return;\n        }\n        if (this._gutterDecorationID) {\n            this._removeGutterDecoration(this._gutterDecorationID);\n        }\n        this.gutterState = LightBulbState.Hidden;\n    }\n    get state() { return this._state; }\n    set state(value) {\n        this._state = value;\n        this._updateLightBulbTitleAndIcon();\n    }\n    get gutterState() { return this._gutterState; }\n    set gutterState(value) {\n        this._gutterState = value;\n        this._updateGutterLightBulbTitleAndIcon();\n    }\n    _updateLightBulbTitleAndIcon() {\n        this._domNode.classList.remove(...this._iconClasses);\n        this._iconClasses = [];\n        if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n            return;\n        }\n        let icon;\n        let autoRun = false;\n        if (this.state.actions.allAIFixes) {\n            icon = Codicon.sparkleFilled;\n            if (this.state.actions.validActions.length === 1) {\n                autoRun = true;\n            }\n        }\n        else if (this.state.actions.hasAutoFix) {\n            if (this.state.actions.hasAIFix) {\n                icon = Codicon.lightbulbSparkleAutofix;\n            }\n            else {\n                icon = Codicon.lightbulbAutofix;\n            }\n        }\n        else if (this.state.actions.hasAIFix) {\n            icon = Codicon.lightbulbSparkle;\n        }\n        else {\n            icon = Codicon.lightBulb;\n        }\n        this._updateLightbulbTitle(this.state.actions.hasAutoFix, autoRun);\n        this._iconClasses = ThemeIcon.asClassNameArray(icon);\n        this._domNode.classList.add(...this._iconClasses);\n    }\n    _updateGutterLightBulbTitleAndIcon() {\n        if (this.gutterState.type !== 1 /* LightBulbState.Type.Showing */) {\n            return;\n        }\n        let icon;\n        let autoRun = false;\n        if (this.gutterState.actions.allAIFixes) {\n            icon = GUTTER_SPARKLE_FILLED_ICON;\n            if (this.gutterState.actions.validActions.length === 1) {\n                autoRun = true;\n            }\n        }\n        else if (this.gutterState.actions.hasAutoFix) {\n            if (this.gutterState.actions.hasAIFix) {\n                icon = GUTTER_LIGHTBULB_AIFIX_AUTO_FIX_ICON;\n            }\n            else {\n                icon = GUTTER_LIGHTBULB_AUTO_FIX_ICON;\n            }\n        }\n        else if (this.gutterState.actions.hasAIFix) {\n            icon = GUTTER_LIGHTBULB_AIFIX_ICON;\n        }\n        else {\n            icon = GUTTER_LIGHTBULB_ICON;\n        }\n        this._updateLightbulbTitle(this.gutterState.actions.hasAutoFix, autoRun);\n        const GUTTER_DECORATION = ModelDecorationOptions.register({\n            description: 'codicon-gutter-lightbulb-decoration',\n            glyphMarginClassName: ThemeIcon.asClassName(icon),\n            glyphMargin: { position: GlyphMarginLane.Left },\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        });\n        this.gutterDecoration = GUTTER_DECORATION;\n    }\n    /* Gutter Helper Functions */\n    renderGutterLightbub() {\n        const selection = this._editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        if (this._gutterDecorationID === undefined) {\n            this._addGutterDecoration(selection.startLineNumber);\n        }\n        else {\n            this._updateGutterDecoration(this._gutterDecorationID, selection.startLineNumber);\n        }\n    }\n    _addGutterDecoration(lineNumber) {\n        this._editor.changeDecorations((accessor) => {\n            this._gutterDecorationID = accessor.addDecoration(new Range(lineNumber, 0, lineNumber, 0), this.gutterDecoration);\n        });\n    }\n    _removeGutterDecoration(decorationId) {\n        this._editor.changeDecorations((accessor) => {\n            accessor.removeDecoration(decorationId);\n            this._gutterDecorationID = undefined;\n        });\n    }\n    _updateGutterDecoration(decorationId, lineNumber) {\n        this._editor.changeDecorations((accessor) => {\n            accessor.changeDecoration(decorationId, new Range(lineNumber, 0, lineNumber, 0));\n            accessor.changeDecorationOptions(decorationId, this.gutterDecoration);\n        });\n    }\n    _updateLightbulbTitle(autoFix, autoRun) {\n        if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n            return;\n        }\n        if (autoRun) {\n            this.title = nls.localize('codeActionAutoRun', \"Run: {0}\", this.state.actions.validActions[0].action.title);\n        }\n        else if (autoFix && this._preferredKbLabel) {\n            this.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", this._preferredKbLabel);\n        }\n        else if (!autoFix && this._quickFixKbLabel) {\n            this.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", this._quickFixKbLabel);\n        }\n        else if (!autoFix) {\n            this.title = nls.localize('codeAction', \"Show Code Actions\");\n        }\n    }\n    set title(value) {\n        this._domNode.title = value;\n    }\n};\nLightBulbWidget = LightBulbWidget_1 = __decorate([\n    __param(1, IKeybindingService)\n], LightBulbWidget);\nexport { LightBulbWidget };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}