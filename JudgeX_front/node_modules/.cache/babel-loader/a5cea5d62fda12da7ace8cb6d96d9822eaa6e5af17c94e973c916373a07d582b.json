{"ast":null,"code":"var _InlineCompletionsController;\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domObservable.js';\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { derivedObservableWithCache, mapObservableArrayCached } from '../../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { observableCodeEditor, reactToChange, reactToChangeWithStore } from '../../../../browser/observableCodeEditor.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextView } from '../view/ghostTextView.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from '../model/suggestWidgetAdaptor.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = (_InlineCompletionsController = class InlineCompletionsController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(InlineCompletionsController_1.ID);\n  }\n  constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n    super();\n    this.editor = editor;\n    this._instantiationService = _instantiationService;\n    this._contextKeyService = _contextKeyService;\n    this._configurationService = _configurationService;\n    this._commandService = _commandService;\n    this._debounceService = _debounceService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._keybindingService = _keybindingService;\n    this._accessibilityService = _accessibilityService;\n    this._editorObs = observableCodeEditor(this.editor);\n    this._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n    this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n      this._editorObs.forceUpdate();\n      return this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined);\n    }, item => this._editorObs.forceUpdate(_tx => {\n      /** @description InlineCompletionsController.handleSuggestAccepted */\n      this.model.get()?.handleSuggestAccepted(item);\n    })));\n    this._suggestWidgetSelectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n      this._editorObs.forceUpdate(_tx => cb(undefined));\n    }), () => this._suggestWidgetAdaptor.selectedItem);\n    this._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n    this._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n    this._editorDictationInProgress = observableFromEvent(this, this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n    this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n    this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', {\n      min: 50,\n      max: 50\n    });\n    this.model = derivedDisposable(this, reader => {\n      if (this._editorObs.isReadonly.read(reader)) {\n        return undefined;\n      }\n      const textModel = this._editorObs.model.read(reader);\n      if (!textModel) {\n        return undefined;\n      }\n      const model = this._instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetSelectedItem, this._editorObs.versionId, this._positions, this._debounceValue, observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).preview), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).previewMode), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n      return model;\n    }).recomputeInitiallyAndOnChange(this._store);\n    this._ghostTexts = derived(this, reader => {\n      const model = this.model.read(reader);\n      return model?.ghostTexts.read(reader) ?? [];\n    });\n    this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n    this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => store.add(this._instantiationService.createInstance(GhostTextView, this.editor, {\n      ghostText: ghostText,\n      minReservedLineCount: constObservable(0),\n      targetTextModel: this.model.map(v => v?.textModel)\n    }))).recomputeInitiallyAndOnChange(this._store);\n    this._playAccessibilitySignal = observableSignal(this);\n    this._fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n    this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n    this._register(reactToChange(this._editorObs.onDidType, (_value, _changes) => {\n      if (this._enabled.get()) {\n        this.model.get()?.trigger();\n      }\n    }));\n    this._register(this._commandService.onDidExecuteCommand(e => {\n      // These commands don't trigger onDidType.\n      const commands = new Set([CoreEditingCommands.Tab.id, CoreEditingCommands.DeleteLeft.id, CoreEditingCommands.DeleteRight.id, inlineSuggestCommitId, 'acceptSelectedSuggestion']);\n      if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n        this._editorObs.forceUpdate(tx => {\n          /** @description onDidExecuteCommand */\n          this.model.get()?.trigger(tx);\n        });\n      }\n    }));\n    this._register(reactToChange(this._editorObs.selections, (_value, changes) => {\n      if (changes.some(e => e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api')) {\n        this.model.get()?.stop();\n      }\n    }));\n    this._register(this.editor.onDidBlurEditorWidget(() => {\n      // This is a hidden setting very useful for debugging\n      if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur || InlineSuggestionHintsContentWidget.dropDownVisible) {\n        return;\n      }\n      transaction(tx => {\n        /** @description InlineCompletionsController.onDidBlurEditorWidget */\n        this.model.get()?.stop(tx);\n      });\n    }));\n    this._register(autorun(reader => {\n      /** @description InlineCompletionsController.forceRenderingAbove */\n      const state = this.model.read(reader)?.state.read(reader);\n      if (state?.suggestItem) {\n        if (state.primaryGhostText.lineCount >= 2) {\n          this._suggestWidgetAdaptor.forceRenderingAbove();\n        }\n      } else {\n        this._suggestWidgetAdaptor.stopForceRenderingAbove();\n      }\n    }));\n    this._register(toDisposable(() => {\n      this._suggestWidgetAdaptor.stopForceRenderingAbove();\n    }));\n    const currentInlineCompletionBySemanticId = derivedObservableWithCache(this, (reader, last) => {\n      const model = this.model.read(reader);\n      const state = model?.state.read(reader);\n      if (this._suggestWidgetSelectedItem.get()) {\n        return last;\n      }\n      return state?.inlineCompletion?.semanticId;\n    });\n    this._register(reactToChangeWithStore(derived(reader => {\n      this._playAccessibilitySignal.read(reader);\n      currentInlineCompletionBySemanticId.read(reader);\n      return {};\n    }), async (_value, _deltas, store) => {\n      /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n      const model = this.model.get();\n      const state = model?.state.get();\n      if (!state || !model) {\n        return;\n      }\n      const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n      await timeout(50, cancelOnDispose(store));\n      await waitForState(this._suggestWidgetSelectedItem, isUndefined, () => false, cancelOnDispose(store));\n      await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n      if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n        this._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n      }\n    }));\n    this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n    this._register(createStyleSheetFromObservable(derived(reader => {\n      const fontFamily = this._fontFamily.read(reader);\n      if (fontFamily === '' || fontFamily === 'default') {\n        return '';\n      }\n      return `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n    })));\n    // TODO@hediet\n    this._register(this._configurationService.onDidChangeConfiguration(e => {\n      if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n        this.editor.updateOptions({\n          inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n        });\n      }\n    }));\n    this.editor.updateOptions({\n      inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n    });\n  }\n  playAccessibilitySignal(tx) {\n    this._playAccessibilitySignal.trigger(tx);\n  }\n  _provideScreenReaderUpdate(content) {\n    const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n    const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n    let hint;\n    if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n      hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n    }\n    alert(hint ? content + ', ' + hint : content);\n  }\n  shouldShowHoverAt(range) {\n    const ghostText = this.model.get()?.primaryGhostText.get();\n    if (ghostText) {\n      return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n    }\n    return false;\n  }\n  shouldShowHoverAtViewZone(viewZoneId) {\n    return this._ghostTextWidgets.get()[0]?.ownsViewZone(viewZoneId) ?? false;\n  }\n}, InlineCompletionsController_1 = _InlineCompletionsController, _InlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController', _InlineCompletionsController);\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IConfigurationService), __param(4, ICommandService), __param(5, ILanguageFeatureDebounceService), __param(6, ILanguageFeaturesService), __param(7, IAccessibilitySignalService), __param(8, IKeybindingService), __param(9, IAccessibilityService)], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n  const result = observableValue('result', []);\n  const innerObservables = [];\n  store.add(autorun(reader => {\n    const itemsValue = items.read(reader);\n    transaction(tx => {\n      if (itemsValue.length !== innerObservables.length) {\n        innerObservables.length = itemsValue.length;\n        for (let i = 0; i < innerObservables.length; i++) {\n          if (!innerObservables[i]) {\n            innerObservables[i] = observableValue('item', itemsValue[i]);\n          }\n        }\n        result.set([...innerObservables], tx);\n      }\n      innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n    });\n  }));\n  return result;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineCompletionsController_1","createStyleSheetFromObservable","alert","timeout","cancelOnDispose","Disposable","toDisposable","autorun","constObservable","derived","observableFromEvent","observableSignal","observableValue","transaction","waitForState","derivedDisposable","derivedObservableWithCache","mapObservableArrayCached","isUndefined","CoreEditingCommands","observableCodeEditor","reactToChange","reactToChangeWithStore","Position","ILanguageFeatureDebounceService","ILanguageFeaturesService","inlineSuggestCommitId","GhostTextView","InlineCompletionContextKeys","InlineCompletionsHintsWidget","InlineSuggestionHintsContentWidget","InlineCompletionsModel","SuggestWidgetAdaptor","localize","IAccessibilityService","AccessibilitySignal","IAccessibilitySignalService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","IKeybindingService","InlineCompletionsController","_InlineCompletionsController","get","editor","getContribution","ID","constructor","_instantiationService","_contextKeyService","_configurationService","_commandService","_debounceService","_languageFeaturesService","_accessibilitySignalService","_keybindingService","_accessibilityService","_editorObs","_positions","reader","selections","read","map","s","getEndPosition","_suggestWidgetAdaptor","_register","forceUpdate","model","selectedInlineCompletion","toSingleTextEdit","undefined","item","_tx","handleSuggestAccepted","_suggestWidgetSelectedItem","cb","onDidSelectedItemChange","selectedItem","_enabledInConfig","onDidChangeConfiguration","getOption","enabled","_isScreenReaderEnabled","onDidChangeScreenReaderOptimized","isScreenReaderOptimized","_editorDictationInProgress","onDidChangeContext","getContext","getDomNode","getValue","_enabled","_debounceValue","for","inlineCompletionsProvider","min","max","isReadonly","textModel","createInstance","versionId","preview","previewMode","mode","recomputeInitiallyAndOnChange","_store","_ghostTexts","ghostTexts","_stablizedGhostTexts","convertItemsToStableObservables","_ghostTextWidgets","ghostText","store","add","minReservedLineCount","targetTextModel","v","_playAccessibilitySignal","_fontFamily","fontFamily","onDidType","_value","_changes","trigger","onDidExecuteCommand","e","commands","Set","Tab","id","DeleteLeft","DeleteRight","has","commandId","hasTextFocus","tx","changes","some","reason","source","stop","onDidBlurEditorWidget","getContextKeyValue","keepOnBlur","dropDownVisible","state","suggestItem","primaryGhostText","lineCount","forceRenderingAbove","stopForceRenderingAbove","currentInlineCompletionBySemanticId","last","inlineCompletion","semanticId","_deltas","lineText","getLineContent","lineNumber","playSignal","inlineSuggestion","_provideScreenReaderUpdate","renderForScreenReader","affectsConfiguration","updateOptions","inlineCompletionsAccessibilityVerbose","playAccessibilitySignal","content","accessibleViewShowing","accessibleViewKeybinding","lookupKeybinding","hint","getAriaLabel","shouldShowHoverAt","range","parts","p","containsPosition","column","shouldShowHoverAtViewZone","viewZoneId","ownsViewZone","items","result","innerObservables","itemsValue","set","forEach","o"],"sources":["P:/WebStorm/judgex_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domObservable.js';\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { derivedObservableWithCache, mapObservableArrayCached } from '../../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { observableCodeEditor, reactToChange, reactToChangeWithStore } from '../../../../browser/observableCodeEditor.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextView } from '../view/ghostTextView.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from '../model/suggestWidgetAdaptor.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static { InlineCompletionsController_1 = this; }\n    static { this.ID = 'editor.contrib.inlineCompletionsController'; }\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n        super();\n        this.editor = editor;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._commandService = _commandService;\n        this._debounceService = _debounceService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._keybindingService = _keybindingService;\n        this._accessibilityService = _accessibilityService;\n        this._editorObs = observableCodeEditor(this.editor);\n        this._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n            this._editorObs.forceUpdate();\n            return this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined);\n        }, (item) => this._editorObs.forceUpdate(_tx => {\n            /** @description InlineCompletionsController.handleSuggestAccepted */\n            this.model.get()?.handleSuggestAccepted(item);\n        })));\n        this._suggestWidgetSelectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n            this._editorObs.forceUpdate(_tx => cb(undefined));\n        }), () => this._suggestWidgetAdaptor.selectedItem);\n        this._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n        this._editorDictationInProgress = observableFromEvent(this, this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n        this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this.model = derivedDisposable(this, reader => {\n            if (this._editorObs.isReadonly.read(reader)) {\n                return undefined;\n            }\n            const textModel = this._editorObs.model.read(reader);\n            if (!textModel) {\n                return undefined;\n            }\n            const model = this._instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetSelectedItem, this._editorObs.versionId, this._positions, this._debounceValue, observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).preview), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).previewMode), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n            return model;\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._ghostTexts = derived(this, (reader) => {\n            const model = this.model.read(reader);\n            return model?.ghostTexts.read(reader) ?? [];\n        });\n        this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n        this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => store.add(this._instantiationService.createInstance(GhostTextView, this.editor, {\n            ghostText: ghostText,\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v?.textModel),\n        }))).recomputeInitiallyAndOnChange(this._store);\n        this._playAccessibilitySignal = observableSignal(this);\n        this._fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n        this._register(reactToChange(this._editorObs.onDidType, (_value, _changes) => {\n            if (this._enabled.get()) {\n                this.model.get()?.trigger();\n            }\n        }));\n        this._register(this._commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                this._editorObs.forceUpdate(tx => {\n                    /** @description onDidExecuteCommand */\n                    this.model.get()?.trigger(tx);\n                });\n            }\n        }));\n        this._register(reactToChange(this._editorObs.selections, (_value, changes) => {\n            if (changes.some(e => e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api')) {\n                this.model.get()?.stop();\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown')\n                || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur')\n                || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur\n                || InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\n                this.model.get()?.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description InlineCompletionsController.forceRenderingAbove */\n            const state = this.model.read(reader)?.state.read(reader);\n            if (state?.suggestItem) {\n                if (state.primaryGhostText.lineCount >= 2) {\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        const currentInlineCompletionBySemanticId = derivedObservableWithCache(this, (reader, last) => {\n            const model = this.model.read(reader);\n            const state = model?.state.read(reader);\n            if (this._suggestWidgetSelectedItem.get()) {\n                return last;\n            }\n            return state?.inlineCompletion?.semanticId;\n        });\n        this._register(reactToChangeWithStore(derived(reader => {\n            this._playAccessibilitySignal.read(reader);\n            currentInlineCompletionBySemanticId.read(reader);\n            return {};\n        }), async (_value, _deltas, store) => {\n            /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n            const model = this.model.get();\n            const state = model?.state.get();\n            if (!state || !model) {\n                return;\n            }\n            const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n            await timeout(50, cancelOnDispose(store));\n            await waitForState(this._suggestWidgetSelectedItem, isUndefined, () => false, cancelOnDispose(store));\n            await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n            if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                this._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n        this._register(createStyleSheetFromObservable(derived(reader => {\n            const fontFamily = this._fontFamily.read(reader);\n            if (fontFamily === '' || fontFamily === 'default') {\n                return '';\n            }\n            return `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n        })));\n        // TODO@hediet\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    playAccessibilitySignal(tx) {\n        this._playAccessibilitySignal.trigger(tx);\n    }\n    _provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        alert(hint ? content + ', ' + hint : content);\n    }\n    shouldShowHoverAt(range) {\n        const ghostText = this.model.get()?.primaryGhostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this._ghostTextWidgets.get()[0]?.ownsViewZone(viewZoneId) ?? false;\n    }\n};\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAccessibilitySignalService),\n    __param(8, IKeybindingService),\n    __param(9, IAccessibilityService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n    const result = observableValue('result', []);\n    const innerObservables = [];\n    store.add(autorun(reader => {\n        const itemsValue = items.read(reader);\n        transaction(tx => {\n            if (itemsValue.length !== innerObservables.length) {\n                innerObservables.length = itemsValue.length;\n                for (let i = 0; i < innerObservables.length; i++) {\n                    if (!innerObservables[i]) {\n                        innerObservables[i] = observableValue('item', itemsValue[i]);\n                    }\n                }\n                result.set([...innerObservables], tx);\n            }\n            innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n        });\n    }));\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}