{"ast":null,"code":"var _ObservableCodeEditor;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equalsIfDefined, itemsEquals } from '../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../base/common/lifecycle.js';\nimport { autorun, autorunOpts, autorunWithStoreHandleChanges, derived, derivedOpts, observableFromEvent, observableSignal, observableValue, observableValueOpts } from '../../base/common/observable.js';\nimport { TransactionImpl } from '../../base/common/observableInternal/base.js';\nimport { derivedWithSetter } from '../../base/common/observableInternal/derived.js';\nimport { Selection } from '../common/core/selection.js';\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n*/\nexport function observableCodeEditor(editor) {\n  return ObservableCodeEditor.get(editor);\n}\nexport class ObservableCodeEditor extends Disposable {\n  /**\n   * Make sure that editor is not disposed yet!\n  */\n  static get(editor) {\n    let result = ObservableCodeEditor._map.get(editor);\n    if (!result) {\n      result = new ObservableCodeEditor(editor);\n      ObservableCodeEditor._map.set(editor, result);\n      const d = editor.onDidDispose(() => {\n        const item = ObservableCodeEditor._map.get(editor);\n        if (item) {\n          ObservableCodeEditor._map.delete(editor);\n          item.dispose();\n          d.dispose();\n        }\n      });\n    }\n    return result;\n  }\n  _beginUpdate() {\n    this._updateCounter++;\n    if (this._updateCounter === 1) {\n      this._currentTransaction = new TransactionImpl(() => {\n        /** @description Update editor state */\n      });\n    }\n  }\n  _endUpdate() {\n    this._updateCounter--;\n    if (this._updateCounter === 0) {\n      const t = this._currentTransaction;\n      this._currentTransaction = undefined;\n      t.finish();\n    }\n  }\n  constructor(editor) {\n    super();\n    this.editor = editor;\n    this._updateCounter = 0;\n    this._currentTransaction = undefined;\n    this._model = observableValue(this, this.editor.getModel());\n    this.model = this._model;\n    this.isReadonly = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(92 /* EditorOption.readOnly */));\n    this._versionId = observableValueOpts({\n      owner: this,\n      lazy: true\n    }, this.editor.getModel()?.getVersionId() ?? null);\n    this.versionId = this._versionId;\n    this._selections = observableValueOpts({\n      owner: this,\n      equalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)),\n      lazy: true\n    }, this.editor.getSelections() ?? null);\n    this.selections = this._selections;\n    this.isFocused = observableFromEvent(this, e => {\n      const d1 = this.editor.onDidFocusEditorWidget(e);\n      const d2 = this.editor.onDidBlurEditorWidget(e);\n      return {\n        dispose() {\n          d1.dispose();\n          d2.dispose();\n        }\n      };\n    }, () => this.editor.hasWidgetFocus());\n    this.value = derivedWithSetter(this, reader => {\n      this.versionId.read(reader);\n      return this.model.read(reader)?.getValue() ?? '';\n    }, (value, tx) => {\n      const model = this.model.get();\n      if (model !== null) {\n        if (value !== model.getValue()) {\n          model.setValue(value);\n        }\n      }\n    });\n    this.valueIsEmpty = derived(this, reader => {\n      this.versionId.read(reader);\n      return this.editor.getModel()?.getValueLength() === 0;\n    });\n    this.cursorSelection = derivedOpts({\n      owner: this,\n      equalsFn: equalsIfDefined(Selection.selectionsEqual)\n    }, reader => this.selections.read(reader)?.[0] ?? null);\n    this.onDidType = observableSignal(this);\n    this.scrollTop = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollTop());\n    this.scrollLeft = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollLeft());\n    this.layoutInfo = observableFromEvent(this.editor.onDidLayoutChange, () => this.editor.getLayoutInfo());\n    this.layoutInfoContentLeft = this.layoutInfo.map(l => l.contentLeft);\n    this.layoutInfoDecorationsLeft = this.layoutInfo.map(l => l.decorationsLeft);\n    this.contentWidth = observableFromEvent(this.editor.onDidContentSizeChange, () => this.editor.getContentWidth());\n    this._overlayWidgetCounter = 0;\n    this._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n    this._register(this.editor.onEndUpdate(() => this._endUpdate()));\n    this._register(this.editor.onDidChangeModel(() => {\n      this._beginUpdate();\n      try {\n        this._model.set(this.editor.getModel(), this._currentTransaction);\n        this._forceUpdate();\n      } finally {\n        this._endUpdate();\n      }\n    }));\n    this._register(this.editor.onDidType(e => {\n      this._beginUpdate();\n      try {\n        this._forceUpdate();\n        this.onDidType.trigger(this._currentTransaction, e);\n      } finally {\n        this._endUpdate();\n      }\n    }));\n    this._register(this.editor.onDidChangeModelContent(e => {\n      this._beginUpdate();\n      try {\n        this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, e);\n        this._forceUpdate();\n      } finally {\n        this._endUpdate();\n      }\n    }));\n    this._register(this.editor.onDidChangeCursorSelection(e => {\n      this._beginUpdate();\n      try {\n        this._selections.set(this.editor.getSelections(), this._currentTransaction, e);\n        this._forceUpdate();\n      } finally {\n        this._endUpdate();\n      }\n    }));\n  }\n  forceUpdate(cb) {\n    this._beginUpdate();\n    try {\n      this._forceUpdate();\n      if (!cb) {\n        return undefined;\n      }\n      return cb(this._currentTransaction);\n    } finally {\n      this._endUpdate();\n    }\n  }\n  _forceUpdate() {\n    this._beginUpdate();\n    try {\n      this._model.set(this.editor.getModel(), this._currentTransaction);\n      this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, undefined);\n      this._selections.set(this.editor.getSelections(), this._currentTransaction, undefined);\n    } finally {\n      this._endUpdate();\n    }\n  }\n  getOption(id) {\n    return observableFromEvent(this, cb => this.editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(id)) {\n        cb(undefined);\n      }\n    }), () => this.editor.getOption(id));\n  }\n  setDecorations(decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = this.editor.createDecorationsCollection();\n    d.add(autorunOpts({\n      owner: this,\n      debugName: () => `Apply decorations from ${decorations.debugName}`\n    }, reader => {\n      const d = decorations.read(reader);\n      decorationsCollection.set(d);\n    }));\n    d.add({\n      dispose: () => {\n        decorationsCollection.clear();\n      }\n    });\n    return d;\n  }\n  createOverlayWidget(widget) {\n    const overlayWidgetId = 'observableOverlayWidget' + this._overlayWidgetCounter++;\n    const w = {\n      getDomNode: () => widget.domNode,\n      getPosition: () => widget.position.get(),\n      getId: () => overlayWidgetId,\n      allowEditorOverflow: widget.allowEditorOverflow,\n      getMinContentWidthInPx: () => widget.minContentWidthInPx.get()\n    };\n    this.editor.addOverlayWidget(w);\n    const d = autorun(reader => {\n      widget.position.read(reader);\n      widget.minContentWidthInPx.read(reader);\n      this.editor.layoutOverlayWidget(w);\n    });\n    return toDisposable(() => {\n      d.dispose();\n      this.editor.removeOverlayWidget(w);\n    });\n  }\n}\n_ObservableCodeEditor = ObservableCodeEditor;\n_ObservableCodeEditor._map = new Map();\nexport function reactToChange(observable, cb) {\n  return autorunWithStoreHandleChanges({\n    createEmptyChangeSummary: () => ({\n      deltas: [],\n      didChange: false\n    }),\n    handleChange: (context, changeSummary) => {\n      if (context.didChange(observable)) {\n        const e = context.change;\n        if (e !== undefined) {\n          changeSummary.deltas.push(e);\n        }\n        changeSummary.didChange = true;\n      }\n      return true;\n    }\n  }, (reader, changeSummary) => {\n    const value = observable.read(reader);\n    if (changeSummary.didChange) {\n      cb(value, changeSummary.deltas);\n    }\n  });\n}\nexport function reactToChangeWithStore(observable, cb) {\n  const store = new DisposableStore();\n  const disposable = reactToChange(observable, (value, deltas) => {\n    store.clear();\n    cb(value, deltas, store);\n  });\n  return {\n    dispose() {\n      disposable.dispose();\n      store.dispose();\n    }\n  };\n}","map":{"version":3,"names":["equalsIfDefined","itemsEquals","Disposable","DisposableStore","toDisposable","autorun","autorunOpts","autorunWithStoreHandleChanges","derived","derivedOpts","observableFromEvent","observableSignal","observableValue","observableValueOpts","TransactionImpl","derivedWithSetter","Selection","observableCodeEditor","editor","ObservableCodeEditor","get","result","_map","set","d","onDidDispose","item","delete","dispose","_beginUpdate","_updateCounter","_currentTransaction","_endUpdate","t","undefined","finish","constructor","_model","getModel","model","isReadonly","onDidChangeConfiguration","getOption","_versionId","owner","lazy","getVersionId","versionId","_selections","equalsFn","selectionsEqual","getSelections","selections","isFocused","e","d1","onDidFocusEditorWidget","d2","onDidBlurEditorWidget","hasWidgetFocus","value","reader","read","getValue","tx","setValue","valueIsEmpty","getValueLength","cursorSelection","onDidType","scrollTop","onDidScrollChange","getScrollTop","scrollLeft","getScrollLeft","layoutInfo","onDidLayoutChange","getLayoutInfo","layoutInfoContentLeft","map","l","contentLeft","layoutInfoDecorationsLeft","decorationsLeft","contentWidth","onDidContentSizeChange","getContentWidth","_overlayWidgetCounter","_register","onBeginUpdate","onEndUpdate","onDidChangeModel","_forceUpdate","trigger","onDidChangeModelContent","onDidChangeCursorSelection","forceUpdate","cb","id","hasChanged","setDecorations","decorations","decorationsCollection","createDecorationsCollection","add","debugName","clear","createOverlayWidget","widget","overlayWidgetId","w","getDomNode","domNode","getPosition","position","getId","allowEditorOverflow","getMinContentWidthInPx","minContentWidthInPx","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","_ObservableCodeEditor","Map","reactToChange","observable","createEmptyChangeSummary","deltas","didChange","handleChange","context","changeSummary","change","push","reactToChangeWithStore","store","disposable"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/browser/observableCodeEditor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equalsIfDefined, itemsEquals } from '../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../base/common/lifecycle.js';\nimport { autorun, autorunOpts, autorunWithStoreHandleChanges, derived, derivedOpts, observableFromEvent, observableSignal, observableValue, observableValueOpts } from '../../base/common/observable.js';\nimport { TransactionImpl } from '../../base/common/observableInternal/base.js';\nimport { derivedWithSetter } from '../../base/common/observableInternal/derived.js';\nimport { Selection } from '../common/core/selection.js';\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n*/\nexport function observableCodeEditor(editor) {\n    return ObservableCodeEditor.get(editor);\n}\nexport class ObservableCodeEditor extends Disposable {\n    static { this._map = new Map(); }\n    /**\n     * Make sure that editor is not disposed yet!\n    */\n    static get(editor) {\n        let result = ObservableCodeEditor._map.get(editor);\n        if (!result) {\n            result = new ObservableCodeEditor(editor);\n            ObservableCodeEditor._map.set(editor, result);\n            const d = editor.onDidDispose(() => {\n                const item = ObservableCodeEditor._map.get(editor);\n                if (item) {\n                    ObservableCodeEditor._map.delete(editor);\n                    item.dispose();\n                    d.dispose();\n                }\n            });\n        }\n        return result;\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            this._currentTransaction = new TransactionImpl(() => {\n                /** @description Update editor state */\n            });\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            const t = this._currentTransaction;\n            this._currentTransaction = undefined;\n            t.finish();\n        }\n    }\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._updateCounter = 0;\n        this._currentTransaction = undefined;\n        this._model = observableValue(this, this.editor.getModel());\n        this.model = this._model;\n        this.isReadonly = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(92 /* EditorOption.readOnly */));\n        this._versionId = observableValueOpts({ owner: this, lazy: true }, this.editor.getModel()?.getVersionId() ?? null);\n        this.versionId = this._versionId;\n        this._selections = observableValueOpts({ owner: this, equalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)), lazy: true }, this.editor.getSelections() ?? null);\n        this.selections = this._selections;\n        this.isFocused = observableFromEvent(this, e => {\n            const d1 = this.editor.onDidFocusEditorWidget(e);\n            const d2 = this.editor.onDidBlurEditorWidget(e);\n            return {\n                dispose() {\n                    d1.dispose();\n                    d2.dispose();\n                }\n            };\n        }, () => this.editor.hasWidgetFocus());\n        this.value = derivedWithSetter(this, reader => { this.versionId.read(reader); return this.model.read(reader)?.getValue() ?? ''; }, (value, tx) => {\n            const model = this.model.get();\n            if (model !== null) {\n                if (value !== model.getValue()) {\n                    model.setValue(value);\n                }\n            }\n        });\n        this.valueIsEmpty = derived(this, reader => { this.versionId.read(reader); return this.editor.getModel()?.getValueLength() === 0; });\n        this.cursorSelection = derivedOpts({ owner: this, equalsFn: equalsIfDefined(Selection.selectionsEqual) }, reader => this.selections.read(reader)?.[0] ?? null);\n        this.onDidType = observableSignal(this);\n        this.scrollTop = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollTop());\n        this.scrollLeft = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollLeft());\n        this.layoutInfo = observableFromEvent(this.editor.onDidLayoutChange, () => this.editor.getLayoutInfo());\n        this.layoutInfoContentLeft = this.layoutInfo.map(l => l.contentLeft);\n        this.layoutInfoDecorationsLeft = this.layoutInfo.map(l => l.decorationsLeft);\n        this.contentWidth = observableFromEvent(this.editor.onDidContentSizeChange, () => this.editor.getContentWidth());\n        this._overlayWidgetCounter = 0;\n        this._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n        this._register(this.editor.onEndUpdate(() => this._endUpdate()));\n        this._register(this.editor.onDidChangeModel(() => {\n            this._beginUpdate();\n            try {\n                this._model.set(this.editor.getModel(), this._currentTransaction);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this._beginUpdate();\n            try {\n                this._forceUpdate();\n                this.onDidType.trigger(this._currentTransaction, e);\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent(e => {\n            this._beginUpdate();\n            try {\n                this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeCursorSelection(e => {\n            this._beginUpdate();\n            try {\n                this._selections.set(this.editor.getSelections(), this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n    }\n    forceUpdate(cb) {\n        this._beginUpdate();\n        try {\n            this._forceUpdate();\n            if (!cb) {\n                return undefined;\n            }\n            return cb(this._currentTransaction);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _forceUpdate() {\n        this._beginUpdate();\n        try {\n            this._model.set(this.editor.getModel(), this._currentTransaction);\n            this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, undefined);\n            this._selections.set(this.editor.getSelections(), this._currentTransaction, undefined);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    getOption(id) {\n        return observableFromEvent(this, cb => this.editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(id)) {\n                cb(undefined);\n            }\n        }), () => this.editor.getOption(id));\n    }\n    setDecorations(decorations) {\n        const d = new DisposableStore();\n        const decorationsCollection = this.editor.createDecorationsCollection();\n        d.add(autorunOpts({ owner: this, debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n            const d = decorations.read(reader);\n            decorationsCollection.set(d);\n        }));\n        d.add({\n            dispose: () => {\n                decorationsCollection.clear();\n            }\n        });\n        return d;\n    }\n    createOverlayWidget(widget) {\n        const overlayWidgetId = 'observableOverlayWidget' + (this._overlayWidgetCounter++);\n        const w = {\n            getDomNode: () => widget.domNode,\n            getPosition: () => widget.position.get(),\n            getId: () => overlayWidgetId,\n            allowEditorOverflow: widget.allowEditorOverflow,\n            getMinContentWidthInPx: () => widget.minContentWidthInPx.get(),\n        };\n        this.editor.addOverlayWidget(w);\n        const d = autorun(reader => {\n            widget.position.read(reader);\n            widget.minContentWidthInPx.read(reader);\n            this.editor.layoutOverlayWidget(w);\n        });\n        return toDisposable(() => {\n            d.dispose();\n            this.editor.removeOverlayWidget(w);\n        });\n    }\n}\nexport function reactToChange(observable, cb) {\n    return autorunWithStoreHandleChanges({\n        createEmptyChangeSummary: () => ({ deltas: [], didChange: false }),\n        handleChange: (context, changeSummary) => {\n            if (context.didChange(observable)) {\n                const e = context.change;\n                if (e !== undefined) {\n                    changeSummary.deltas.push(e);\n                }\n                changeSummary.didChange = true;\n            }\n            return true;\n        },\n    }, (reader, changeSummary) => {\n        const value = observable.read(reader);\n        if (changeSummary.didChange) {\n            cb(value, changeSummary.deltas);\n        }\n    });\n}\nexport function reactToChangeWithStore(observable, cb) {\n    const store = new DisposableStore();\n    const disposable = reactToChange(observable, (value, deltas) => {\n        store.clear();\n        cb(value, deltas, store);\n    });\n    return {\n        dispose() {\n            disposable.dispose();\n            store.dispose();\n        }\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}