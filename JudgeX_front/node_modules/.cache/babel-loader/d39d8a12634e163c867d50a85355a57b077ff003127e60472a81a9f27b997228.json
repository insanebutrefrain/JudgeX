{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => {\n  throw new Error(`Invalid change accessor`);\n};\nexport class ViewZones extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n    this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName('view-zones');\n    this.domNode.setPosition('absolute');\n    this.domNode.setAttribute('role', 'presentation');\n    this.domNode.setAttribute('aria-hidden', 'true');\n    this.marginDomNode = createFastDomNode(document.createElement('div'));\n    this.marginDomNode.setClassName('margin-view-zones');\n    this.marginDomNode.setPosition('absolute');\n    this.marginDomNode.setAttribute('role', 'presentation');\n    this.marginDomNode.setAttribute('aria-hidden', 'true');\n    this._zones = {};\n  }\n  dispose() {\n    super.dispose();\n    this._zones = {};\n  }\n  // ---- begin view event handlers\n  _recomputeWhitespacesProps() {\n    const whitespaces = this._context.viewLayout.getWhitespaces();\n    const oldWhitespaces = new Map();\n    for (const whitespace of whitespaces) {\n      oldWhitespaces.set(whitespace.id, whitespace);\n    }\n    let hadAChange = false;\n    this._context.viewModel.changeWhitespace(whitespaceAccessor => {\n      const keys = Object.keys(this._zones);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const id = keys[i];\n        const zone = this._zones[id];\n        const props = this._computeWhitespaceProps(zone.delegate);\n        zone.isInHiddenArea = props.isInHiddenArea;\n        const oldWhitespace = oldWhitespaces.get(id);\n        if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n          whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n          this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n          hadAChange = true;\n        }\n      }\n    });\n    return hadAChange;\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n    this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n      this._recomputeWhitespacesProps();\n    }\n    return true;\n  }\n  onLineMappingChanged(e) {\n    return this._recomputeWhitespacesProps();\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged || e.scrollWidthChanged;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  // ---- end view event handlers\n  _getZoneOrdinal(zone) {\n    return zone.ordinal ?? zone.afterColumn ?? 10000;\n  }\n  _computeWhitespaceProps(zone) {\n    if (zone.afterLineNumber === 0) {\n      return {\n        isInHiddenArea: false,\n        afterViewLineNumber: 0,\n        heightInPx: this._heightInPixels(zone),\n        minWidthInPx: this._minWidthInPixels(zone)\n      };\n    }\n    let zoneAfterModelPosition;\n    if (typeof zone.afterColumn !== 'undefined') {\n      zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n        lineNumber: zone.afterLineNumber,\n        column: zone.afterColumn\n      });\n    } else {\n      const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n        lineNumber: zone.afterLineNumber,\n        column: 1\n      }).lineNumber;\n      zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n    }\n    let zoneBeforeModelPosition;\n    if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n      zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n        lineNumber: zoneAfterModelPosition.lineNumber + 1,\n        column: 1\n      });\n    } else {\n      zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n        lineNumber: zoneAfterModelPosition.lineNumber,\n        column: zoneAfterModelPosition.column + 1\n      });\n    }\n    const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n    const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n    return {\n      isInHiddenArea: !isVisible,\n      afterViewLineNumber: viewPosition.lineNumber,\n      heightInPx: isVisible ? this._heightInPixels(zone) : 0,\n      minWidthInPx: this._minWidthInPixels(zone)\n    };\n  }\n  changeViewZones(callback) {\n    let zonesHaveChanged = false;\n    this._context.viewModel.changeWhitespace(whitespaceAccessor => {\n      const changeAccessor = {\n        addZone: zone => {\n          zonesHaveChanged = true;\n          return this._addZone(whitespaceAccessor, zone);\n        },\n        removeZone: id => {\n          if (!id) {\n            return;\n          }\n          zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n        },\n        layoutZone: id => {\n          if (!id) {\n            return;\n          }\n          zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n        }\n      };\n      safeInvoke1Arg(callback, changeAccessor);\n      // Invalidate changeAccessor\n      changeAccessor.addZone = invalidFunc;\n      changeAccessor.removeZone = invalidFunc;\n      changeAccessor.layoutZone = invalidFunc;\n    });\n    return zonesHaveChanged;\n  }\n  _addZone(whitespaceAccessor, zone) {\n    const props = this._computeWhitespaceProps(zone);\n    const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n    const myZone = {\n      whitespaceId: whitespaceId,\n      delegate: zone,\n      isInHiddenArea: props.isInHiddenArea,\n      isVisible: false,\n      domNode: createFastDomNode(zone.domNode),\n      marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n    };\n    this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n    myZone.domNode.setPosition('absolute');\n    myZone.domNode.domNode.style.width = '100%';\n    myZone.domNode.setDisplay('none');\n    myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n    this.domNode.appendChild(myZone.domNode);\n    if (myZone.marginDomNode) {\n      myZone.marginDomNode.setPosition('absolute');\n      myZone.marginDomNode.domNode.style.width = '100%';\n      myZone.marginDomNode.setDisplay('none');\n      myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n      this.marginDomNode.appendChild(myZone.marginDomNode);\n    }\n    this._zones[myZone.whitespaceId] = myZone;\n    this.setShouldRender();\n    return myZone.whitespaceId;\n  }\n  _removeZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      delete this._zones[id];\n      whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n      zone.domNode.removeAttribute('monaco-visible-view-zone');\n      zone.domNode.removeAttribute('monaco-view-zone');\n      zone.domNode.domNode.remove();\n      if (zone.marginDomNode) {\n        zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n        zone.marginDomNode.removeAttribute('monaco-view-zone');\n        zone.marginDomNode.domNode.remove();\n      }\n      this.setShouldRender();\n      return true;\n    }\n    return false;\n  }\n  _layoutZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      const props = this._computeWhitespaceProps(zone.delegate);\n      zone.isInHiddenArea = props.isInHiddenArea;\n      // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n      whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n      // TODO@Alex: change `newOrdinal` too\n      this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n      this.setShouldRender();\n      return true;\n    }\n    return false;\n  }\n  shouldSuppressMouseDownOnViewZone(id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      return Boolean(zone.delegate.suppressMouseDown);\n    }\n    return false;\n  }\n  _heightInPixels(zone) {\n    if (typeof zone.heightInPx === 'number') {\n      return zone.heightInPx;\n    }\n    if (typeof zone.heightInLines === 'number') {\n      return this._lineHeight * zone.heightInLines;\n    }\n    return this._lineHeight;\n  }\n  _minWidthInPixels(zone) {\n    if (typeof zone.minWidthInPx === 'number') {\n      return zone.minWidthInPx;\n    }\n    return 0;\n  }\n  _safeCallOnComputedHeight(zone, height) {\n    if (typeof zone.onComputedHeight === 'function') {\n      try {\n        zone.onComputedHeight(height);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n  _safeCallOnDomNodeTop(zone, top) {\n    if (typeof zone.onDomNodeTop === 'function') {\n      try {\n        zone.onDomNodeTop(top);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n  prepareRender(ctx) {\n    // Nothing to read\n  }\n  render(ctx) {\n    const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n    const visibleZones = {};\n    let hasVisibleZone = false;\n    for (const visibleWhitespace of visibleWhitespaces) {\n      if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n        continue;\n      }\n      visibleZones[visibleWhitespace.id] = visibleWhitespace;\n      hasVisibleZone = true;\n    }\n    const keys = Object.keys(this._zones);\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const id = keys[i];\n      const zone = this._zones[id];\n      let newTop = 0;\n      let newHeight = 0;\n      let newDisplay = 'none';\n      if (visibleZones.hasOwnProperty(id)) {\n        newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n        newHeight = visibleZones[id].height;\n        newDisplay = 'block';\n        // zone is visible\n        if (!zone.isVisible) {\n          zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n          zone.isVisible = true;\n        }\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n      } else {\n        if (zone.isVisible) {\n          zone.domNode.removeAttribute('monaco-visible-view-zone');\n          zone.isVisible = false;\n        }\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n      }\n      zone.domNode.setTop(newTop);\n      zone.domNode.setHeight(newHeight);\n      zone.domNode.setDisplay(newDisplay);\n      if (zone.marginDomNode) {\n        zone.marginDomNode.setTop(newTop);\n        zone.marginDomNode.setHeight(newHeight);\n        zone.marginDomNode.setDisplay(newDisplay);\n      }\n    }\n    if (hasVisibleZone) {\n      this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n      this.marginDomNode.setWidth(this._contentLeft);\n    }\n  }\n}\nfunction safeInvoke1Arg(func, arg1) {\n  try {\n    return func(arg1);\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"names":["createFastDomNode","onUnexpectedError","ViewPart","Position","invalidFunc","Error","ViewZones","constructor","context","options","_context","configuration","layoutInfo","get","_lineHeight","_contentWidth","contentWidth","_contentLeft","contentLeft","domNode","document","createElement","setClassName","setPosition","setAttribute","marginDomNode","_zones","dispose","_recomputeWhitespacesProps","whitespaces","viewLayout","getWhitespaces","oldWhitespaces","Map","whitespace","set","id","hadAChange","viewModel","changeWhitespace","whitespaceAccessor","keys","Object","i","len","length","zone","props","_computeWhitespaceProps","delegate","isInHiddenArea","oldWhitespace","afterLineNumber","afterViewLineNumber","height","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","onConfigurationChanged","e","hasChanged","onLineMappingChanged","onLinesDeleted","onScrollChanged","scrollTopChanged","scrollWidthChanged","onZonesChanged","onLinesInserted","_getZoneOrdinal","ordinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","model","validatePosition","lineNumber","column","validAfterLineNumber","getLineMaxColumn","zoneBeforeModelPosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","afterColumnAffinity","isVisible","showInHiddenAreas","modelPositionIsVisible","changeViewZones","callback","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","safeInvoke1Arg","whitespaceId","insertWhitespace","myZone","style","width","setDisplay","appendChild","setShouldRender","hasOwnProperty","removeWhitespace","removeAttribute","remove","shouldSuppressMouseDownOnViewZone","Boolean","suppressMouseDown","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","top","onDomNodeTop","prepareRender","ctx","render","visibleWhitespaces","viewportData","whitespaceViewportData","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","verticalOffset","bigNumbersDelta","getScrolledTopFromAbsoluteTop","setTop","setHeight","setWidth","Math","max","scrollWidth","func","arg1"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        return zone.ordinal ?? zone.afterColumn ?? 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.remove();\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.remove();\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}