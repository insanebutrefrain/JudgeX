{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { HoverWidget } from './hoverWidget.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { addDisposableListener, EventType, getActiveElement, isAncestorOfActiveElement, isAncestor, getWindow, isHTMLElement } from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { ContextViewHandler } from '../../../../platform/contextview/browser/contextViewService.js';\nimport { ManagedHoverWidget } from './updatableHoverWidget.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nlet HoverService = class HoverService extends Disposable {\n  constructor(_instantiationService, contextMenuService, _keybindingService, _layoutService, _accessibilityService) {\n    super();\n    this._instantiationService = _instantiationService;\n    this._keybindingService = _keybindingService;\n    this._layoutService = _layoutService;\n    this._accessibilityService = _accessibilityService;\n    this._managedHovers = new Map();\n    contextMenuService.onDidShowContextMenu(() => this.hideHover());\n    this._contextViewHandler = this._register(new ContextViewHandler(this._layoutService));\n  }\n  showHover(options, focus, skipLastFocusedUpdate) {\n    if (getHoverOptionsIdentity(this._currentHoverOptions) === getHoverOptionsIdentity(options)) {\n      return undefined;\n    }\n    if (this._currentHover && this._currentHoverOptions?.persistence?.sticky) {\n      return undefined;\n    }\n    this._currentHoverOptions = options;\n    this._lastHoverOptions = options;\n    const trapFocus = options.trapFocus || this._accessibilityService.isScreenReaderOptimized();\n    const activeElement = getActiveElement();\n    // HACK, remove this check when #189076 is fixed\n    if (!skipLastFocusedUpdate) {\n      if (trapFocus && activeElement) {\n        if (!activeElement.classList.contains('monaco-hover')) {\n          this._lastFocusedElementBeforeOpen = activeElement;\n        }\n      } else {\n        this._lastFocusedElementBeforeOpen = undefined;\n      }\n    }\n    const hoverDisposables = new DisposableStore();\n    const hover = this._instantiationService.createInstance(HoverWidget, options);\n    if (options.persistence?.sticky) {\n      hover.isLocked = true;\n    }\n    hover.onDispose(() => {\n      const hoverWasFocused = this._currentHover?.domNode && isAncestorOfActiveElement(this._currentHover.domNode);\n      if (hoverWasFocused) {\n        // Required to handle cases such as closing the hover with the escape key\n        this._lastFocusedElementBeforeOpen?.focus();\n      }\n      // Only clear the current options if it's the current hover, the current options help\n      // reduce flickering when the same hover is shown multiple times\n      if (this._currentHoverOptions === options) {\n        this._currentHoverOptions = undefined;\n      }\n      hoverDisposables.dispose();\n    }, undefined, hoverDisposables);\n    // Set the container explicitly to enable aux window support\n    if (!options.container) {\n      const targetElement = isHTMLElement(options.target) ? options.target : options.target.targetElements[0];\n      options.container = this._layoutService.getContainer(getWindow(targetElement));\n    }\n    this._contextViewHandler.showContextView(new HoverContextViewDelegate(hover, focus), options.container);\n    hover.onRequestLayout(() => this._contextViewHandler.layout(), undefined, hoverDisposables);\n    if (options.persistence?.sticky) {\n      hoverDisposables.add(addDisposableListener(getWindow(options.container).document, EventType.MOUSE_DOWN, e => {\n        if (!isAncestor(e.target, hover.domNode)) {\n          this.doHideHover();\n        }\n      }));\n    } else {\n      if ('targetElements' in options.target) {\n        for (const element of options.target.targetElements) {\n          hoverDisposables.add(addDisposableListener(element, EventType.CLICK, () => this.hideHover()));\n        }\n      } else {\n        hoverDisposables.add(addDisposableListener(options.target, EventType.CLICK, () => this.hideHover()));\n      }\n      const focusedElement = getActiveElement();\n      if (focusedElement) {\n        const focusedElementDocument = getWindow(focusedElement).document;\n        hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n        hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n        hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_UP, e => this._keyUp(e, hover)));\n        hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_UP, e => this._keyUp(e, hover)));\n      }\n    }\n    if ('IntersectionObserver' in mainWindow) {\n      const observer = new IntersectionObserver(e => this._intersectionChange(e, hover), {\n        threshold: 0\n      });\n      const firstTargetElement = 'targetElements' in options.target ? options.target.targetElements[0] : options.target;\n      observer.observe(firstTargetElement);\n      hoverDisposables.add(toDisposable(() => observer.disconnect()));\n    }\n    this._currentHover = hover;\n    return hover;\n  }\n  hideHover() {\n    if (this._currentHover?.isLocked || !this._currentHoverOptions) {\n      return;\n    }\n    this.doHideHover();\n  }\n  doHideHover() {\n    this._currentHover = undefined;\n    this._currentHoverOptions = undefined;\n    this._contextViewHandler.hideContextView();\n  }\n  _intersectionChange(entries, hover) {\n    const entry = entries[entries.length - 1];\n    if (!entry.isIntersecting) {\n      hover.dispose();\n    }\n  }\n  showAndFocusLastHover() {\n    if (!this._lastHoverOptions) {\n      return;\n    }\n    this.showHover(this._lastHoverOptions, true, true);\n  }\n  _keyDown(e, hover, hideOnKeyDown) {\n    if (e.key === 'Alt') {\n      hover.isLocked = true;\n      return;\n    }\n    const event = new StandardKeyboardEvent(e);\n    const keybinding = this._keybindingService.resolveKeyboardEvent(event);\n    if (keybinding.getSingleModifierDispatchChords().some(value => !!value) || this._keybindingService.softDispatch(event, event.target).kind !== 0 /* ResultKind.NoMatchingKb */) {\n      return;\n    }\n    if (hideOnKeyDown && (!this._currentHoverOptions?.trapFocus || e.key !== 'Tab')) {\n      this.hideHover();\n      this._lastFocusedElementBeforeOpen?.focus();\n    }\n  }\n  _keyUp(e, hover) {\n    if (e.key === 'Alt') {\n      hover.isLocked = false;\n      // Hide if alt is released while the mouse is not over hover/target\n      if (!hover.isMouseIn) {\n        this.hideHover();\n        this._lastFocusedElementBeforeOpen?.focus();\n      }\n    }\n  }\n  // TODO: Investigate performance of this function. There seems to be a lot of content created\n  //       and thrown away on start up\n  setupManagedHover(hoverDelegate, targetElement, content, options) {\n    targetElement.setAttribute('custom-hover', 'true');\n    if (targetElement.title !== '') {\n      console.warn('HTML element already has a title attribute, which will conflict with the custom hover. Please remove the title attribute.');\n      console.trace('Stack trace:', targetElement.title);\n      targetElement.title = '';\n    }\n    let hoverPreparation;\n    let hoverWidget;\n    const hideHover = (disposeWidget, disposePreparation) => {\n      const hadHover = hoverWidget !== undefined;\n      if (disposeWidget) {\n        hoverWidget?.dispose();\n        hoverWidget = undefined;\n      }\n      if (disposePreparation) {\n        hoverPreparation?.dispose();\n        hoverPreparation = undefined;\n      }\n      if (hadHover) {\n        hoverDelegate.onDidHideHover?.();\n        hoverWidget = undefined;\n      }\n    };\n    const triggerShowHover = (delay, focus, target, trapFocus) => {\n      return new TimeoutTimer(async () => {\n        if (!hoverWidget || hoverWidget.isDisposed) {\n          hoverWidget = new ManagedHoverWidget(hoverDelegate, target || targetElement, delay > 0);\n          await hoverWidget.update(typeof content === 'function' ? content() : content, focus, {\n            ...options,\n            trapFocus\n          });\n        }\n      }, delay);\n    };\n    let isMouseDown = false;\n    const mouseDownEmitter = addDisposableListener(targetElement, EventType.MOUSE_DOWN, () => {\n      isMouseDown = true;\n      hideHover(true, true);\n    }, true);\n    const mouseUpEmitter = addDisposableListener(targetElement, EventType.MOUSE_UP, () => {\n      isMouseDown = false;\n    }, true);\n    const mouseLeaveEmitter = addDisposableListener(targetElement, EventType.MOUSE_LEAVE, e => {\n      isMouseDown = false;\n      hideHover(false, e.fromElement === targetElement);\n    }, true);\n    const onMouseOver = e => {\n      if (hoverPreparation) {\n        return;\n      }\n      const toDispose = new DisposableStore();\n      const target = {\n        targetElements: [targetElement],\n        dispose: () => {}\n      };\n      if (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n        // track the mouse position\n        const onMouseMove = e => {\n          target.x = e.x + 10;\n          if (isHTMLElement(e.target) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n            hideHover(true, true);\n          }\n        };\n        toDispose.add(addDisposableListener(targetElement, EventType.MOUSE_MOVE, onMouseMove, true));\n      }\n      hoverPreparation = toDispose;\n      if (isHTMLElement(e.target) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n        return; // Do not show hover when the mouse is over another hover target\n      }\n      toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n    };\n    const mouseOverDomEmitter = addDisposableListener(targetElement, EventType.MOUSE_OVER, onMouseOver, true);\n    const onFocus = () => {\n      if (isMouseDown || hoverPreparation) {\n        return;\n      }\n      const target = {\n        targetElements: [targetElement],\n        dispose: () => {}\n      };\n      const toDispose = new DisposableStore();\n      const onBlur = () => hideHover(true, true);\n      toDispose.add(addDisposableListener(targetElement, EventType.BLUR, onBlur, true));\n      toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n      hoverPreparation = toDispose;\n    };\n    // Do not show hover when focusing an input or textarea\n    let focusDomEmitter;\n    const tagName = targetElement.tagName.toLowerCase();\n    if (tagName !== 'input' && tagName !== 'textarea') {\n      focusDomEmitter = addDisposableListener(targetElement, EventType.FOCUS, onFocus, true);\n    }\n    const hover = {\n      show: focus => {\n        hideHover(false, true); // terminate a ongoing mouse over preparation\n        triggerShowHover(0, focus, undefined, focus); // show hover immediately\n      },\n      hide: () => {\n        hideHover(true, true);\n      },\n      update: async (newContent, hoverOptions) => {\n        content = newContent;\n        await hoverWidget?.update(content, undefined, hoverOptions);\n      },\n      dispose: () => {\n        this._managedHovers.delete(targetElement);\n        mouseOverDomEmitter.dispose();\n        mouseLeaveEmitter.dispose();\n        mouseDownEmitter.dispose();\n        mouseUpEmitter.dispose();\n        focusDomEmitter?.dispose();\n        hideHover(true, true);\n      }\n    };\n    this._managedHovers.set(targetElement, hover);\n    return hover;\n  }\n  showManagedHover(target) {\n    const hover = this._managedHovers.get(target);\n    if (hover) {\n      hover.show(true);\n    }\n  }\n  dispose() {\n    this._managedHovers.forEach(hover => hover.dispose());\n    super.dispose();\n  }\n};\nHoverService = __decorate([__param(0, IInstantiationService), __param(1, IContextMenuService), __param(2, IKeybindingService), __param(3, ILayoutService), __param(4, IAccessibilityService)], HoverService);\nexport { HoverService };\nfunction getHoverOptionsIdentity(options) {\n  if (options === undefined) {\n    return undefined;\n  }\n  return options?.id ?? options;\n}\nclass HoverContextViewDelegate {\n  get anchorPosition() {\n    return this._hover.anchor;\n  }\n  constructor(_hover, _focus = false) {\n    this._hover = _hover;\n    this._focus = _focus;\n    // Render over all other context views\n    this.layer = 1;\n  }\n  render(container) {\n    this._hover.render(container);\n    if (this._focus) {\n      this._hover.focus();\n    }\n    return this._hover;\n  }\n  getAnchor() {\n    return {\n      x: this._hover.x,\n      y: this._hover.y\n    };\n  }\n  layout() {\n    this._hover.layout();\n  }\n}\nfunction getHoverTargetElement(element, stopElement) {\n  stopElement = stopElement ?? getWindow(element).document.body;\n  while (!element.hasAttribute('custom-hover') && element !== stopElement) {\n    element = element.parentElement;\n  }\n  return element;\n}\nregisterSingleton(IHoverService, HoverService, 1 /* InstantiationType.Delayed */);\nregisterThemingParticipant((theme, collector) => {\n  const hoverBorder = theme.getColor(editorHoverBorder);\n  if (hoverBorder) {\n    collector.addRule(`.monaco-workbench .workbench-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n    collector.addRule(`.monaco-workbench .workbench-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","registerSingleton","registerThemingParticipant","editorHoverBorder","IHoverService","IContextMenuService","IInstantiationService","HoverWidget","Disposable","DisposableStore","toDisposable","addDisposableListener","EventType","getActiveElement","isAncestorOfActiveElement","isAncestor","getWindow","isHTMLElement","IKeybindingService","StandardKeyboardEvent","IAccessibilityService","ILayoutService","mainWindow","ContextViewHandler","ManagedHoverWidget","TimeoutTimer","HoverService","constructor","_instantiationService","contextMenuService","_keybindingService","_layoutService","_accessibilityService","_managedHovers","Map","onDidShowContextMenu","hideHover","_contextViewHandler","_register","showHover","options","focus","skipLastFocusedUpdate","getHoverOptionsIdentity","_currentHoverOptions","undefined","_currentHover","persistence","sticky","_lastHoverOptions","trapFocus","isScreenReaderOptimized","activeElement","classList","contains","_lastFocusedElementBeforeOpen","hoverDisposables","hover","createInstance","isLocked","onDispose","hoverWasFocused","domNode","dispose","container","targetElement","targetElements","getContainer","showContextView","HoverContextViewDelegate","onRequestLayout","layout","add","document","MOUSE_DOWN","e","doHideHover","element","CLICK","focusedElement","focusedElementDocument","KEY_DOWN","_keyDown","hideOnKeyDown","KEY_UP","_keyUp","observer","IntersectionObserver","_intersectionChange","threshold","firstTargetElement","observe","disconnect","hideContextView","entries","entry","isIntersecting","showAndFocusLastHover","event","keybinding","resolveKeyboardEvent","getSingleModifierDispatchChords","some","value","softDispatch","kind","isMouseIn","setupManagedHover","hoverDelegate","content","setAttribute","title","console","warn","trace","hoverPreparation","hoverWidget","disposeWidget","disposePreparation","hadHover","onDidHideHover","triggerShowHover","delay","isDisposed","update","isMouseDown","mouseDownEmitter","mouseUpEmitter","MOUSE_UP","mouseLeaveEmitter","MOUSE_LEAVE","fromElement","onMouseOver","toDispose","placement","onMouseMove","x","getHoverTargetElement","MOUSE_MOVE","mouseOverDomEmitter","MOUSE_OVER","onFocus","onBlur","BLUR","focusDomEmitter","tagName","toLowerCase","FOCUS","show","hide","newContent","hoverOptions","delete","set","showManagedHover","get","forEach","id","anchorPosition","_hover","anchor","_focus","layer","render","getAnchor","y","stopElement","body","hasAttribute","parentElement","theme","collector","hoverBorder","getColor","addRule","transparent"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/monaco-editor/esm/vs/editor/browser/services/hoverService/hoverService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { HoverWidget } from './hoverWidget.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { addDisposableListener, EventType, getActiveElement, isAncestorOfActiveElement, isAncestor, getWindow, isHTMLElement } from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { ContextViewHandler } from '../../../../platform/contextview/browser/contextViewService.js';\nimport { ManagedHoverWidget } from './updatableHoverWidget.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nlet HoverService = class HoverService extends Disposable {\n    constructor(_instantiationService, contextMenuService, _keybindingService, _layoutService, _accessibilityService) {\n        super();\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._layoutService = _layoutService;\n        this._accessibilityService = _accessibilityService;\n        this._managedHovers = new Map();\n        contextMenuService.onDidShowContextMenu(() => this.hideHover());\n        this._contextViewHandler = this._register(new ContextViewHandler(this._layoutService));\n    }\n    showHover(options, focus, skipLastFocusedUpdate) {\n        if (getHoverOptionsIdentity(this._currentHoverOptions) === getHoverOptionsIdentity(options)) {\n            return undefined;\n        }\n        if (this._currentHover && this._currentHoverOptions?.persistence?.sticky) {\n            return undefined;\n        }\n        this._currentHoverOptions = options;\n        this._lastHoverOptions = options;\n        const trapFocus = options.trapFocus || this._accessibilityService.isScreenReaderOptimized();\n        const activeElement = getActiveElement();\n        // HACK, remove this check when #189076 is fixed\n        if (!skipLastFocusedUpdate) {\n            if (trapFocus && activeElement) {\n                if (!activeElement.classList.contains('monaco-hover')) {\n                    this._lastFocusedElementBeforeOpen = activeElement;\n                }\n            }\n            else {\n                this._lastFocusedElementBeforeOpen = undefined;\n            }\n        }\n        const hoverDisposables = new DisposableStore();\n        const hover = this._instantiationService.createInstance(HoverWidget, options);\n        if (options.persistence?.sticky) {\n            hover.isLocked = true;\n        }\n        hover.onDispose(() => {\n            const hoverWasFocused = this._currentHover?.domNode && isAncestorOfActiveElement(this._currentHover.domNode);\n            if (hoverWasFocused) {\n                // Required to handle cases such as closing the hover with the escape key\n                this._lastFocusedElementBeforeOpen?.focus();\n            }\n            // Only clear the current options if it's the current hover, the current options help\n            // reduce flickering when the same hover is shown multiple times\n            if (this._currentHoverOptions === options) {\n                this._currentHoverOptions = undefined;\n            }\n            hoverDisposables.dispose();\n        }, undefined, hoverDisposables);\n        // Set the container explicitly to enable aux window support\n        if (!options.container) {\n            const targetElement = isHTMLElement(options.target) ? options.target : options.target.targetElements[0];\n            options.container = this._layoutService.getContainer(getWindow(targetElement));\n        }\n        this._contextViewHandler.showContextView(new HoverContextViewDelegate(hover, focus), options.container);\n        hover.onRequestLayout(() => this._contextViewHandler.layout(), undefined, hoverDisposables);\n        if (options.persistence?.sticky) {\n            hoverDisposables.add(addDisposableListener(getWindow(options.container).document, EventType.MOUSE_DOWN, e => {\n                if (!isAncestor(e.target, hover.domNode)) {\n                    this.doHideHover();\n                }\n            }));\n        }\n        else {\n            if ('targetElements' in options.target) {\n                for (const element of options.target.targetElements) {\n                    hoverDisposables.add(addDisposableListener(element, EventType.CLICK, () => this.hideHover()));\n                }\n            }\n            else {\n                hoverDisposables.add(addDisposableListener(options.target, EventType.CLICK, () => this.hideHover()));\n            }\n            const focusedElement = getActiveElement();\n            if (focusedElement) {\n                const focusedElementDocument = getWindow(focusedElement).document;\n                hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n                hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n                hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_UP, e => this._keyUp(e, hover)));\n                hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_UP, e => this._keyUp(e, hover)));\n            }\n        }\n        if ('IntersectionObserver' in mainWindow) {\n            const observer = new IntersectionObserver(e => this._intersectionChange(e, hover), { threshold: 0 });\n            const firstTargetElement = 'targetElements' in options.target ? options.target.targetElements[0] : options.target;\n            observer.observe(firstTargetElement);\n            hoverDisposables.add(toDisposable(() => observer.disconnect()));\n        }\n        this._currentHover = hover;\n        return hover;\n    }\n    hideHover() {\n        if (this._currentHover?.isLocked || !this._currentHoverOptions) {\n            return;\n        }\n        this.doHideHover();\n    }\n    doHideHover() {\n        this._currentHover = undefined;\n        this._currentHoverOptions = undefined;\n        this._contextViewHandler.hideContextView();\n    }\n    _intersectionChange(entries, hover) {\n        const entry = entries[entries.length - 1];\n        if (!entry.isIntersecting) {\n            hover.dispose();\n        }\n    }\n    showAndFocusLastHover() {\n        if (!this._lastHoverOptions) {\n            return;\n        }\n        this.showHover(this._lastHoverOptions, true, true);\n    }\n    _keyDown(e, hover, hideOnKeyDown) {\n        if (e.key === 'Alt') {\n            hover.isLocked = true;\n            return;\n        }\n        const event = new StandardKeyboardEvent(e);\n        const keybinding = this._keybindingService.resolveKeyboardEvent(event);\n        if (keybinding.getSingleModifierDispatchChords().some(value => !!value) || this._keybindingService.softDispatch(event, event.target).kind !== 0 /* ResultKind.NoMatchingKb */) {\n            return;\n        }\n        if (hideOnKeyDown && (!this._currentHoverOptions?.trapFocus || e.key !== 'Tab')) {\n            this.hideHover();\n            this._lastFocusedElementBeforeOpen?.focus();\n        }\n    }\n    _keyUp(e, hover) {\n        if (e.key === 'Alt') {\n            hover.isLocked = false;\n            // Hide if alt is released while the mouse is not over hover/target\n            if (!hover.isMouseIn) {\n                this.hideHover();\n                this._lastFocusedElementBeforeOpen?.focus();\n            }\n        }\n    }\n    // TODO: Investigate performance of this function. There seems to be a lot of content created\n    //       and thrown away on start up\n    setupManagedHover(hoverDelegate, targetElement, content, options) {\n        targetElement.setAttribute('custom-hover', 'true');\n        if (targetElement.title !== '') {\n            console.warn('HTML element already has a title attribute, which will conflict with the custom hover. Please remove the title attribute.');\n            console.trace('Stack trace:', targetElement.title);\n            targetElement.title = '';\n        }\n        let hoverPreparation;\n        let hoverWidget;\n        const hideHover = (disposeWidget, disposePreparation) => {\n            const hadHover = hoverWidget !== undefined;\n            if (disposeWidget) {\n                hoverWidget?.dispose();\n                hoverWidget = undefined;\n            }\n            if (disposePreparation) {\n                hoverPreparation?.dispose();\n                hoverPreparation = undefined;\n            }\n            if (hadHover) {\n                hoverDelegate.onDidHideHover?.();\n                hoverWidget = undefined;\n            }\n        };\n        const triggerShowHover = (delay, focus, target, trapFocus) => {\n            return new TimeoutTimer(async () => {\n                if (!hoverWidget || hoverWidget.isDisposed) {\n                    hoverWidget = new ManagedHoverWidget(hoverDelegate, target || targetElement, delay > 0);\n                    await hoverWidget.update(typeof content === 'function' ? content() : content, focus, { ...options, trapFocus });\n                }\n            }, delay);\n        };\n        let isMouseDown = false;\n        const mouseDownEmitter = addDisposableListener(targetElement, EventType.MOUSE_DOWN, () => {\n            isMouseDown = true;\n            hideHover(true, true);\n        }, true);\n        const mouseUpEmitter = addDisposableListener(targetElement, EventType.MOUSE_UP, () => {\n            isMouseDown = false;\n        }, true);\n        const mouseLeaveEmitter = addDisposableListener(targetElement, EventType.MOUSE_LEAVE, (e) => {\n            isMouseDown = false;\n            hideHover(false, e.fromElement === targetElement);\n        }, true);\n        const onMouseOver = (e) => {\n            if (hoverPreparation) {\n                return;\n            }\n            const toDispose = new DisposableStore();\n            const target = {\n                targetElements: [targetElement],\n                dispose: () => { }\n            };\n            if (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n                // track the mouse position\n                const onMouseMove = (e) => {\n                    target.x = e.x + 10;\n                    if ((isHTMLElement(e.target)) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n                        hideHover(true, true);\n                    }\n                };\n                toDispose.add(addDisposableListener(targetElement, EventType.MOUSE_MOVE, onMouseMove, true));\n            }\n            hoverPreparation = toDispose;\n            if ((isHTMLElement(e.target)) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n                return; // Do not show hover when the mouse is over another hover target\n            }\n            toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n        };\n        const mouseOverDomEmitter = addDisposableListener(targetElement, EventType.MOUSE_OVER, onMouseOver, true);\n        const onFocus = () => {\n            if (isMouseDown || hoverPreparation) {\n                return;\n            }\n            const target = {\n                targetElements: [targetElement],\n                dispose: () => { }\n            };\n            const toDispose = new DisposableStore();\n            const onBlur = () => hideHover(true, true);\n            toDispose.add(addDisposableListener(targetElement, EventType.BLUR, onBlur, true));\n            toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n            hoverPreparation = toDispose;\n        };\n        // Do not show hover when focusing an input or textarea\n        let focusDomEmitter;\n        const tagName = targetElement.tagName.toLowerCase();\n        if (tagName !== 'input' && tagName !== 'textarea') {\n            focusDomEmitter = addDisposableListener(targetElement, EventType.FOCUS, onFocus, true);\n        }\n        const hover = {\n            show: focus => {\n                hideHover(false, true); // terminate a ongoing mouse over preparation\n                triggerShowHover(0, focus, undefined, focus); // show hover immediately\n            },\n            hide: () => {\n                hideHover(true, true);\n            },\n            update: async (newContent, hoverOptions) => {\n                content = newContent;\n                await hoverWidget?.update(content, undefined, hoverOptions);\n            },\n            dispose: () => {\n                this._managedHovers.delete(targetElement);\n                mouseOverDomEmitter.dispose();\n                mouseLeaveEmitter.dispose();\n                mouseDownEmitter.dispose();\n                mouseUpEmitter.dispose();\n                focusDomEmitter?.dispose();\n                hideHover(true, true);\n            }\n        };\n        this._managedHovers.set(targetElement, hover);\n        return hover;\n    }\n    showManagedHover(target) {\n        const hover = this._managedHovers.get(target);\n        if (hover) {\n            hover.show(true);\n        }\n    }\n    dispose() {\n        this._managedHovers.forEach(hover => hover.dispose());\n        super.dispose();\n    }\n};\nHoverService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, IContextMenuService),\n    __param(2, IKeybindingService),\n    __param(3, ILayoutService),\n    __param(4, IAccessibilityService)\n], HoverService);\nexport { HoverService };\nfunction getHoverOptionsIdentity(options) {\n    if (options === undefined) {\n        return undefined;\n    }\n    return options?.id ?? options;\n}\nclass HoverContextViewDelegate {\n    get anchorPosition() {\n        return this._hover.anchor;\n    }\n    constructor(_hover, _focus = false) {\n        this._hover = _hover;\n        this._focus = _focus;\n        // Render over all other context views\n        this.layer = 1;\n    }\n    render(container) {\n        this._hover.render(container);\n        if (this._focus) {\n            this._hover.focus();\n        }\n        return this._hover;\n    }\n    getAnchor() {\n        return {\n            x: this._hover.x,\n            y: this._hover.y\n        };\n    }\n    layout() {\n        this._hover.layout();\n    }\n}\nfunction getHoverTargetElement(element, stopElement) {\n    stopElement = stopElement ?? getWindow(element).document.body;\n    while (!element.hasAttribute('custom-hover') && element !== stopElement) {\n        element = element.parentElement;\n    }\n    return element;\n}\nregisterSingleton(IHoverService, HoverService, 1 /* InstantiationType.Delayed */);\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-workbench .workbench-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-workbench .workbench-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,SAASE,iBAAiB,QAAQ,yDAAyD;AAC3F,SAASC,0BAA0B,QAAQ,mDAAmD;AAC9F,SAASC,iBAAiB,QAAQ,oDAAoD;AACtF,SAASC,aAAa,QAAQ,6CAA6C;AAC3E,SAASC,mBAAmB,QAAQ,yDAAyD;AAC7F,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,eAAe,EAAEC,YAAY,QAAQ,sCAAsC;AAChG,SAASC,qBAAqB,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,yBAAyB,EAAEC,UAAU,EAAEC,SAAS,EAAEC,aAAa,QAAQ,iCAAiC;AACrK,SAASC,kBAAkB,QAAQ,sDAAsD;AACzF,SAASC,qBAAqB,QAAQ,2CAA2C;AACjF,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,cAAc,QAAQ,sDAAsD;AACrF,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,SAASC,kBAAkB,QAAQ,gEAAgE;AACnG,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,IAAIC,YAAY,GAAG,MAAMA,YAAY,SAASlB,UAAU,CAAC;EACrDmB,WAAWA,CAACC,qBAAqB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,qBAAqB,EAAE;IAC9G,KAAK,CAAC,CAAC;IACP,IAAI,CAACJ,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACE,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/BL,kBAAkB,CAACM,oBAAoB,CAAC,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC/D,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACC,SAAS,CAAC,IAAIf,kBAAkB,CAAC,IAAI,CAACQ,cAAc,CAAC,CAAC;EAC1F;EACAQ,SAASA,CAACC,OAAO,EAAEC,KAAK,EAAEC,qBAAqB,EAAE;IAC7C,IAAIC,uBAAuB,CAAC,IAAI,CAACC,oBAAoB,CAAC,KAAKD,uBAAuB,CAACH,OAAO,CAAC,EAAE;MACzF,OAAOK,SAAS;IACpB;IACA,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,CAACF,oBAAoB,EAAEG,WAAW,EAAEC,MAAM,EAAE;MACtE,OAAOH,SAAS;IACpB;IACA,IAAI,CAACD,oBAAoB,GAAGJ,OAAO;IACnC,IAAI,CAACS,iBAAiB,GAAGT,OAAO;IAChC,MAAMU,SAAS,GAAGV,OAAO,CAACU,SAAS,IAAI,IAAI,CAAClB,qBAAqB,CAACmB,uBAAuB,CAAC,CAAC;IAC3F,MAAMC,aAAa,GAAGvC,gBAAgB,CAAC,CAAC;IACxC;IACA,IAAI,CAAC6B,qBAAqB,EAAE;MACxB,IAAIQ,SAAS,IAAIE,aAAa,EAAE;QAC5B,IAAI,CAACA,aAAa,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;UACnD,IAAI,CAACC,6BAA6B,GAAGH,aAAa;QACtD;MACJ,CAAC,MACI;QACD,IAAI,CAACG,6BAA6B,GAAGV,SAAS;MAClD;IACJ;IACA,MAAMW,gBAAgB,GAAG,IAAI/C,eAAe,CAAC,CAAC;IAC9C,MAAMgD,KAAK,GAAG,IAAI,CAAC7B,qBAAqB,CAAC8B,cAAc,CAACnD,WAAW,EAAEiC,OAAO,CAAC;IAC7E,IAAIA,OAAO,CAACO,WAAW,EAAEC,MAAM,EAAE;MAC7BS,KAAK,CAACE,QAAQ,GAAG,IAAI;IACzB;IACAF,KAAK,CAACG,SAAS,CAAC,MAAM;MAClB,MAAMC,eAAe,GAAG,IAAI,CAACf,aAAa,EAAEgB,OAAO,IAAIhD,yBAAyB,CAAC,IAAI,CAACgC,aAAa,CAACgB,OAAO,CAAC;MAC5G,IAAID,eAAe,EAAE;QACjB;QACA,IAAI,CAACN,6BAA6B,EAAEd,KAAK,CAAC,CAAC;MAC/C;MACA;MACA;MACA,IAAI,IAAI,CAACG,oBAAoB,KAAKJ,OAAO,EAAE;QACvC,IAAI,CAACI,oBAAoB,GAAGC,SAAS;MACzC;MACAW,gBAAgB,CAACO,OAAO,CAAC,CAAC;IAC9B,CAAC,EAAElB,SAAS,EAAEW,gBAAgB,CAAC;IAC/B;IACA,IAAI,CAAChB,OAAO,CAACwB,SAAS,EAAE;MACpB,MAAMC,aAAa,GAAGhD,aAAa,CAACuB,OAAO,CAACxD,MAAM,CAAC,GAAGwD,OAAO,CAACxD,MAAM,GAAGwD,OAAO,CAACxD,MAAM,CAACkF,cAAc,CAAC,CAAC,CAAC;MACvG1B,OAAO,CAACwB,SAAS,GAAG,IAAI,CAACjC,cAAc,CAACoC,YAAY,CAACnD,SAAS,CAACiD,aAAa,CAAC,CAAC;IAClF;IACA,IAAI,CAAC5B,mBAAmB,CAAC+B,eAAe,CAAC,IAAIC,wBAAwB,CAACZ,KAAK,EAAEhB,KAAK,CAAC,EAAED,OAAO,CAACwB,SAAS,CAAC;IACvGP,KAAK,CAACa,eAAe,CAAC,MAAM,IAAI,CAACjC,mBAAmB,CAACkC,MAAM,CAAC,CAAC,EAAE1B,SAAS,EAAEW,gBAAgB,CAAC;IAC3F,IAAIhB,OAAO,CAACO,WAAW,EAAEC,MAAM,EAAE;MAC7BQ,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACK,SAAS,CAACwB,OAAO,CAACwB,SAAS,CAAC,CAACS,QAAQ,EAAE7D,SAAS,CAAC8D,UAAU,EAAEC,CAAC,IAAI;QACzG,IAAI,CAAC5D,UAAU,CAAC4D,CAAC,CAAC3F,MAAM,EAAEyE,KAAK,CAACK,OAAO,CAAC,EAAE;UACtC,IAAI,CAACc,WAAW,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,MACI;MACD,IAAI,gBAAgB,IAAIpC,OAAO,CAACxD,MAAM,EAAE;QACpC,KAAK,MAAM6F,OAAO,IAAIrC,OAAO,CAACxD,MAAM,CAACkF,cAAc,EAAE;UACjDV,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACkE,OAAO,EAAEjE,SAAS,CAACkE,KAAK,EAAE,MAAM,IAAI,CAAC1C,SAAS,CAAC,CAAC,CAAC,CAAC;QACjG;MACJ,CAAC,MACI;QACDoB,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAAC6B,OAAO,CAACxD,MAAM,EAAE4B,SAAS,CAACkE,KAAK,EAAE,MAAM,IAAI,CAAC1C,SAAS,CAAC,CAAC,CAAC,CAAC;MACxG;MACA,MAAM2C,cAAc,GAAGlE,gBAAgB,CAAC,CAAC;MACzC,IAAIkE,cAAc,EAAE;QAChB,MAAMC,sBAAsB,GAAGhE,SAAS,CAAC+D,cAAc,CAAC,CAACN,QAAQ;QACjEjB,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACoE,cAAc,EAAEnE,SAAS,CAACqE,QAAQ,EAAEN,CAAC,IAAI,IAAI,CAACO,QAAQ,CAACP,CAAC,EAAElB,KAAK,EAAE,CAAC,CAACjB,OAAO,CAACO,WAAW,EAAEoC,aAAa,CAAC,CAAC,CAAC;QACnJ3B,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACqE,sBAAsB,EAAEpE,SAAS,CAACqE,QAAQ,EAAEN,CAAC,IAAI,IAAI,CAACO,QAAQ,CAACP,CAAC,EAAElB,KAAK,EAAE,CAAC,CAACjB,OAAO,CAACO,WAAW,EAAEoC,aAAa,CAAC,CAAC,CAAC;QAC3J3B,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACoE,cAAc,EAAEnE,SAAS,CAACwE,MAAM,EAAET,CAAC,IAAI,IAAI,CAACU,MAAM,CAACV,CAAC,EAAElB,KAAK,CAAC,CAAC,CAAC;QACzGD,gBAAgB,CAACgB,GAAG,CAAC7D,qBAAqB,CAACqE,sBAAsB,EAAEpE,SAAS,CAACwE,MAAM,EAAET,CAAC,IAAI,IAAI,CAACU,MAAM,CAACV,CAAC,EAAElB,KAAK,CAAC,CAAC,CAAC;MACrH;IACJ;IACA,IAAI,sBAAsB,IAAInC,UAAU,EAAE;MACtC,MAAMgE,QAAQ,GAAG,IAAIC,oBAAoB,CAACZ,CAAC,IAAI,IAAI,CAACa,mBAAmB,CAACb,CAAC,EAAElB,KAAK,CAAC,EAAE;QAAEgC,SAAS,EAAE;MAAE,CAAC,CAAC;MACpG,MAAMC,kBAAkB,GAAG,gBAAgB,IAAIlD,OAAO,CAACxD,MAAM,GAAGwD,OAAO,CAACxD,MAAM,CAACkF,cAAc,CAAC,CAAC,CAAC,GAAG1B,OAAO,CAACxD,MAAM;MACjHsG,QAAQ,CAACK,OAAO,CAACD,kBAAkB,CAAC;MACpClC,gBAAgB,CAACgB,GAAG,CAAC9D,YAAY,CAAC,MAAM4E,QAAQ,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC;IACnE;IACA,IAAI,CAAC9C,aAAa,GAAGW,KAAK;IAC1B,OAAOA,KAAK;EAChB;EACArB,SAASA,CAAA,EAAG;IACR,IAAI,IAAI,CAACU,aAAa,EAAEa,QAAQ,IAAI,CAAC,IAAI,CAACf,oBAAoB,EAAE;MAC5D;IACJ;IACA,IAAI,CAACgC,WAAW,CAAC,CAAC;EACtB;EACAA,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC9B,aAAa,GAAGD,SAAS;IAC9B,IAAI,CAACD,oBAAoB,GAAGC,SAAS;IACrC,IAAI,CAACR,mBAAmB,CAACwD,eAAe,CAAC,CAAC;EAC9C;EACAL,mBAAmBA,CAACM,OAAO,EAAErC,KAAK,EAAE;IAChC,MAAMsC,KAAK,GAAGD,OAAO,CAACA,OAAO,CAACzG,MAAM,GAAG,CAAC,CAAC;IACzC,IAAI,CAAC0G,KAAK,CAACC,cAAc,EAAE;MACvBvC,KAAK,CAACM,OAAO,CAAC,CAAC;IACnB;EACJ;EACAkC,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAAC,IAAI,CAAChD,iBAAiB,EAAE;MACzB;IACJ;IACA,IAAI,CAACV,SAAS,CAAC,IAAI,CAACU,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC;EACtD;EACAiC,QAAQA,CAACP,CAAC,EAAElB,KAAK,EAAE0B,aAAa,EAAE;IAC9B,IAAIR,CAAC,CAAC1F,GAAG,KAAK,KAAK,EAAE;MACjBwE,KAAK,CAACE,QAAQ,GAAG,IAAI;MACrB;IACJ;IACA,MAAMuC,KAAK,GAAG,IAAI/E,qBAAqB,CAACwD,CAAC,CAAC;IAC1C,MAAMwB,UAAU,GAAG,IAAI,CAACrE,kBAAkB,CAACsE,oBAAoB,CAACF,KAAK,CAAC;IACtE,IAAIC,UAAU,CAACE,+BAA+B,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,IAAI,IAAI,CAACzE,kBAAkB,CAAC0E,YAAY,CAACN,KAAK,EAAEA,KAAK,CAAClH,MAAM,CAAC,CAACyH,IAAI,KAAK,CAAC,CAAC,+BAA+B;MAC3K;IACJ;IACA,IAAItB,aAAa,KAAK,CAAC,IAAI,CAACvC,oBAAoB,EAAEM,SAAS,IAAIyB,CAAC,CAAC1F,GAAG,KAAK,KAAK,CAAC,EAAE;MAC7E,IAAI,CAACmD,SAAS,CAAC,CAAC;MAChB,IAAI,CAACmB,6BAA6B,EAAEd,KAAK,CAAC,CAAC;IAC/C;EACJ;EACA4C,MAAMA,CAACV,CAAC,EAAElB,KAAK,EAAE;IACb,IAAIkB,CAAC,CAAC1F,GAAG,KAAK,KAAK,EAAE;MACjBwE,KAAK,CAACE,QAAQ,GAAG,KAAK;MACtB;MACA,IAAI,CAACF,KAAK,CAACiD,SAAS,EAAE;QAClB,IAAI,CAACtE,SAAS,CAAC,CAAC;QAChB,IAAI,CAACmB,6BAA6B,EAAEd,KAAK,CAAC,CAAC;MAC/C;IACJ;EACJ;EACA;EACA;EACAkE,iBAAiBA,CAACC,aAAa,EAAE3C,aAAa,EAAE4C,OAAO,EAAErE,OAAO,EAAE;IAC9DyB,aAAa,CAAC6C,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC;IAClD,IAAI7C,aAAa,CAAC8C,KAAK,KAAK,EAAE,EAAE;MAC5BC,OAAO,CAACC,IAAI,CAAC,2HAA2H,CAAC;MACzID,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEjD,aAAa,CAAC8C,KAAK,CAAC;MAClD9C,aAAa,CAAC8C,KAAK,GAAG,EAAE;IAC5B;IACA,IAAII,gBAAgB;IACpB,IAAIC,WAAW;IACf,MAAMhF,SAAS,GAAGA,CAACiF,aAAa,EAAEC,kBAAkB,KAAK;MACrD,MAAMC,QAAQ,GAAGH,WAAW,KAAKvE,SAAS;MAC1C,IAAIwE,aAAa,EAAE;QACfD,WAAW,EAAErD,OAAO,CAAC,CAAC;QACtBqD,WAAW,GAAGvE,SAAS;MAC3B;MACA,IAAIyE,kBAAkB,EAAE;QACpBH,gBAAgB,EAAEpD,OAAO,CAAC,CAAC;QAC3BoD,gBAAgB,GAAGtE,SAAS;MAChC;MACA,IAAI0E,QAAQ,EAAE;QACVX,aAAa,CAACY,cAAc,GAAG,CAAC;QAChCJ,WAAW,GAAGvE,SAAS;MAC3B;IACJ,CAAC;IACD,MAAM4E,gBAAgB,GAAGA,CAACC,KAAK,EAAEjF,KAAK,EAAEzD,MAAM,EAAEkE,SAAS,KAAK;MAC1D,OAAO,IAAIzB,YAAY,CAAC,YAAY;QAChC,IAAI,CAAC2F,WAAW,IAAIA,WAAW,CAACO,UAAU,EAAE;UACxCP,WAAW,GAAG,IAAI5F,kBAAkB,CAACoF,aAAa,EAAE5H,MAAM,IAAIiF,aAAa,EAAEyD,KAAK,GAAG,CAAC,CAAC;UACvF,MAAMN,WAAW,CAACQ,MAAM,CAAC,OAAOf,OAAO,KAAK,UAAU,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO,EAAEpE,KAAK,EAAE;YAAE,GAAGD,OAAO;YAAEU;UAAU,CAAC,CAAC;QACnH;MACJ,CAAC,EAAEwE,KAAK,CAAC;IACb,CAAC;IACD,IAAIG,WAAW,GAAG,KAAK;IACvB,MAAMC,gBAAgB,GAAGnH,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAAC8D,UAAU,EAAE,MAAM;MACtFmD,WAAW,GAAG,IAAI;MAClBzF,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;IACzB,CAAC,EAAE,IAAI,CAAC;IACR,MAAM2F,cAAc,GAAGpH,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAACoH,QAAQ,EAAE,MAAM;MAClFH,WAAW,GAAG,KAAK;IACvB,CAAC,EAAE,IAAI,CAAC;IACR,MAAMI,iBAAiB,GAAGtH,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAACsH,WAAW,EAAGvD,CAAC,IAAK;MACzFkD,WAAW,GAAG,KAAK;MACnBzF,SAAS,CAAC,KAAK,EAAEuC,CAAC,CAACwD,WAAW,KAAKlE,aAAa,CAAC;IACrD,CAAC,EAAE,IAAI,CAAC;IACR,MAAMmE,WAAW,GAAIzD,CAAC,IAAK;MACvB,IAAIwC,gBAAgB,EAAE;QAClB;MACJ;MACA,MAAMkB,SAAS,GAAG,IAAI5H,eAAe,CAAC,CAAC;MACvC,MAAMzB,MAAM,GAAG;QACXkF,cAAc,EAAE,CAACD,aAAa,CAAC;QAC/BF,OAAO,EAAEA,CAAA,KAAM,CAAE;MACrB,CAAC;MACD,IAAI6C,aAAa,CAAC0B,SAAS,KAAKzF,SAAS,IAAI+D,aAAa,CAAC0B,SAAS,KAAK,OAAO,EAAE;QAC9E;QACA,MAAMC,WAAW,GAAI5D,CAAC,IAAK;UACvB3F,MAAM,CAACwJ,CAAC,GAAG7D,CAAC,CAAC6D,CAAC,GAAG,EAAE;UACnB,IAAKvH,aAAa,CAAC0D,CAAC,CAAC3F,MAAM,CAAC,IAAKyJ,qBAAqB,CAAC9D,CAAC,CAAC3F,MAAM,EAAEiF,aAAa,CAAC,KAAKA,aAAa,EAAE;YAC/F7B,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;UACzB;QACJ,CAAC;QACDiG,SAAS,CAAC7D,GAAG,CAAC7D,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAAC8H,UAAU,EAAEH,WAAW,EAAE,IAAI,CAAC,CAAC;MAChG;MACApB,gBAAgB,GAAGkB,SAAS;MAC5B,IAAKpH,aAAa,CAAC0D,CAAC,CAAC3F,MAAM,CAAC,IAAKyJ,qBAAqB,CAAC9D,CAAC,CAAC3F,MAAM,EAAEiF,aAAa,CAAC,KAAKA,aAAa,EAAE;QAC/F,OAAO,CAAC;MACZ;MACAoE,SAAS,CAAC7D,GAAG,CAACiD,gBAAgB,CAACb,aAAa,CAACc,KAAK,EAAE,KAAK,EAAE1I,MAAM,CAAC,CAAC;IACvE,CAAC;IACD,MAAM2J,mBAAmB,GAAGhI,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAACgI,UAAU,EAAER,WAAW,EAAE,IAAI,CAAC;IACzG,MAAMS,OAAO,GAAGA,CAAA,KAAM;MAClB,IAAIhB,WAAW,IAAIV,gBAAgB,EAAE;QACjC;MACJ;MACA,MAAMnI,MAAM,GAAG;QACXkF,cAAc,EAAE,CAACD,aAAa,CAAC;QAC/BF,OAAO,EAAEA,CAAA,KAAM,CAAE;MACrB,CAAC;MACD,MAAMsE,SAAS,GAAG,IAAI5H,eAAe,CAAC,CAAC;MACvC,MAAMqI,MAAM,GAAGA,CAAA,KAAM1G,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;MAC1CiG,SAAS,CAAC7D,GAAG,CAAC7D,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAACmI,IAAI,EAAED,MAAM,EAAE,IAAI,CAAC,CAAC;MACjFT,SAAS,CAAC7D,GAAG,CAACiD,gBAAgB,CAACb,aAAa,CAACc,KAAK,EAAE,KAAK,EAAE1I,MAAM,CAAC,CAAC;MACnEmI,gBAAgB,GAAGkB,SAAS;IAChC,CAAC;IACD;IACA,IAAIW,eAAe;IACnB,MAAMC,OAAO,GAAGhF,aAAa,CAACgF,OAAO,CAACC,WAAW,CAAC,CAAC;IACnD,IAAID,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,UAAU,EAAE;MAC/CD,eAAe,GAAGrI,qBAAqB,CAACsD,aAAa,EAAErD,SAAS,CAACuI,KAAK,EAAEN,OAAO,EAAE,IAAI,CAAC;IAC1F;IACA,MAAMpF,KAAK,GAAG;MACV2F,IAAI,EAAE3G,KAAK,IAAI;QACXL,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACxBqF,gBAAgB,CAAC,CAAC,EAAEhF,KAAK,EAAEI,SAAS,EAAEJ,KAAK,CAAC,CAAC,CAAC;MAClD,CAAC;MACD4G,IAAI,EAAEA,CAAA,KAAM;QACRjH,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;MACzB,CAAC;MACDwF,MAAM,EAAE,MAAAA,CAAO0B,UAAU,EAAEC,YAAY,KAAK;QACxC1C,OAAO,GAAGyC,UAAU;QACpB,MAAMlC,WAAW,EAAEQ,MAAM,CAACf,OAAO,EAAEhE,SAAS,EAAE0G,YAAY,CAAC;MAC/D,CAAC;MACDxF,OAAO,EAAEA,CAAA,KAAM;QACX,IAAI,CAAC9B,cAAc,CAACuH,MAAM,CAACvF,aAAa,CAAC;QACzC0E,mBAAmB,CAAC5E,OAAO,CAAC,CAAC;QAC7BkE,iBAAiB,CAAClE,OAAO,CAAC,CAAC;QAC3B+D,gBAAgB,CAAC/D,OAAO,CAAC,CAAC;QAC1BgE,cAAc,CAAChE,OAAO,CAAC,CAAC;QACxBiF,eAAe,EAAEjF,OAAO,CAAC,CAAC;QAC1B3B,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;MACzB;IACJ,CAAC;IACD,IAAI,CAACH,cAAc,CAACwH,GAAG,CAACxF,aAAa,EAAER,KAAK,CAAC;IAC7C,OAAOA,KAAK;EAChB;EACAiG,gBAAgBA,CAAC1K,MAAM,EAAE;IACrB,MAAMyE,KAAK,GAAG,IAAI,CAACxB,cAAc,CAAC0H,GAAG,CAAC3K,MAAM,CAAC;IAC7C,IAAIyE,KAAK,EAAE;MACPA,KAAK,CAAC2F,IAAI,CAAC,IAAI,CAAC;IACpB;EACJ;EACArF,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC9B,cAAc,CAAC2H,OAAO,CAACnG,KAAK,IAAIA,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC;IACrD,KAAK,CAACA,OAAO,CAAC,CAAC;EACnB;AACJ,CAAC;AACDrC,YAAY,GAAG5C,UAAU,CAAC,CACtBgB,OAAO,CAAC,CAAC,EAAEQ,qBAAqB,CAAC,EACjCR,OAAO,CAAC,CAAC,EAAEO,mBAAmB,CAAC,EAC/BP,OAAO,CAAC,CAAC,EAAEoB,kBAAkB,CAAC,EAC9BpB,OAAO,CAAC,CAAC,EAAEuB,cAAc,CAAC,EAC1BvB,OAAO,CAAC,CAAC,EAAEsB,qBAAqB,CAAC,CACpC,EAAEM,YAAY,CAAC;AAChB,SAASA,YAAY;AACrB,SAASiB,uBAAuBA,CAACH,OAAO,EAAE;EACtC,IAAIA,OAAO,KAAKK,SAAS,EAAE;IACvB,OAAOA,SAAS;EACpB;EACA,OAAOL,OAAO,EAAEqH,EAAE,IAAIrH,OAAO;AACjC;AACA,MAAM6B,wBAAwB,CAAC;EAC3B,IAAIyF,cAAcA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM;EAC7B;EACArI,WAAWA,CAACoI,MAAM,EAAEE,MAAM,GAAG,KAAK,EAAE;IAChC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,MAAM,GAAGA,MAAM;IACpB;IACA,IAAI,CAACC,KAAK,GAAG,CAAC;EAClB;EACAC,MAAMA,CAACnG,SAAS,EAAE;IACd,IAAI,CAAC+F,MAAM,CAACI,MAAM,CAACnG,SAAS,CAAC;IAC7B,IAAI,IAAI,CAACiG,MAAM,EAAE;MACb,IAAI,CAACF,MAAM,CAACtH,KAAK,CAAC,CAAC;IACvB;IACA,OAAO,IAAI,CAACsH,MAAM;EACtB;EACAK,SAASA,CAAA,EAAG;IACR,OAAO;MACH5B,CAAC,EAAE,IAAI,CAACuB,MAAM,CAACvB,CAAC;MAChB6B,CAAC,EAAE,IAAI,CAACN,MAAM,CAACM;IACnB,CAAC;EACL;EACA9F,MAAMA,CAAA,EAAG;IACL,IAAI,CAACwF,MAAM,CAACxF,MAAM,CAAC,CAAC;EACxB;AACJ;AACA,SAASkE,qBAAqBA,CAAC5D,OAAO,EAAEyF,WAAW,EAAE;EACjDA,WAAW,GAAGA,WAAW,IAAItJ,SAAS,CAAC6D,OAAO,CAAC,CAACJ,QAAQ,CAAC8F,IAAI;EAC7D,OAAO,CAAC1F,OAAO,CAAC2F,YAAY,CAAC,cAAc,CAAC,IAAI3F,OAAO,KAAKyF,WAAW,EAAE;IACrEzF,OAAO,GAAGA,OAAO,CAAC4F,aAAa;EACnC;EACA,OAAO5F,OAAO;AAClB;AACA5E,iBAAiB,CAACG,aAAa,EAAEsB,YAAY,EAAE,CAAC,CAAC,+BAA+B,CAAC;AACjFxB,0BAA0B,CAAC,CAACwK,KAAK,EAAEC,SAAS,KAAK;EAC7C,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAAC1K,iBAAiB,CAAC;EACrD,IAAIyK,WAAW,EAAE;IACbD,SAAS,CAACG,OAAO,CAAC,uGAAuGF,WAAW,CAACG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3JJ,SAAS,CAACG,OAAO,CAAC,iEAAiEF,WAAW,CAACG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC;EACzH;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}