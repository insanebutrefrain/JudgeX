{"ast":null,"code":"var _MenuId, _MenuRegistryChangeEvent;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n  return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n  return item.submenu !== undefined;\n}\nexport class MenuId {\n  /**\n   * Create a new `MenuId` with the unique identifier. Will throw if a menu\n   * with the identifier already exists, use `MenuId.for(ident)` or a unique\n   * identifier\n   */\n  constructor(identifier) {\n    if (MenuId._instances.has(identifier)) {\n      throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n    }\n    MenuId._instances.set(identifier, this);\n    this.id = identifier;\n  }\n}\n_MenuId = MenuId;\n_MenuId._instances = new Map();\n_MenuId.CommandPalette = new _MenuId('CommandPalette');\n_MenuId.DebugBreakpointsContext = new _MenuId('DebugBreakpointsContext');\n_MenuId.DebugCallStackContext = new _MenuId('DebugCallStackContext');\n_MenuId.DebugConsoleContext = new _MenuId('DebugConsoleContext');\n_MenuId.DebugVariablesContext = new _MenuId('DebugVariablesContext');\n_MenuId.NotebookVariablesContext = new _MenuId('NotebookVariablesContext');\n_MenuId.DebugHoverContext = new _MenuId('DebugHoverContext');\n_MenuId.DebugWatchContext = new _MenuId('DebugWatchContext');\n_MenuId.DebugToolBar = new _MenuId('DebugToolBar');\n_MenuId.DebugToolBarStop = new _MenuId('DebugToolBarStop');\n_MenuId.DebugCallStackToolbar = new _MenuId('DebugCallStackToolbar');\n_MenuId.DebugCreateConfiguration = new _MenuId('DebugCreateConfiguration');\n_MenuId.EditorContext = new _MenuId('EditorContext');\n_MenuId.SimpleEditorContext = new _MenuId('SimpleEditorContext');\n_MenuId.EditorContent = new _MenuId('EditorContent');\n_MenuId.EditorLineNumberContext = new _MenuId('EditorLineNumberContext');\n_MenuId.EditorContextCopy = new _MenuId('EditorContextCopy');\n_MenuId.EditorContextPeek = new _MenuId('EditorContextPeek');\n_MenuId.EditorContextShare = new _MenuId('EditorContextShare');\n_MenuId.EditorTitle = new _MenuId('EditorTitle');\n_MenuId.EditorTitleRun = new _MenuId('EditorTitleRun');\n_MenuId.EditorTitleContext = new _MenuId('EditorTitleContext');\n_MenuId.EditorTitleContextShare = new _MenuId('EditorTitleContextShare');\n_MenuId.EmptyEditorGroup = new _MenuId('EmptyEditorGroup');\n_MenuId.EmptyEditorGroupContext = new _MenuId('EmptyEditorGroupContext');\n_MenuId.EditorTabsBarContext = new _MenuId('EditorTabsBarContext');\n_MenuId.EditorTabsBarShowTabsSubmenu = new _MenuId('EditorTabsBarShowTabsSubmenu');\n_MenuId.EditorTabsBarShowTabsZenModeSubmenu = new _MenuId('EditorTabsBarShowTabsZenModeSubmenu');\n_MenuId.EditorActionsPositionSubmenu = new _MenuId('EditorActionsPositionSubmenu');\n_MenuId.ExplorerContext = new _MenuId('ExplorerContext');\n_MenuId.ExplorerContextShare = new _MenuId('ExplorerContextShare');\n_MenuId.ExtensionContext = new _MenuId('ExtensionContext');\n_MenuId.GlobalActivity = new _MenuId('GlobalActivity');\n_MenuId.CommandCenter = new _MenuId('CommandCenter');\n_MenuId.CommandCenterCenter = new _MenuId('CommandCenterCenter');\n_MenuId.LayoutControlMenuSubmenu = new _MenuId('LayoutControlMenuSubmenu');\n_MenuId.LayoutControlMenu = new _MenuId('LayoutControlMenu');\n_MenuId.MenubarMainMenu = new _MenuId('MenubarMainMenu');\n_MenuId.MenubarAppearanceMenu = new _MenuId('MenubarAppearanceMenu');\n_MenuId.MenubarDebugMenu = new _MenuId('MenubarDebugMenu');\n_MenuId.MenubarEditMenu = new _MenuId('MenubarEditMenu');\n_MenuId.MenubarCopy = new _MenuId('MenubarCopy');\n_MenuId.MenubarFileMenu = new _MenuId('MenubarFileMenu');\n_MenuId.MenubarGoMenu = new _MenuId('MenubarGoMenu');\n_MenuId.MenubarHelpMenu = new _MenuId('MenubarHelpMenu');\n_MenuId.MenubarLayoutMenu = new _MenuId('MenubarLayoutMenu');\n_MenuId.MenubarNewBreakpointMenu = new _MenuId('MenubarNewBreakpointMenu');\n_MenuId.PanelAlignmentMenu = new _MenuId('PanelAlignmentMenu');\n_MenuId.PanelPositionMenu = new _MenuId('PanelPositionMenu');\n_MenuId.ActivityBarPositionMenu = new _MenuId('ActivityBarPositionMenu');\n_MenuId.MenubarPreferencesMenu = new _MenuId('MenubarPreferencesMenu');\n_MenuId.MenubarRecentMenu = new _MenuId('MenubarRecentMenu');\n_MenuId.MenubarSelectionMenu = new _MenuId('MenubarSelectionMenu');\n_MenuId.MenubarShare = new _MenuId('MenubarShare');\n_MenuId.MenubarSwitchEditorMenu = new _MenuId('MenubarSwitchEditorMenu');\n_MenuId.MenubarSwitchGroupMenu = new _MenuId('MenubarSwitchGroupMenu');\n_MenuId.MenubarTerminalMenu = new _MenuId('MenubarTerminalMenu');\n_MenuId.MenubarViewMenu = new _MenuId('MenubarViewMenu');\n_MenuId.MenubarHomeMenu = new _MenuId('MenubarHomeMenu');\n_MenuId.OpenEditorsContext = new _MenuId('OpenEditorsContext');\n_MenuId.OpenEditorsContextShare = new _MenuId('OpenEditorsContextShare');\n_MenuId.ProblemsPanelContext = new _MenuId('ProblemsPanelContext');\n_MenuId.SCMInputBox = new _MenuId('SCMInputBox');\n_MenuId.SCMChangesSeparator = new _MenuId('SCMChangesSeparator');\n_MenuId.SCMChangesContext = new _MenuId('SCMChangesContext');\n_MenuId.SCMIncomingChanges = new _MenuId('SCMIncomingChanges');\n_MenuId.SCMIncomingChangesContext = new _MenuId('SCMIncomingChangesContext');\n_MenuId.SCMIncomingChangesSetting = new _MenuId('SCMIncomingChangesSetting');\n_MenuId.SCMOutgoingChanges = new _MenuId('SCMOutgoingChanges');\n_MenuId.SCMOutgoingChangesContext = new _MenuId('SCMOutgoingChangesContext');\n_MenuId.SCMOutgoingChangesSetting = new _MenuId('SCMOutgoingChangesSetting');\n_MenuId.SCMIncomingChangesAllChangesContext = new _MenuId('SCMIncomingChangesAllChangesContext');\n_MenuId.SCMIncomingChangesHistoryItemContext = new _MenuId('SCMIncomingChangesHistoryItemContext');\n_MenuId.SCMOutgoingChangesAllChangesContext = new _MenuId('SCMOutgoingChangesAllChangesContext');\n_MenuId.SCMOutgoingChangesHistoryItemContext = new _MenuId('SCMOutgoingChangesHistoryItemContext');\n_MenuId.SCMChangeContext = new _MenuId('SCMChangeContext');\n_MenuId.SCMResourceContext = new _MenuId('SCMResourceContext');\n_MenuId.SCMResourceContextShare = new _MenuId('SCMResourceContextShare');\n_MenuId.SCMResourceFolderContext = new _MenuId('SCMResourceFolderContext');\n_MenuId.SCMResourceGroupContext = new _MenuId('SCMResourceGroupContext');\n_MenuId.SCMSourceControl = new _MenuId('SCMSourceControl');\n_MenuId.SCMSourceControlInline = new _MenuId('SCMSourceControlInline');\n_MenuId.SCMSourceControlTitle = new _MenuId('SCMSourceControlTitle');\n_MenuId.SCMHistoryTitle = new _MenuId('SCMHistoryTitle');\n_MenuId.SCMTitle = new _MenuId('SCMTitle');\n_MenuId.SearchContext = new _MenuId('SearchContext');\n_MenuId.SearchActionMenu = new _MenuId('SearchActionContext');\n_MenuId.StatusBarWindowIndicatorMenu = new _MenuId('StatusBarWindowIndicatorMenu');\n_MenuId.StatusBarRemoteIndicatorMenu = new _MenuId('StatusBarRemoteIndicatorMenu');\n_MenuId.StickyScrollContext = new _MenuId('StickyScrollContext');\n_MenuId.TestItem = new _MenuId('TestItem');\n_MenuId.TestItemGutter = new _MenuId('TestItemGutter');\n_MenuId.TestProfilesContext = new _MenuId('TestProfilesContext');\n_MenuId.TestMessageContext = new _MenuId('TestMessageContext');\n_MenuId.TestMessageContent = new _MenuId('TestMessageContent');\n_MenuId.TestPeekElement = new _MenuId('TestPeekElement');\n_MenuId.TestPeekTitle = new _MenuId('TestPeekTitle');\n_MenuId.TestCallStack = new _MenuId('TestCallStack');\n_MenuId.TouchBarContext = new _MenuId('TouchBarContext');\n_MenuId.TitleBarContext = new _MenuId('TitleBarContext');\n_MenuId.TitleBarTitleContext = new _MenuId('TitleBarTitleContext');\n_MenuId.TunnelContext = new _MenuId('TunnelContext');\n_MenuId.TunnelPrivacy = new _MenuId('TunnelPrivacy');\n_MenuId.TunnelProtocol = new _MenuId('TunnelProtocol');\n_MenuId.TunnelPortInline = new _MenuId('TunnelInline');\n_MenuId.TunnelTitle = new _MenuId('TunnelTitle');\n_MenuId.TunnelLocalAddressInline = new _MenuId('TunnelLocalAddressInline');\n_MenuId.TunnelOriginInline = new _MenuId('TunnelOriginInline');\n_MenuId.ViewItemContext = new _MenuId('ViewItemContext');\n_MenuId.ViewContainerTitle = new _MenuId('ViewContainerTitle');\n_MenuId.ViewContainerTitleContext = new _MenuId('ViewContainerTitleContext');\n_MenuId.ViewTitle = new _MenuId('ViewTitle');\n_MenuId.ViewTitleContext = new _MenuId('ViewTitleContext');\n_MenuId.CommentEditorActions = new _MenuId('CommentEditorActions');\n_MenuId.CommentThreadTitle = new _MenuId('CommentThreadTitle');\n_MenuId.CommentThreadActions = new _MenuId('CommentThreadActions');\n_MenuId.CommentThreadAdditionalActions = new _MenuId('CommentThreadAdditionalActions');\n_MenuId.CommentThreadTitleContext = new _MenuId('CommentThreadTitleContext');\n_MenuId.CommentThreadCommentContext = new _MenuId('CommentThreadCommentContext');\n_MenuId.CommentTitle = new _MenuId('CommentTitle');\n_MenuId.CommentActions = new _MenuId('CommentActions');\n_MenuId.CommentsViewThreadActions = new _MenuId('CommentsViewThreadActions');\n_MenuId.InteractiveToolbar = new _MenuId('InteractiveToolbar');\n_MenuId.InteractiveCellTitle = new _MenuId('InteractiveCellTitle');\n_MenuId.InteractiveCellDelete = new _MenuId('InteractiveCellDelete');\n_MenuId.InteractiveCellExecute = new _MenuId('InteractiveCellExecute');\n_MenuId.InteractiveInputExecute = new _MenuId('InteractiveInputExecute');\n_MenuId.InteractiveInputConfig = new _MenuId('InteractiveInputConfig');\n_MenuId.ReplInputExecute = new _MenuId('ReplInputExecute');\n_MenuId.IssueReporter = new _MenuId('IssueReporter');\n_MenuId.NotebookToolbar = new _MenuId('NotebookToolbar');\n_MenuId.NotebookStickyScrollContext = new _MenuId('NotebookStickyScrollContext');\n_MenuId.NotebookCellTitle = new _MenuId('NotebookCellTitle');\n_MenuId.NotebookCellDelete = new _MenuId('NotebookCellDelete');\n_MenuId.NotebookCellInsert = new _MenuId('NotebookCellInsert');\n_MenuId.NotebookCellBetween = new _MenuId('NotebookCellBetween');\n_MenuId.NotebookCellListTop = new _MenuId('NotebookCellTop');\n_MenuId.NotebookCellExecute = new _MenuId('NotebookCellExecute');\n_MenuId.NotebookCellExecuteGoTo = new _MenuId('NotebookCellExecuteGoTo');\n_MenuId.NotebookCellExecutePrimary = new _MenuId('NotebookCellExecutePrimary');\n_MenuId.NotebookDiffCellInputTitle = new _MenuId('NotebookDiffCellInputTitle');\n_MenuId.NotebookDiffCellMetadataTitle = new _MenuId('NotebookDiffCellMetadataTitle');\n_MenuId.NotebookDiffCellOutputsTitle = new _MenuId('NotebookDiffCellOutputsTitle');\n_MenuId.NotebookOutputToolbar = new _MenuId('NotebookOutputToolbar');\n_MenuId.NotebookOutlineFilter = new _MenuId('NotebookOutlineFilter');\n_MenuId.NotebookOutlineActionMenu = new _MenuId('NotebookOutlineActionMenu');\n_MenuId.NotebookEditorLayoutConfigure = new _MenuId('NotebookEditorLayoutConfigure');\n_MenuId.NotebookKernelSource = new _MenuId('NotebookKernelSource');\n_MenuId.BulkEditTitle = new _MenuId('BulkEditTitle');\n_MenuId.BulkEditContext = new _MenuId('BulkEditContext');\n_MenuId.TimelineItemContext = new _MenuId('TimelineItemContext');\n_MenuId.TimelineTitle = new _MenuId('TimelineTitle');\n_MenuId.TimelineTitleContext = new _MenuId('TimelineTitleContext');\n_MenuId.TimelineFilterSubMenu = new _MenuId('TimelineFilterSubMenu');\n_MenuId.AccountsContext = new _MenuId('AccountsContext');\n_MenuId.SidebarTitle = new _MenuId('SidebarTitle');\n_MenuId.PanelTitle = new _MenuId('PanelTitle');\n_MenuId.AuxiliaryBarTitle = new _MenuId('AuxiliaryBarTitle');\n_MenuId.AuxiliaryBarHeader = new _MenuId('AuxiliaryBarHeader');\n_MenuId.TerminalInstanceContext = new _MenuId('TerminalInstanceContext');\n_MenuId.TerminalEditorInstanceContext = new _MenuId('TerminalEditorInstanceContext');\n_MenuId.TerminalNewDropdownContext = new _MenuId('TerminalNewDropdownContext');\n_MenuId.TerminalTabContext = new _MenuId('TerminalTabContext');\n_MenuId.TerminalTabEmptyAreaContext = new _MenuId('TerminalTabEmptyAreaContext');\n_MenuId.TerminalStickyScrollContext = new _MenuId('TerminalStickyScrollContext');\n_MenuId.WebviewContext = new _MenuId('WebviewContext');\n_MenuId.InlineCompletionsActions = new _MenuId('InlineCompletionsActions');\n_MenuId.InlineEditsActions = new _MenuId('InlineEditsActions');\n_MenuId.InlineEditActions = new _MenuId('InlineEditActions');\n_MenuId.NewFile = new _MenuId('NewFile');\n_MenuId.MergeInput1Toolbar = new _MenuId('MergeToolbar1Toolbar');\n_MenuId.MergeInput2Toolbar = new _MenuId('MergeToolbar2Toolbar');\n_MenuId.MergeBaseToolbar = new _MenuId('MergeBaseToolbar');\n_MenuId.MergeInputResultToolbar = new _MenuId('MergeToolbarResultToolbar');\n_MenuId.InlineSuggestionToolbar = new _MenuId('InlineSuggestionToolbar');\n_MenuId.InlineEditToolbar = new _MenuId('InlineEditToolbar');\n_MenuId.ChatContext = new _MenuId('ChatContext');\n_MenuId.ChatCodeBlock = new _MenuId('ChatCodeblock');\n_MenuId.ChatCompareBlock = new _MenuId('ChatCompareBlock');\n_MenuId.ChatMessageTitle = new _MenuId('ChatMessageTitle');\n_MenuId.ChatExecute = new _MenuId('ChatExecute');\n_MenuId.ChatExecuteSecondary = new _MenuId('ChatExecuteSecondary');\n_MenuId.ChatInputSide = new _MenuId('ChatInputSide');\n_MenuId.AccessibleView = new _MenuId('AccessibleView');\n_MenuId.MultiDiffEditorFileToolbar = new _MenuId('MultiDiffEditorFileToolbar');\n_MenuId.DiffEditorHunkToolbar = new _MenuId('DiffEditorHunkToolbar');\n_MenuId.DiffEditorSelectionToolbar = new _MenuId('DiffEditorSelectionToolbar');\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n  static for(id) {\n    let value = this._all.get(id);\n    if (!value) {\n      value = new MenuRegistryChangeEvent(id);\n      this._all.set(id, value);\n    }\n    return value;\n  }\n  static merge(events) {\n    const ids = new Set();\n    for (const item of events) {\n      if (item instanceof MenuRegistryChangeEvent) {\n        ids.add(item.id);\n      }\n    }\n    return ids;\n  }\n  constructor(id) {\n    this.id = id;\n    this.has = candidate => candidate === id;\n  }\n}\n_MenuRegistryChangeEvent = MenuRegistryChangeEvent;\n_MenuRegistryChangeEvent._all = new Map();\nexport const MenuRegistry = new class {\n  constructor() {\n    this._commands = new Map();\n    this._menuItems = new Map();\n    this._onDidChangeMenu = new MicrotaskEmitter({\n      merge: MenuRegistryChangeEvent.merge\n    });\n    this.onDidChangeMenu = this._onDidChangeMenu.event;\n  }\n  addCommand(command) {\n    this._commands.set(command.id, command);\n    this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n    return toDisposable(() => {\n      if (this._commands.delete(command.id)) {\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n      }\n    });\n  }\n  getCommand(id) {\n    return this._commands.get(id);\n  }\n  getCommands() {\n    const map = new Map();\n    this._commands.forEach((value, key) => map.set(key, value));\n    return map;\n  }\n  appendMenuItem(id, item) {\n    let list = this._menuItems.get(id);\n    if (!list) {\n      list = new LinkedList();\n      this._menuItems.set(id, list);\n    }\n    const rm = list.push(item);\n    this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n    return toDisposable(() => {\n      rm();\n      this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n    });\n  }\n  appendMenuItems(items) {\n    const result = new DisposableStore();\n    for (const {\n      id,\n      item\n    } of items) {\n      result.add(this.appendMenuItem(id, item));\n    }\n    return result;\n  }\n  getMenuItems(id) {\n    let result;\n    if (this._menuItems.has(id)) {\n      result = [...this._menuItems.get(id)];\n    } else {\n      result = [];\n    }\n    if (id === MenuId.CommandPalette) {\n      // CommandPalette is special because it shows\n      // all commands by default\n      this._appendImplicitItems(result);\n    }\n    return result;\n  }\n  _appendImplicitItems(result) {\n    const set = new Set();\n    for (const item of result) {\n      if (isIMenuItem(item)) {\n        set.add(item.command.id);\n        if (item.alt) {\n          set.add(item.alt.id);\n        }\n      }\n    }\n    this._commands.forEach((command, id) => {\n      if (!set.has(id)) {\n        result.push({\n          command\n        });\n      }\n    });\n  }\n}();\nexport class SubmenuItemAction extends SubmenuAction {\n  constructor(item, hideActions, actions) {\n    super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n    this.item = item;\n    this.hideActions = hideActions;\n  }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n  static label(action, options) {\n    return options?.renderShortTitle && action.shortTitle ? typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value : typeof action.title === 'string' ? action.title : action.title.value;\n  }\n  constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n    this.hideActions = hideActions;\n    this.menuKeybinding = menuKeybinding;\n    this._commandService = _commandService;\n    this.id = item.id;\n    this.label = MenuItemAction_1.label(item, options);\n    this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n    this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n    this.checked = undefined;\n    let icon;\n    if (item.toggled) {\n      const toggled = item.toggled.condition ? item.toggled : {\n        condition: item.toggled\n      };\n      this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n      if (this.checked && toggled.tooltip) {\n        this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n      }\n      if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n        icon = toggled.icon;\n      }\n      if (this.checked && toggled.title) {\n        this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n      }\n    }\n    if (!icon) {\n      icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n    }\n    this.item = item;\n    this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n    this._options = options;\n    this.class = icon && ThemeIcon.asClassName(icon);\n  }\n  run(...args) {\n    let runArgs = [];\n    if (this._options?.arg) {\n      runArgs = [...runArgs, this._options.arg];\n    }\n    if (this._options?.shouldForwardArgs) {\n      runArgs = [...runArgs, ...args];\n    }\n    return this._commandService.executeCommand(this.id, ...runArgs);\n  }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([__param(5, IContextKeyService), __param(6, ICommandService)], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n  constructor(desc) {\n    this.desc = desc;\n  }\n}\nexport function registerAction2(ctor) {\n  const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n  const action = new ctor();\n  const {\n    f1,\n    menu,\n    keybinding,\n    ...command\n  } = action.desc;\n  if (CommandsRegistry.getCommand(command.id)) {\n    throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n  }\n  // command\n  disposables.push(CommandsRegistry.registerCommand({\n    id: command.id,\n    handler: (accessor, ...args) => action.run(accessor, ...args),\n    metadata: command.metadata\n  }));\n  // menu\n  if (Array.isArray(menu)) {\n    for (const item of menu) {\n      disposables.push(MenuRegistry.appendMenuItem(item.id, {\n        command: {\n          ...command,\n          precondition: item.precondition === null ? undefined : command.precondition\n        },\n        ...item\n      }));\n    }\n  } else if (menu) {\n    disposables.push(MenuRegistry.appendMenuItem(menu.id, {\n      command: {\n        ...command,\n        precondition: menu.precondition === null ? undefined : command.precondition\n      },\n      ...menu\n    }));\n  }\n  if (f1) {\n    disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n      command,\n      when: command.precondition\n    }));\n    disposables.push(MenuRegistry.addCommand(command));\n  }\n  // keybinding\n  if (Array.isArray(keybinding)) {\n    for (const item of keybinding) {\n      disposables.push(KeybindingsRegistry.registerKeybindingRule({\n        ...item,\n        id: command.id,\n        when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n      }));\n    }\n  } else if (keybinding) {\n    disposables.push(KeybindingsRegistry.registerKeybindingRule({\n      ...keybinding,\n      id: command.id,\n      when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n    }));\n  }\n  return {\n    dispose() {\n      dispose(disposables);\n    }\n  };\n}\n//#endregion","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","MenuItemAction_1","SubmenuAction","ThemeIcon","MicrotaskEmitter","DisposableStore","dispose","toDisposable","LinkedList","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","createDecorator","KeybindingsRegistry","isIMenuItem","item","command","undefined","isISubmenuItem","submenu","MenuId","constructor","identifier","_instances","has","TypeError","set","id","_MenuId","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","NotebookVariablesContext","DebugHoverContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","DebugCallStackToolbar","DebugCreateConfiguration","EditorContext","SimpleEditorContext","EditorContent","EditorLineNumberContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EditorTitleContextShare","EmptyEditorGroup","EmptyEditorGroupContext","EditorTabsBarContext","EditorTabsBarShowTabsSubmenu","EditorTabsBarShowTabsZenModeSubmenu","EditorActionsPositionSubmenu","ExplorerContext","ExplorerContextShare","ExtensionContext","GlobalActivity","CommandCenter","CommandCenterCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","PanelAlignmentMenu","PanelPositionMenu","ActivityBarPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","OpenEditorsContextShare","ProblemsPanelContext","SCMInputBox","SCMChangesSeparator","SCMChangesContext","SCMIncomingChanges","SCMIncomingChangesContext","SCMIncomingChangesSetting","SCMOutgoingChanges","SCMOutgoingChangesContext","SCMOutgoingChangesSetting","SCMIncomingChangesAllChangesContext","SCMIncomingChangesHistoryItemContext","SCMOutgoingChangesAllChangesContext","SCMOutgoingChangesHistoryItemContext","SCMChangeContext","SCMResourceContext","SCMResourceContextShare","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMSourceControlInline","SCMSourceControlTitle","SCMHistoryTitle","SCMTitle","SearchContext","SearchActionMenu","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","StickyScrollContext","TestItem","TestItemGutter","TestProfilesContext","TestMessageContext","TestMessageContent","TestPeekElement","TestPeekTitle","TestCallStack","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentEditorActions","CommentThreadTitle","CommentThreadActions","CommentThreadAdditionalActions","CommentThreadTitleContext","CommentThreadCommentContext","CommentTitle","CommentActions","CommentsViewThreadActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","InteractiveInputConfig","ReplInputExecute","IssueReporter","NotebookToolbar","NotebookStickyScrollContext","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecuteGoTo","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookOutlineFilter","NotebookOutlineActionMenu","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","SidebarTitle","PanelTitle","AuxiliaryBarTitle","AuxiliaryBarHeader","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","TerminalStickyScrollContext","WebviewContext","InlineCompletionsActions","InlineEditsActions","InlineEditActions","NewFile","MergeInput1Toolbar","MergeInput2Toolbar","MergeBaseToolbar","MergeInputResultToolbar","InlineSuggestionToolbar","InlineEditToolbar","ChatContext","ChatCodeBlock","ChatCompareBlock","ChatMessageTitle","ChatExecute","ChatExecuteSecondary","ChatInputSide","AccessibleView","MultiDiffEditorFileToolbar","DiffEditorHunkToolbar","DiffEditorSelectionToolbar","IMenuService","MenuRegistryChangeEvent","for","value","_all","get","merge","events","ids","Set","add","candidate","_MenuRegistryChangeEvent","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","onDidChangeMenu","event","addCommand","fire","delete","getCommand","getCommands","map","forEach","appendMenuItem","list","rm","push","appendMenuItems","items","result","getMenuItems","_appendImplicitItems","alt","SubmenuItemAction","hideActions","actions","title","MenuItemAction","label","action","options","renderShortTitle","shortTitle","menuKeybinding","contextKeyService","_commandService","tooltip","enabled","precondition","contextMatchesRules","checked","icon","toggled","condition","isThemeIcon","_options","class","asClassName","run","args","runArgs","arg","shouldForwardArgs","executeCommand","Action2","registerAction2","ctor","disposables","f1","menu","keybinding","Error","registerCommand","handler","accessor","metadata","Array","isArray","when","registerKeybindingRule","and"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    static { this._instances = new Map(); }\n    static { this.CommandPalette = new MenuId('CommandPalette'); }\n    static { this.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext'); }\n    static { this.DebugCallStackContext = new MenuId('DebugCallStackContext'); }\n    static { this.DebugConsoleContext = new MenuId('DebugConsoleContext'); }\n    static { this.DebugVariablesContext = new MenuId('DebugVariablesContext'); }\n    static { this.NotebookVariablesContext = new MenuId('NotebookVariablesContext'); }\n    static { this.DebugHoverContext = new MenuId('DebugHoverContext'); }\n    static { this.DebugWatchContext = new MenuId('DebugWatchContext'); }\n    static { this.DebugToolBar = new MenuId('DebugToolBar'); }\n    static { this.DebugToolBarStop = new MenuId('DebugToolBarStop'); }\n    static { this.DebugCallStackToolbar = new MenuId('DebugCallStackToolbar'); }\n    static { this.DebugCreateConfiguration = new MenuId('DebugCreateConfiguration'); }\n    static { this.EditorContext = new MenuId('EditorContext'); }\n    static { this.SimpleEditorContext = new MenuId('SimpleEditorContext'); }\n    static { this.EditorContent = new MenuId('EditorContent'); }\n    static { this.EditorLineNumberContext = new MenuId('EditorLineNumberContext'); }\n    static { this.EditorContextCopy = new MenuId('EditorContextCopy'); }\n    static { this.EditorContextPeek = new MenuId('EditorContextPeek'); }\n    static { this.EditorContextShare = new MenuId('EditorContextShare'); }\n    static { this.EditorTitle = new MenuId('EditorTitle'); }\n    static { this.EditorTitleRun = new MenuId('EditorTitleRun'); }\n    static { this.EditorTitleContext = new MenuId('EditorTitleContext'); }\n    static { this.EditorTitleContextShare = new MenuId('EditorTitleContextShare'); }\n    static { this.EmptyEditorGroup = new MenuId('EmptyEditorGroup'); }\n    static { this.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext'); }\n    static { this.EditorTabsBarContext = new MenuId('EditorTabsBarContext'); }\n    static { this.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu'); }\n    static { this.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu'); }\n    static { this.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu'); }\n    static { this.ExplorerContext = new MenuId('ExplorerContext'); }\n    static { this.ExplorerContextShare = new MenuId('ExplorerContextShare'); }\n    static { this.ExtensionContext = new MenuId('ExtensionContext'); }\n    static { this.GlobalActivity = new MenuId('GlobalActivity'); }\n    static { this.CommandCenter = new MenuId('CommandCenter'); }\n    static { this.CommandCenterCenter = new MenuId('CommandCenterCenter'); }\n    static { this.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu'); }\n    static { this.LayoutControlMenu = new MenuId('LayoutControlMenu'); }\n    static { this.MenubarMainMenu = new MenuId('MenubarMainMenu'); }\n    static { this.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu'); }\n    static { this.MenubarDebugMenu = new MenuId('MenubarDebugMenu'); }\n    static { this.MenubarEditMenu = new MenuId('MenubarEditMenu'); }\n    static { this.MenubarCopy = new MenuId('MenubarCopy'); }\n    static { this.MenubarFileMenu = new MenuId('MenubarFileMenu'); }\n    static { this.MenubarGoMenu = new MenuId('MenubarGoMenu'); }\n    static { this.MenubarHelpMenu = new MenuId('MenubarHelpMenu'); }\n    static { this.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu'); }\n    static { this.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu'); }\n    static { this.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu'); }\n    static { this.PanelPositionMenu = new MenuId('PanelPositionMenu'); }\n    static { this.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu'); }\n    static { this.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu'); }\n    static { this.MenubarRecentMenu = new MenuId('MenubarRecentMenu'); }\n    static { this.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu'); }\n    static { this.MenubarShare = new MenuId('MenubarShare'); }\n    static { this.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu'); }\n    static { this.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu'); }\n    static { this.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu'); }\n    static { this.MenubarViewMenu = new MenuId('MenubarViewMenu'); }\n    static { this.MenubarHomeMenu = new MenuId('MenubarHomeMenu'); }\n    static { this.OpenEditorsContext = new MenuId('OpenEditorsContext'); }\n    static { this.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare'); }\n    static { this.ProblemsPanelContext = new MenuId('ProblemsPanelContext'); }\n    static { this.SCMInputBox = new MenuId('SCMInputBox'); }\n    static { this.SCMChangesSeparator = new MenuId('SCMChangesSeparator'); }\n    static { this.SCMChangesContext = new MenuId('SCMChangesContext'); }\n    static { this.SCMIncomingChanges = new MenuId('SCMIncomingChanges'); }\n    static { this.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext'); }\n    static { this.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting'); }\n    static { this.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges'); }\n    static { this.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext'); }\n    static { this.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting'); }\n    static { this.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext'); }\n    static { this.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext'); }\n    static { this.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext'); }\n    static { this.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext'); }\n    static { this.SCMChangeContext = new MenuId('SCMChangeContext'); }\n    static { this.SCMResourceContext = new MenuId('SCMResourceContext'); }\n    static { this.SCMResourceContextShare = new MenuId('SCMResourceContextShare'); }\n    static { this.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext'); }\n    static { this.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext'); }\n    static { this.SCMSourceControl = new MenuId('SCMSourceControl'); }\n    static { this.SCMSourceControlInline = new MenuId('SCMSourceControlInline'); }\n    static { this.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle'); }\n    static { this.SCMHistoryTitle = new MenuId('SCMHistoryTitle'); }\n    static { this.SCMTitle = new MenuId('SCMTitle'); }\n    static { this.SearchContext = new MenuId('SearchContext'); }\n    static { this.SearchActionMenu = new MenuId('SearchActionContext'); }\n    static { this.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu'); }\n    static { this.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu'); }\n    static { this.StickyScrollContext = new MenuId('StickyScrollContext'); }\n    static { this.TestItem = new MenuId('TestItem'); }\n    static { this.TestItemGutter = new MenuId('TestItemGutter'); }\n    static { this.TestProfilesContext = new MenuId('TestProfilesContext'); }\n    static { this.TestMessageContext = new MenuId('TestMessageContext'); }\n    static { this.TestMessageContent = new MenuId('TestMessageContent'); }\n    static { this.TestPeekElement = new MenuId('TestPeekElement'); }\n    static { this.TestPeekTitle = new MenuId('TestPeekTitle'); }\n    static { this.TestCallStack = new MenuId('TestCallStack'); }\n    static { this.TouchBarContext = new MenuId('TouchBarContext'); }\n    static { this.TitleBarContext = new MenuId('TitleBarContext'); }\n    static { this.TitleBarTitleContext = new MenuId('TitleBarTitleContext'); }\n    static { this.TunnelContext = new MenuId('TunnelContext'); }\n    static { this.TunnelPrivacy = new MenuId('TunnelPrivacy'); }\n    static { this.TunnelProtocol = new MenuId('TunnelProtocol'); }\n    static { this.TunnelPortInline = new MenuId('TunnelInline'); }\n    static { this.TunnelTitle = new MenuId('TunnelTitle'); }\n    static { this.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline'); }\n    static { this.TunnelOriginInline = new MenuId('TunnelOriginInline'); }\n    static { this.ViewItemContext = new MenuId('ViewItemContext'); }\n    static { this.ViewContainerTitle = new MenuId('ViewContainerTitle'); }\n    static { this.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext'); }\n    static { this.ViewTitle = new MenuId('ViewTitle'); }\n    static { this.ViewTitleContext = new MenuId('ViewTitleContext'); }\n    static { this.CommentEditorActions = new MenuId('CommentEditorActions'); }\n    static { this.CommentThreadTitle = new MenuId('CommentThreadTitle'); }\n    static { this.CommentThreadActions = new MenuId('CommentThreadActions'); }\n    static { this.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions'); }\n    static { this.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext'); }\n    static { this.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext'); }\n    static { this.CommentTitle = new MenuId('CommentTitle'); }\n    static { this.CommentActions = new MenuId('CommentActions'); }\n    static { this.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions'); }\n    static { this.InteractiveToolbar = new MenuId('InteractiveToolbar'); }\n    static { this.InteractiveCellTitle = new MenuId('InteractiveCellTitle'); }\n    static { this.InteractiveCellDelete = new MenuId('InteractiveCellDelete'); }\n    static { this.InteractiveCellExecute = new MenuId('InteractiveCellExecute'); }\n    static { this.InteractiveInputExecute = new MenuId('InteractiveInputExecute'); }\n    static { this.InteractiveInputConfig = new MenuId('InteractiveInputConfig'); }\n    static { this.ReplInputExecute = new MenuId('ReplInputExecute'); }\n    static { this.IssueReporter = new MenuId('IssueReporter'); }\n    static { this.NotebookToolbar = new MenuId('NotebookToolbar'); }\n    static { this.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext'); }\n    static { this.NotebookCellTitle = new MenuId('NotebookCellTitle'); }\n    static { this.NotebookCellDelete = new MenuId('NotebookCellDelete'); }\n    static { this.NotebookCellInsert = new MenuId('NotebookCellInsert'); }\n    static { this.NotebookCellBetween = new MenuId('NotebookCellBetween'); }\n    static { this.NotebookCellListTop = new MenuId('NotebookCellTop'); }\n    static { this.NotebookCellExecute = new MenuId('NotebookCellExecute'); }\n    static { this.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo'); }\n    static { this.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary'); }\n    static { this.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle'); }\n    static { this.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle'); }\n    static { this.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle'); }\n    static { this.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar'); }\n    static { this.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter'); }\n    static { this.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu'); }\n    static { this.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure'); }\n    static { this.NotebookKernelSource = new MenuId('NotebookKernelSource'); }\n    static { this.BulkEditTitle = new MenuId('BulkEditTitle'); }\n    static { this.BulkEditContext = new MenuId('BulkEditContext'); }\n    static { this.TimelineItemContext = new MenuId('TimelineItemContext'); }\n    static { this.TimelineTitle = new MenuId('TimelineTitle'); }\n    static { this.TimelineTitleContext = new MenuId('TimelineTitleContext'); }\n    static { this.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu'); }\n    static { this.AccountsContext = new MenuId('AccountsContext'); }\n    static { this.SidebarTitle = new MenuId('SidebarTitle'); }\n    static { this.PanelTitle = new MenuId('PanelTitle'); }\n    static { this.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle'); }\n    static { this.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader'); }\n    static { this.TerminalInstanceContext = new MenuId('TerminalInstanceContext'); }\n    static { this.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext'); }\n    static { this.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext'); }\n    static { this.TerminalTabContext = new MenuId('TerminalTabContext'); }\n    static { this.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext'); }\n    static { this.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext'); }\n    static { this.WebviewContext = new MenuId('WebviewContext'); }\n    static { this.InlineCompletionsActions = new MenuId('InlineCompletionsActions'); }\n    static { this.InlineEditsActions = new MenuId('InlineEditsActions'); }\n    static { this.InlineEditActions = new MenuId('InlineEditActions'); }\n    static { this.NewFile = new MenuId('NewFile'); }\n    static { this.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar'); }\n    static { this.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar'); }\n    static { this.MergeBaseToolbar = new MenuId('MergeBaseToolbar'); }\n    static { this.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar'); }\n    static { this.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar'); }\n    static { this.InlineEditToolbar = new MenuId('InlineEditToolbar'); }\n    static { this.ChatContext = new MenuId('ChatContext'); }\n    static { this.ChatCodeBlock = new MenuId('ChatCodeblock'); }\n    static { this.ChatCompareBlock = new MenuId('ChatCompareBlock'); }\n    static { this.ChatMessageTitle = new MenuId('ChatMessageTitle'); }\n    static { this.ChatExecute = new MenuId('ChatExecute'); }\n    static { this.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary'); }\n    static { this.ChatInputSide = new MenuId('ChatInputSide'); }\n    static { this.AccessibleView = new MenuId('AccessibleView'); }\n    static { this.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar'); }\n    static { this.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar'); }\n    static { this.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar'); }\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static { this._all = new Map(); }\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return options?.renderShortTitle && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n        this.hideActions = hideActions;\n        this.menuKeybinding = menuKeybinding;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        let runArgs = [];\n        if (this._options?.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if (this._options?.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n    const action = new ctor();\n    const { f1, menu, keybinding, ...command } = action.desc;\n    if (CommandsRegistry.getCommand(command.id)) {\n        throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n    }\n    // command\n    disposables.push(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        metadata: command.metadata,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n        }\n    }\n    else if (menu) {\n        disposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n    }\n    if (f1) {\n        disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.push(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.push(KeybindingsRegistry.registerKeybindingRule({\n                ...item,\n                id: command.id,\n                when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n            }));\n        }\n    }\n    else if (keybinding) {\n        disposables.push(KeybindingsRegistry.registerKeybindingRule({\n            ...keybinding,\n            id: command.id,\n            when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n        }));\n    }\n    return {\n        dispose() {\n            dispose(disposables);\n        }\n    };\n}\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}