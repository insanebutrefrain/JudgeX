{"ast":null,"code":"import { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nconst COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nconst BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      default: 99\n    },\n    offset: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: value => {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      status,\n      color,\n      dotStyle,\n      offset,\n      text,\n      dot,\n      maxCount,\n      count\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"badge\");\n    const wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots.default);\n    const computedStyleRef = computed(() => {\n      const computedDotStyle = {\n        ...((dotStyle == null ? void 0 : dotStyle.value) || {})\n      };\n      const [leftOffset, topOffset] = (offset == null ? void 0 : offset.value) || [];\n      if (leftOffset) {\n        computedDotStyle.marginRight = `${-leftOffset}px`;\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = `${topOffset}px`;\n      }\n      const computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      const mergedStyle = {\n        ...computedColorStyle,\n        ...computedDotStyle\n      };\n      return {\n        mergedStyle,\n        computedDotStyle,\n        computedColorStyle\n      };\n    });\n    const getDot = () => {\n      const textValue = text == null ? void 0 : text.value;\n      const colorValue = color == null ? void 0 : color.value;\n      const statusValue = status == null ? void 0 : status.value;\n      const dotValue = dot == null ? void 0 : dot.value;\n      const countValue = Number(count == null ? void 0 : count.value);\n      const hasCount = (count == null ? void 0 : count.value) != null;\n      const {\n        computedDotStyle,\n        mergedStyle\n      } = computedStyleRef.value;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-custom-dot`,\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-text`,\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-wrapper`\n        }, [createVNode(\"span\", {\n          \"class\": [`${prefixCls}-status-dot`, {\n            [`${prefixCls}-status-${statusValue}`]: statusValue,\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-text`\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [`${prefixCls}-dot`, {\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": `${prefixCls}-number`,\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? `${maxCount.value}+` : countValue])]);\n    };\n    return () => {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots.default && slots.default(), getDot()]);\n    };\n  }\n});\nconst useWrapperClass = (prefixCls, status, children) => {\n  return computed(() => [prefixCls, {\n    [`${prefixCls}-status`]: status,\n    [`${prefixCls}-no-children`]: !children\n  }]);\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };","map":{"version":3,"names":["defineComponent","toRefs","computed","createVNode","getPrefixCls","COLORS","BADGE_STATUSES","_Badge","name","props","text","type","String","dot","Boolean","dotStyle","Object","maxCount","Number","default","offset","Array","color","status","validator","value","includes","count","setup","slots","prefixCls","wrapperClassName","useWrapperClass","computedStyleRef","computedDotStyle","leftOffset","topOffset","marginRight","marginTop","computedColorStyle","backgroundColor","mergedStyle","getDot","textValue","colorValue","statusValue","dotValue","countValue","hasCount","content","children"],"sources":["P:/IDEA/JudgeX/judgex_front/node_modules/@arco-design/web-vue/es/badge/badge.js"],"sourcesContent":["import { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nconst COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nconst BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      default: 99\n    },\n    offset: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: (value) => {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      status,\n      color,\n      dotStyle,\n      offset,\n      text,\n      dot,\n      maxCount,\n      count\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"badge\");\n    const wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots.default);\n    const computedStyleRef = computed(() => {\n      const computedDotStyle = {\n        ...(dotStyle == null ? void 0 : dotStyle.value) || {}\n      };\n      const [leftOffset, topOffset] = (offset == null ? void 0 : offset.value) || [];\n      if (leftOffset) {\n        computedDotStyle.marginRight = `${-leftOffset}px`;\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = `${topOffset}px`;\n      }\n      const computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      const mergedStyle = {\n        ...computedColorStyle,\n        ...computedDotStyle\n      };\n      return {\n        mergedStyle,\n        computedDotStyle,\n        computedColorStyle\n      };\n    });\n    const getDot = () => {\n      const textValue = text == null ? void 0 : text.value;\n      const colorValue = color == null ? void 0 : color.value;\n      const statusValue = status == null ? void 0 : status.value;\n      const dotValue = dot == null ? void 0 : dot.value;\n      const countValue = Number(count == null ? void 0 : count.value);\n      const hasCount = (count == null ? void 0 : count.value) != null;\n      const {\n        computedDotStyle,\n        mergedStyle\n      } = computedStyleRef.value;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-custom-dot`,\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-text`,\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-wrapper`\n        }, [createVNode(\"span\", {\n          \"class\": [`${prefixCls}-status-dot`, {\n            [`${prefixCls}-status-${statusValue}`]: statusValue,\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-text`\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [`${prefixCls}-dot`, {\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": `${prefixCls}-number`,\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? `${maxCount.value}+` : countValue])]);\n    };\n    return () => {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots.default && slots.default(), getDot()]);\n    };\n  }\n});\nconst useWrapperClass = (prefixCls, status, children) => {\n  return computed(() => [prefixCls, {\n    [`${prefixCls}-status`]: status,\n    [`${prefixCls}-no-children`]: !children\n  }]);\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}