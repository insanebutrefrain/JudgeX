{"ast":null,"code":"var _InlineEditsModel;\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineEditsModel_1;\nimport { timeout } from '../../../../base/common/async.js';\nimport { CancellationToken, cancelOnDispose } from '../../../../base/common/cancellation.js';\nimport { itemsEquals, structuralEquals } from '../../../../base/common/equals.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ObservablePromise, derived, derivedHandleChanges, derivedOpts, disposableObservableValue, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { provideInlineCompletions } from '../../inlineCompletions/browser/model/provideInlineCompletions.js';\nimport { InlineEdit } from './inlineEditsWidget.js';\nlet InlineEditsModel = (_InlineEditsModel = class InlineEditsModel extends Disposable {\n  static _createUniqueUri() {\n    return URI.from({\n      scheme: 'inline-edits',\n      path: new Date().toString() + String(InlineEditsModel_1._modelId++)\n    });\n  }\n  constructor(textModel, _textModelVersionId, _selection, _debounceValue, languageFeaturesService, _diffProviderFactoryService, _modelService) {\n    super();\n    this.textModel = textModel;\n    this._textModelVersionId = _textModelVersionId;\n    this._selection = _selection;\n    this._debounceValue = _debounceValue;\n    this.languageFeaturesService = languageFeaturesService;\n    this._diffProviderFactoryService = _diffProviderFactoryService;\n    this._modelService = _modelService;\n    this._forceUpdateExplicitlySignal = observableSignal(this);\n    // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n    this._selectedInlineCompletionId = observableValue(this, undefined);\n    this._isActive = observableValue(this, false);\n    this._originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel_1._createUniqueUri())).keepObserved(this._store);\n    this._modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel_1._createUniqueUri())).keepObserved(this._store);\n    this._pinnedRange = new TrackedRange(this.textModel, this._textModelVersionId);\n    this.isPinned = this._pinnedRange.range.map(range => !!range);\n    this.userPrompt = observableValue(this, undefined);\n    this.inlineEdit = derived(this, reader => {\n      return this._inlineEdit.read(reader)?.promiseResult.read(reader)?.data;\n    });\n    this._inlineEdit = derived(this, reader => {\n      const edit = this.selectedInlineEdit.read(reader);\n      if (!edit) {\n        return undefined;\n      }\n      const range = edit.inlineCompletion.range;\n      if (edit.inlineCompletion.insertText.trim() === '') {\n        return undefined;\n      }\n      let newLines = edit.inlineCompletion.insertText.split(/\\r\\n|\\r|\\n/);\n      function removeIndentation(lines) {\n        const indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n        return lines.map(l => l.replace(new RegExp('^' + indentation), ''));\n      }\n      newLines = removeIndentation(newLines);\n      const existing = this.textModel.getValueInRange(range);\n      let existingLines = existing.split(/\\r\\n|\\r|\\n/);\n      existingLines = removeIndentation(existingLines);\n      this._originalModel.get().setValue(existingLines.join('\\n'));\n      this._modifiedModel.get().setValue(newLines.join('\\n'));\n      const d = this._diffProviderFactoryService.createDiffProvider({\n        diffAlgorithm: 'advanced'\n      });\n      return ObservablePromise.fromFn(async () => {\n        const result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n          computeMoves: false,\n          ignoreTrimWhitespace: false,\n          maxComputationTimeMs: 1000\n        }, CancellationToken.None);\n        if (result.identical) {\n          return undefined;\n        }\n        return new InlineEdit(LineRange.fromRangeInclusive(range), removeIndentation(newLines), result.changes);\n      });\n    });\n    this._fetchStore = this._register(new DisposableStore());\n    this._inlineEditsFetchResult = disposableObservableValue(this, undefined);\n    this._inlineEdits = derivedOpts({\n      owner: this,\n      equalsFn: structuralEquals\n    }, reader => {\n      return this._inlineEditsFetchResult.read(reader)?.completions.map(c => new InlineEditData(c)) ?? [];\n    });\n    this._fetchInlineEditsPromise = derivedHandleChanges({\n      owner: this,\n      createEmptyChangeSummary: () => ({\n        inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n      }),\n      handleChange: (ctx, changeSummary) => {\n        /** @description fetch inline completions */\n        if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n          changeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n        }\n        return true;\n      }\n    }, async (reader, changeSummary) => {\n      this._fetchStore.clear();\n      this._forceUpdateExplicitlySignal.read(reader);\n      /*if (!this._isActive.read(reader)) {\n          return undefined;\n      }*/\n      this._textModelVersionId.read(reader);\n      function mapValue(value, fn) {\n        return fn(value);\n      }\n      const selection = this._pinnedRange.range.read(reader) ?? mapValue(this._selection.read(reader), v => v.isEmpty() ? undefined : v);\n      if (!selection) {\n        this._inlineEditsFetchResult.set(undefined, undefined);\n        this.userPrompt.set(undefined, undefined);\n        return undefined;\n      }\n      const context = {\n        triggerKind: changeSummary.inlineCompletionTriggerKind,\n        selectedSuggestionInfo: undefined,\n        userPrompt: this.userPrompt.read(reader)\n      };\n      const token = cancelOnDispose(this._fetchStore);\n      await timeout(200, token);\n      const result = await provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, selection, this.textModel, context, token);\n      if (token.isCancellationRequested) {\n        return;\n      }\n      this._inlineEditsFetchResult.set(result, undefined);\n    });\n    this._filteredInlineEditItems = derivedOpts({\n      owner: this,\n      equalsFn: itemsEquals()\n    }, reader => {\n      return this._inlineEdits.read(reader);\n    });\n    this.selectedInlineCompletionIndex = derived(this, reader => {\n      const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n      const filteredCompletions = this._filteredInlineEditItems.read(reader);\n      const idx = this._selectedInlineCompletionId === undefined ? -1 : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n      if (idx === -1) {\n        // Reset the selection so that the selection does not jump back when it appears again\n        this._selectedInlineCompletionId.set(undefined, undefined);\n        return 0;\n      }\n      return idx;\n    });\n    this.selectedInlineEdit = derived(this, reader => {\n      const filteredCompletions = this._filteredInlineEditItems.read(reader);\n      const idx = this.selectedInlineCompletionIndex.read(reader);\n      return filteredCompletions[idx];\n    });\n    this._register(recomputeInitiallyAndOnChange(this._fetchInlineEditsPromise));\n  }\n  async triggerExplicitly(tx) {\n    subtransaction(tx, tx => {\n      this._isActive.set(true, tx);\n      this._forceUpdateExplicitlySignal.trigger(tx);\n    });\n    await this._fetchInlineEditsPromise.get();\n  }\n  stop(tx) {\n    subtransaction(tx, tx => {\n      this.userPrompt.set(undefined, tx);\n      this._isActive.set(false, tx);\n      this._inlineEditsFetchResult.set(undefined, tx);\n      this._pinnedRange.setRange(undefined, tx);\n      //this._source.clear(tx);\n    });\n  }\n  async _deltaSelectedInlineCompletionIndex(delta) {\n    await this.triggerExplicitly();\n    const completions = this._filteredInlineEditItems.get() || [];\n    if (completions.length > 0) {\n      const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n      this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n    } else {\n      this._selectedInlineCompletionId.set(undefined, undefined);\n    }\n  }\n  async next() {\n    await this._deltaSelectedInlineCompletionIndex(1);\n  }\n  async previous() {\n    await this._deltaSelectedInlineCompletionIndex(-1);\n  }\n  async accept(editor) {\n    if (editor.getModel() !== this.textModel) {\n      throw new BugIndicatingError();\n    }\n    const edit = this.selectedInlineEdit.get();\n    if (!edit) {\n      return;\n    }\n    editor.pushUndoStop();\n    editor.executeEdits('inlineSuggestion.accept', [edit.inlineCompletion.toSingleTextEdit().toSingleEditOperation()]);\n    this.stop();\n  }\n}, InlineEditsModel_1 = _InlineEditsModel, _InlineEditsModel._modelId = 0, _InlineEditsModel);\nInlineEditsModel = InlineEditsModel_1 = __decorate([__param(4, ILanguageFeaturesService), __param(5, IDiffProviderFactoryService), __param(6, IModelService)], InlineEditsModel);\nexport { InlineEditsModel };\nclass InlineEditData {\n  constructor(inlineCompletion) {\n    this.inlineCompletion = inlineCompletion;\n    this.semanticId = this.inlineCompletion.hash();\n  }\n}\nclass TrackedRange extends Disposable {\n  constructor(_textModel, _versionId) {\n    super();\n    this._textModel = _textModel;\n    this._versionId = _versionId;\n    this._decorations = observableValue(this, []);\n    this.range = derived(this, reader => {\n      this._versionId.read(reader);\n      const deco = this._decorations.read(reader)[0];\n      if (!deco) {\n        return null;\n      }\n      return this._textModel.getDecorationRange(deco) ?? null;\n    });\n    this._register(toDisposable(() => {\n      this._textModel.deltaDecorations(this._decorations.get(), []);\n    }));\n  }\n  setRange(range, tx) {\n    this._decorations.set(this._textModel.deltaDecorations(this._decorations.get(), range ? [{\n      range,\n      options: {\n        description: 'trackedRange'\n      }\n    }] : []), tx);\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineEditsModel_1","timeout","CancellationToken","cancelOnDispose","itemsEquals","structuralEquals","BugIndicatingError","Disposable","DisposableStore","toDisposable","ObservablePromise","derived","derivedHandleChanges","derivedOpts","disposableObservableValue","observableSignal","observableValue","recomputeInitiallyAndOnChange","subtransaction","derivedDisposable","URI","IDiffProviderFactoryService","LineRange","InlineCompletionTriggerKind","ILanguageFeaturesService","IModelService","provideInlineCompletions","InlineEdit","InlineEditsModel","_InlineEditsModel","_createUniqueUri","from","scheme","path","Date","toString","String","_modelId","constructor","textModel","_textModelVersionId","_selection","_debounceValue","languageFeaturesService","_diffProviderFactoryService","_modelService","_forceUpdateExplicitlySignal","_selectedInlineCompletionId","undefined","_isActive","_originalModel","createModel","keepObserved","_store","_modifiedModel","_pinnedRange","TrackedRange","isPinned","range","map","userPrompt","inlineEdit","reader","_inlineEdit","read","promiseResult","data","edit","selectedInlineEdit","inlineCompletion","insertText","trim","newLines","split","removeIndentation","lines","indentation","match","l","replace","RegExp","existing","getValueInRange","existingLines","get","setValue","join","createDiffProvider","diffAlgorithm","fromFn","result","computeDiff","computeMoves","ignoreTrimWhitespace","maxComputationTimeMs","None","identical","fromRangeInclusive","changes","_fetchStore","_register","_inlineEditsFetchResult","_inlineEdits","owner","equalsFn","completions","InlineEditData","_fetchInlineEditsPromise","createEmptyChangeSummary","inlineCompletionTriggerKind","Automatic","handleChange","ctx","changeSummary","didChange","Explicit","clear","mapValue","value","fn","selection","v","isEmpty","set","context","triggerKind","selectedSuggestionInfo","token","inlineCompletionsProvider","isCancellationRequested","_filteredInlineEditItems","selectedInlineCompletionIndex","selectedInlineCompletionId","filteredCompletions","idx","findIndex","semanticId","triggerExplicitly","tx","trigger","stop","setRange","_deltaSelectedInlineCompletionIndex","delta","newIdx","next","previous","accept","editor","getModel","pushUndoStop","executeEdits","toSingleTextEdit","toSingleEditOperation","hash","_textModel","_versionId","_decorations","deco","getDecorationRange","deltaDecorations","options","description"],"sources":["P:/IDEA/JudgeX/JudgeX_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineEdits/browser/inlineEditsModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineEditsModel_1;\nimport { timeout } from '../../../../base/common/async.js';\nimport { CancellationToken, cancelOnDispose } from '../../../../base/common/cancellation.js';\nimport { itemsEquals, structuralEquals } from '../../../../base/common/equals.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ObservablePromise, derived, derivedHandleChanges, derivedOpts, disposableObservableValue, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IDiffProviderFactoryService } from '../../../browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { provideInlineCompletions } from '../../inlineCompletions/browser/model/provideInlineCompletions.js';\nimport { InlineEdit } from './inlineEditsWidget.js';\nlet InlineEditsModel = class InlineEditsModel extends Disposable {\n    static { InlineEditsModel_1 = this; }\n    static { this._modelId = 0; }\n    static _createUniqueUri() {\n        return URI.from({ scheme: 'inline-edits', path: new Date().toString() + String(InlineEditsModel_1._modelId++) });\n    }\n    constructor(textModel, _textModelVersionId, _selection, _debounceValue, languageFeaturesService, _diffProviderFactoryService, _modelService) {\n        super();\n        this.textModel = textModel;\n        this._textModelVersionId = _textModelVersionId;\n        this._selection = _selection;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this._diffProviderFactoryService = _diffProviderFactoryService;\n        this._modelService = _modelService;\n        this._forceUpdateExplicitlySignal = observableSignal(this);\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue(this, undefined);\n        this._isActive = observableValue(this, false);\n        this._originalModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel_1._createUniqueUri())).keepObserved(this._store);\n        this._modifiedModel = derivedDisposable(() => this._modelService.createModel('', null, InlineEditsModel_1._createUniqueUri())).keepObserved(this._store);\n        this._pinnedRange = new TrackedRange(this.textModel, this._textModelVersionId);\n        this.isPinned = this._pinnedRange.range.map(range => !!range);\n        this.userPrompt = observableValue(this, undefined);\n        this.inlineEdit = derived(this, reader => {\n            return this._inlineEdit.read(reader)?.promiseResult.read(reader)?.data;\n        });\n        this._inlineEdit = derived(this, reader => {\n            const edit = this.selectedInlineEdit.read(reader);\n            if (!edit) {\n                return undefined;\n            }\n            const range = edit.inlineCompletion.range;\n            if (edit.inlineCompletion.insertText.trim() === '') {\n                return undefined;\n            }\n            let newLines = edit.inlineCompletion.insertText.split(/\\r\\n|\\r|\\n/);\n            function removeIndentation(lines) {\n                const indentation = lines[0].match(/^\\s*/)?.[0] ?? '';\n                return lines.map(l => l.replace(new RegExp('^' + indentation), ''));\n            }\n            newLines = removeIndentation(newLines);\n            const existing = this.textModel.getValueInRange(range);\n            let existingLines = existing.split(/\\r\\n|\\r|\\n/);\n            existingLines = removeIndentation(existingLines);\n            this._originalModel.get().setValue(existingLines.join('\\n'));\n            this._modifiedModel.get().setValue(newLines.join('\\n'));\n            const d = this._diffProviderFactoryService.createDiffProvider({ diffAlgorithm: 'advanced' });\n            return ObservablePromise.fromFn(async () => {\n                const result = await d.computeDiff(this._originalModel.get(), this._modifiedModel.get(), {\n                    computeMoves: false,\n                    ignoreTrimWhitespace: false,\n                    maxComputationTimeMs: 1000,\n                }, CancellationToken.None);\n                if (result.identical) {\n                    return undefined;\n                }\n                return new InlineEdit(LineRange.fromRangeInclusive(range), removeIndentation(newLines), result.changes);\n            });\n        });\n        this._fetchStore = this._register(new DisposableStore());\n        this._inlineEditsFetchResult = disposableObservableValue(this, undefined);\n        this._inlineEdits = derivedOpts({ owner: this, equalsFn: structuralEquals }, reader => {\n            return this._inlineEditsFetchResult.read(reader)?.completions.map(c => new InlineEditData(c)) ?? [];\n        });\n        this._fetchInlineEditsPromise = derivedHandleChanges({\n            owner: this,\n            createEmptyChangeSummary: () => ({\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                /** @description fetch inline completions */\n                if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n                    changeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n                }\n                return true;\n            },\n        }, async (reader, changeSummary) => {\n            this._fetchStore.clear();\n            this._forceUpdateExplicitlySignal.read(reader);\n            /*if (!this._isActive.read(reader)) {\n                return undefined;\n            }*/\n            this._textModelVersionId.read(reader);\n            function mapValue(value, fn) {\n                return fn(value);\n            }\n            const selection = this._pinnedRange.range.read(reader) ?? mapValue(this._selection.read(reader), v => v.isEmpty() ? undefined : v);\n            if (!selection) {\n                this._inlineEditsFetchResult.set(undefined, undefined);\n                this.userPrompt.set(undefined, undefined);\n                return undefined;\n            }\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: undefined,\n                userPrompt: this.userPrompt.read(reader),\n            };\n            const token = cancelOnDispose(this._fetchStore);\n            await timeout(200, token);\n            const result = await provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, selection, this.textModel, context, token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            this._inlineEditsFetchResult.set(result, undefined);\n        });\n        this._filteredInlineEditItems = derivedOpts({ owner: this, equalsFn: itemsEquals() }, reader => {\n            return this._inlineEdits.read(reader);\n        });\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineEditItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineEdit = derived(this, (reader) => {\n            const filteredCompletions = this._filteredInlineEditItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineEditsPromise));\n    }\n    async triggerExplicitly(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(true, tx);\n            this._forceUpdateExplicitlySignal.trigger(tx);\n        });\n        await this._fetchInlineEditsPromise.get();\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this.userPrompt.set(undefined, tx);\n            this._isActive.set(false, tx);\n            this._inlineEditsFetchResult.set(undefined, tx);\n            this._pinnedRange.setRange(undefined, tx);\n            //this._source.clear(tx);\n        });\n    }\n    async _deltaSelectedInlineCompletionIndex(delta) {\n        await this.triggerExplicitly();\n        const completions = this._filteredInlineEditItems.get() || [];\n        if (completions.length > 0) {\n            const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n            this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n        }\n        else {\n            this._selectedInlineCompletionId.set(undefined, undefined);\n        }\n    }\n    async next() {\n        await this._deltaSelectedInlineCompletionIndex(1);\n    }\n    async previous() {\n        await this._deltaSelectedInlineCompletionIndex(-1);\n    }\n    async accept(editor) {\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const edit = this.selectedInlineEdit.get();\n        if (!edit) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits('inlineSuggestion.accept', [\n            edit.inlineCompletion.toSingleTextEdit().toSingleEditOperation()\n        ]);\n        this.stop();\n    }\n};\nInlineEditsModel = InlineEditsModel_1 = __decorate([\n    __param(4, ILanguageFeaturesService),\n    __param(5, IDiffProviderFactoryService),\n    __param(6, IModelService)\n], InlineEditsModel);\nexport { InlineEditsModel };\nclass InlineEditData {\n    constructor(inlineCompletion) {\n        this.inlineCompletion = inlineCompletion;\n        this.semanticId = this.inlineCompletion.hash();\n    }\n}\nclass TrackedRange extends Disposable {\n    constructor(_textModel, _versionId) {\n        super();\n        this._textModel = _textModel;\n        this._versionId = _versionId;\n        this._decorations = observableValue(this, []);\n        this.range = derived(this, reader => {\n            this._versionId.read(reader);\n            const deco = this._decorations.read(reader)[0];\n            if (!deco) {\n                return null;\n            }\n            return this._textModel.getDecorationRange(deco) ?? null;\n        });\n        this._register(toDisposable(() => {\n            this._textModel.deltaDecorations(this._decorations.get(), []);\n        }));\n    }\n    setRange(range, tx) {\n        this._decorations.set(this._textModel.deltaDecorations(this._decorations.get(), range ? [{ range, options: { description: 'trackedRange' } }] : []), tx);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}